{"id":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\whatwg-encoding\\package.json","includedInParent":true,"mtime":1557646991300},{"name":"iconv-lite","loc":{"line":2,"column":26},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\whatwg-encoding\\lib\\whatwg-encoding.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\whatwg-encoding\\node_modules\\iconv-lite\\lib\\index.js"},{"name":"./supported-names.json","loc":{"line":3,"column":31},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\whatwg-encoding\\lib\\whatwg-encoding.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\whatwg-encoding\\lib\\supported-names.json"},{"name":"./labels-to-names.json","loc":{"line":4,"column":30},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\whatwg-encoding\\lib\\whatwg-encoding.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\whatwg-encoding\\lib\\labels-to-names.json"}],"generated":{"js":"\"use strict\";\nconst iconvLite = require(\"iconv-lite\");\nconst supportedNames = require(\"./supported-names.json\");\nconst labelsToNames = require(\"./labels-to-names.json\");\n\nconst supportedNamesSet = new Set(supportedNames);\n\n// https://encoding.spec.whatwg.org/#concept-encoding-get\nexports.labelToName = label => {\n  label = String(label).trim().toLowerCase();\n\n  return labelsToNames[label] || null;\n};\n\n// https://encoding.spec.whatwg.org/#decode\nexports.decode = (buffer, fallbackEncodingName) => {\n  let encoding = fallbackEncodingName;\n  if (!exports.isSupported(encoding)) {\n    throw new RangeError(`\"${encoding}\" is not a supported encoding name`);\n  }\n\n  const bomEncoding = exports.getBOMEncoding(buffer);\n  if (bomEncoding !== null) {\n    encoding = bomEncoding;\n  }\n\n  // iconv-lite will strip BOMs for us, so no need to do the stuff the spec does\n\n  return iconvLite.decode(buffer, encoding);\n};\n\n// https://github.com/whatwg/html/issues/1910#issuecomment-254017369\nexports.getBOMEncoding = buffer => {\n  if (buffer[0] === 0xFE && buffer[1] === 0xFF) {\n    return \"UTF-16BE\";\n  } else if (buffer[0] === 0xFF && buffer[1] === 0xFE) {\n    return \"UTF-16LE\";\n  } else if (buffer[0] === 0xEF && buffer[1] === 0xBB && buffer[2] === 0xBF) {\n    return \"UTF-8\";\n  }\n\n  return null;\n};\n\nexports.isSupported = name => {\n  return supportedNamesSet.has(String(name));\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"node_modules/jsdom/node_modules/whatwg-encoding/lib/whatwg-encoding.js":"\"use strict\";\nconst iconvLite = require(\"iconv-lite\");\nconst supportedNames = require(\"./supported-names.json\");\nconst labelsToNames = require(\"./labels-to-names.json\");\n\nconst supportedNamesSet = new Set(supportedNames);\n\n// https://encoding.spec.whatwg.org/#concept-encoding-get\nexports.labelToName = label => {\n  label = String(label).trim().toLowerCase();\n\n  return labelsToNames[label] || null;\n};\n\n// https://encoding.spec.whatwg.org/#decode\nexports.decode = (buffer, fallbackEncodingName) => {\n  let encoding = fallbackEncodingName;\n  if (!exports.isSupported(encoding)) {\n    throw new RangeError(`\"${encoding}\" is not a supported encoding name`);\n  }\n\n  const bomEncoding = exports.getBOMEncoding(buffer);\n  if (bomEncoding !== null) {\n    encoding = bomEncoding;\n  }\n\n  // iconv-lite will strip BOMs for us, so no need to do the stuff the spec does\n\n  return iconvLite.decode(buffer, encoding);\n};\n\n// https://github.com/whatwg/html/issues/1910#issuecomment-254017369\nexports.getBOMEncoding = buffer => {\n  if (buffer[0] === 0xFE && buffer[1] === 0xFF) {\n    return \"UTF-16BE\";\n  } else if (buffer[0] === 0xFF && buffer[1] === 0xFE) {\n    return \"UTF-16LE\";\n  } else if (buffer[0] === 0xEF && buffer[1] === 0xBB && buffer[2] === 0xBF) {\n    return \"UTF-8\";\n  }\n\n  return null;\n};\n\nexports.isSupported = name => {\n  return supportedNamesSet.has(String(name));\n};\n"},"lineCount":48}},"error":null,"hash":"32978411b0891f20ba0420d7722cc508","cacheData":{"env":{}}}