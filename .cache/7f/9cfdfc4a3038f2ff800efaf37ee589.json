{"id":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\package.json","includedInParent":true,"mtime":1557646988018},{"name":"./internal-constants","loc":{"line":2,"column":34},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\helpers\\text.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\helpers\\internal-constants.js"},{"name":"../node-type","loc":{"line":3,"column":30},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\helpers\\text.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\node-type.js"}],"generated":{"js":"\"use strict\";\nconst { domSymbolTree } = require(\"./internal-constants\");\nconst { TEXT_NODE } = require(\"../node-type\");\n\nexports.childTextContent = node => {\n  let result = \"\";\n  const iterator = domSymbolTree.childrenIterator(node);\n  for (const child of iterator) {\n    if (child.nodeType === TEXT_NODE) {\n      result += child.data;\n    }\n  }\n  return result;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/text.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}}],"sources":{"node_modules/jsdom/lib/jsdom/living/helpers/text.js":"\"use strict\";\nconst { domSymbolTree } = require(\"./internal-constants\");\nconst { TEXT_NODE } = require(\"../node-type\");\n\nexports.childTextContent = node => {\n  let result = \"\";\n  const iterator = domSymbolTree.childrenIterator(node);\n  for (const child of iterator) {\n    if (child.nodeType === TEXT_NODE) {\n      result += child.data;\n    }\n  }\n  return result;\n};\n"},"lineCount":15}},"error":null,"hash":"25cd45eae4d0e5669f0e024b33a3f3c4","cacheData":{"env":{}}}