{"id":"node_modules/turf-point-grid/index.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557726847338},{"name":"C:\\桌面\\new-project\\node_modules\\turf-point-grid\\package.json","includedInParent":true,"mtime":1557726826215},{"name":"turf-helpers","loc":{"line":2,"column":32},"parent":"C:\\桌面\\new-project\\node_modules\\turf-point-grid\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-helpers\\index.js"},{"name":"turf-distance","loc":{"line":3,"column":23},"parent":"C:\\桌面\\new-project\\node_modules\\turf-point-grid\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-distance\\index.js"}],"generated":{"js":"var point = require('turf-helpers').point;\nvar featurecollection = require('turf-helpers').featureCollection;\nvar distance = require('turf-distance');\n/**\n * Takes a bounding box and a cell depth and returns a set of {@link Point|points} in a grid.\n *\n * @name pointGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSize the distance across each cell\n * @param {string} [units=kilometers] used in calculating cellWidth, can be degrees, radians, miles, or kilometers\n * @return {FeatureCollection<Point>} grid of points\n * @example\n * var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n * var cellWidth = 3;\n * var units = 'miles';\n *\n * var grid = turf.pointGrid(extent, cellWidth, units);\n *\n * //=grid\n */\nmodule.exports = function pointGrid(bbox, cellSize, units) {\n    var fc = featurecollection([]);\n    var xFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[2], bbox[1]]), units));\n    var cellWidth = xFraction * (bbox[2] - bbox[0]);\n    var yFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[0], bbox[3]]), units));\n    var cellHeight = yFraction * (bbox[3] - bbox[1]);\n\n    var currentX = bbox[0];\n    while (currentX <= bbox[2]) {\n        var currentY = bbox[1];\n        while (currentY <= bbox[3]) {\n            fc.features.push(point([currentX, currentY]));\n\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n\n    return fc;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/turf-point-grid/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/turf-point-grid/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules/turf-point-grid/index.js":"var point = require('turf-helpers').point;\nvar featurecollection = require('turf-helpers').featureCollection;\nvar distance = require('turf-distance');\n/**\n * Takes a bounding box and a cell depth and returns a set of {@link Point|points} in a grid.\n *\n * @name pointGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSize the distance across each cell\n * @param {string} [units=kilometers] used in calculating cellWidth, can be degrees, radians, miles, or kilometers\n * @return {FeatureCollection<Point>} grid of points\n * @example\n * var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n * var cellWidth = 3;\n * var units = 'miles';\n *\n * var grid = turf.pointGrid(extent, cellWidth, units);\n *\n * //=grid\n */\nmodule.exports = function pointGrid(bbox, cellSize, units) {\n    var fc = featurecollection([]);\n    var xFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[2], bbox[1]]), units));\n    var cellWidth = xFraction * (bbox[2] - bbox[0]);\n    var yFraction = cellSize / (distance(point([bbox[0], bbox[1]]), point([bbox[0], bbox[3]]), units));\n    var cellHeight = yFraction * (bbox[3] - bbox[1]);\n\n    var currentX = bbox[0];\n    while (currentX <= bbox[2]) {\n        var currentY = bbox[1];\n        while (currentY <= bbox[3]) {\n            fc.features.push(point([currentX, currentY]));\n\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n\n    return fc;\n};\n"},"lineCount":41}},"error":null,"hash":"7d9da6db9280b53379039446dd19d8f7","cacheData":{"env":{}}}