{"id":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\package.json","includedInParent":true,"mtime":1557646988018},{"name":"../generated/Document","loc":{"line":2,"column":25},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\domparsing\\DOMParser-impl.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\generated\\Document.js"},{"name":"../../browser/documentfeatures","loc":{"line":3,"column":42},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\domparsing\\DOMParser-impl.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\browser\\documentfeatures.js"}],"generated":{"js":"\"use strict\";\nconst Document = require(\"../generated/Document\");\nconst { applyDocumentFeatures } = require(\"../../browser/documentfeatures\");\n\nexports.implementation = class DOMParserImpl {\n  parseFromString(string, contentType) {\n    switch (String(contentType)) {\n      case \"text/html\": {\n        return createScriptingDisabledDocument(\"html\", contentType, string);\n      }\n\n      case \"text/xml\":\n      case \"application/xml\":\n      case \"application/xhtml+xml\":\n      case \"image/svg+xml\": {\n        // TODO: use a strict XML parser (sax's strict mode might work?) and create parsererror elements\n        try {\n          return createScriptingDisabledDocument(\"xml\", contentType, string);\n        } catch (error) {\n          const document = createScriptingDisabledDocument(\"xml\", contentType);\n          const element = document.createElementNS(\"http://www.mozilla.org/newlayout/xml/parsererror.xml\", \"parsererror\");\n\n          element.textContent = error.message;\n\n          document.appendChild(element);\n          return document;\n        }\n      }\n\n      default:\n        throw new TypeError(\"Invalid contentType\");\n    }\n  }\n};\n\nfunction createScriptingDisabledDocument(parsingMode, contentType, string) {\n  const document = Document.createImpl([], {\n    options: {\n      parsingMode,\n      encoding: \"UTF-8\",\n      contentType\n      // TODO: somehow set URL to active document's URL\n    }\n  });\n\n  // \"scripting enabled\" set to false\n  applyDocumentFeatures(document, {\n    FetchExternalResources: [],\n    SkipExternalResources: false\n  });\n\n  if (string !== undefined) {\n    document._htmlToDom.appendToDocument(string, document);\n  }\n  document.close();\n  return document;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"node_modules/jsdom/lib/jsdom/living/domparsing/DOMParser-impl.js":"\"use strict\";\nconst Document = require(\"../generated/Document\");\nconst { applyDocumentFeatures } = require(\"../../browser/documentfeatures\");\n\nexports.implementation = class DOMParserImpl {\n  parseFromString(string, contentType) {\n    switch (String(contentType)) {\n      case \"text/html\": {\n        return createScriptingDisabledDocument(\"html\", contentType, string);\n      }\n\n      case \"text/xml\":\n      case \"application/xml\":\n      case \"application/xhtml+xml\":\n      case \"image/svg+xml\": {\n        // TODO: use a strict XML parser (sax's strict mode might work?) and create parsererror elements\n        try {\n          return createScriptingDisabledDocument(\"xml\", contentType, string);\n        } catch (error) {\n          const document = createScriptingDisabledDocument(\"xml\", contentType);\n          const element = document.createElementNS(\"http://www.mozilla.org/newlayout/xml/parsererror.xml\", \"parsererror\");\n\n          element.textContent = error.message;\n\n          document.appendChild(element);\n          return document;\n        }\n      }\n\n      default:\n        throw new TypeError(\"Invalid contentType\");\n    }\n  }\n};\n\nfunction createScriptingDisabledDocument(parsingMode, contentType, string) {\n  const document = Document.createImpl([], {\n    options: {\n      parsingMode,\n      encoding: \"UTF-8\",\n      contentType\n      // TODO: somehow set URL to active document's URL\n    }\n  });\n\n  // \"scripting enabled\" set to false\n  applyDocumentFeatures(document, {\n    FetchExternalResources: [],\n    SkipExternalResources: false\n  });\n\n  if (string !== undefined) {\n    document._htmlToDom.appendToDocument(string, document);\n  }\n  document.close();\n  return document;\n}\n"},"lineCount":58}},"error":null,"hash":"2f2d38f1a4de611e2a7f1396dd51c34e","cacheData":{"env":{}}}