{"id":"node_modules/turf-sample/index.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557726847338},{"name":"C:\\桌面\\new-project\\node_modules\\turf-sample\\package.json","includedInParent":true,"mtime":1557726826220},{"name":"turf-helpers","loc":{"line":2,"column":32},"parent":"C:\\桌面\\new-project\\node_modules\\turf-sample\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-helpers\\index.js"}],"generated":{"js":"// http://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\nvar featureCollection = require('turf-helpers').featureCollection;\n\n/**\n * Takes a {@link FeatureCollection} and returns a FeatureCollection with given number of {@link Feature|features} at random.\n *\n * @name sample\n * @param {FeatureCollection} featurecollection set of input features\n * @param {number} num number of features to select\n * @return {FeatureCollection} a FeatureCollection with `n` features\n * @example\n * var points = turf.random('points', 1000);\n *\n * //=points\n *\n * var sample = turf.sample(points, 10);\n *\n * //=sample\n */\nmodule.exports = function (featurecollection, num) {\n    var outFC = featureCollection(getRandomSubarray(featurecollection.features, num));\n    return outFC;\n};\n\nfunction getRandomSubarray(arr, size) {\n    var shuffled = arr.slice(0), i = arr.length, min = i - size, temp, index;\n    while (i-- > min) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(min);\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/turf-sample/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/turf-sample/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}}],"sources":{"node_modules/turf-sample/index.js":"// http://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\nvar featureCollection = require('turf-helpers').featureCollection;\n\n/**\n * Takes a {@link FeatureCollection} and returns a FeatureCollection with given number of {@link Feature|features} at random.\n *\n * @name sample\n * @param {FeatureCollection} featurecollection set of input features\n * @param {number} num number of features to select\n * @return {FeatureCollection} a FeatureCollection with `n` features\n * @example\n * var points = turf.random('points', 1000);\n *\n * //=points\n *\n * var sample = turf.sample(points, 10);\n *\n * //=sample\n */\nmodule.exports = function (featurecollection, num) {\n    var outFC = featureCollection(getRandomSubarray(featurecollection.features, num));\n    return outFC;\n};\n\nfunction getRandomSubarray(arr, size) {\n    var shuffled = arr.slice(0), i = arr.length, min = i - size, temp, index;\n    while (i-- > min) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(min);\n}\n"},"lineCount":35}},"error":null,"hash":"4b1eece8082714e8a4be1d7159ef51b8","cacheData":{"env":{}}}