{"id":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\data-urls\\node_modules\\whatwg-mimetype\\package.json","includedInParent":true,"mtime":1557646991362},{"name":"./utils.js","loc":{"line":2,"column":54},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\data-urls\\node_modules\\whatwg-mimetype\\lib\\serializer.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\data-urls\\node_modules\\whatwg-mimetype\\lib\\utils.js"}],"generated":{"js":"\"use strict\";\nconst { solelyContainsHTTPTokenCodePoints } = require(\"./utils.js\");\n\nmodule.exports = mimeType => {\n  let serialization = `${mimeType.type}/${mimeType.subtype}`;\n\n  if (mimeType.parameters.size === 0) {\n    return serialization;\n  }\n\n  for (let [name, value] of mimeType.parameters) {\n    serialization += \";\";\n    serialization += name;\n    serialization += \"=\";\n\n    if (!solelyContainsHTTPTokenCodePoints(value) || value.length === 0) {\n      value = value.replace(/([\"\\\\])/g, \"\\\\$1\");\n      value = `\"${value}\"`;\n    }\n\n    serialization += value;\n  }\n\n  return serialization;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"node_modules/jsdom/node_modules/data-urls/node_modules/whatwg-mimetype/lib/serializer.js":"\"use strict\";\nconst { solelyContainsHTTPTokenCodePoints } = require(\"./utils.js\");\n\nmodule.exports = mimeType => {\n  let serialization = `${mimeType.type}/${mimeType.subtype}`;\n\n  if (mimeType.parameters.size === 0) {\n    return serialization;\n  }\n\n  for (let [name, value] of mimeType.parameters) {\n    serialization += \";\";\n    serialization += name;\n    serialization += \"=\";\n\n    if (!solelyContainsHTTPTokenCodePoints(value) || value.length === 0) {\n      value = value.replace(/([\"\\\\])/g, \"\\\\$1\");\n      value = `\"${value}\"`;\n    }\n\n    serialization += value;\n  }\n\n  return serialization;\n};\n"},"lineCount":26}},"error":null,"hash":"fb0f1839de8cf018035752f61b4d15af","cacheData":{"env":{}}}