{"id":"node_modules/turf-tesselate/index.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557726847338},{"name":"C:\\桌面\\new-project\\node_modules\\turf-tesselate\\package.json","includedInParent":true,"mtime":1557726826359},{"name":"turf-helpers","loc":{"line":1,"column":22},"parent":"C:\\桌面\\new-project\\node_modules\\turf-tesselate\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-helpers\\index.js"},{"name":"earcut","loc":{"line":2,"column":21},"parent":"C:\\桌面\\new-project\\node_modules\\turf-tesselate\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\earcut\\src\\earcut.js"}],"generated":{"js":"var polygon = require('turf-helpers').polygon;\nvar earcut = require('earcut');\n\n/**\n * Tesselates a {@link Feature<Polygon>} into a {@link FeatureCollection<Polygon>} of triangles\n * using [earcut](https://github.com/mapbox/earcut).\n *\n * @name tesselate\n * @param {Feature<Polygon>} polygon the polygon to tesselate\n * @returns {FeatureCollection<Polygon>} a geometrycollection feature\n * @example\n * var polygon = {\"type\":\"Feature\",\"id\":\"USA-CA\",\"properties\":{\"name\":\"California\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-123.233256,42.006186],[-122.378853,42.011663],[-121.037003,41.995232],[-120.001861,41.995232],[-119.996384,40.264519],[-120.001861,38.999346],[-118.71478,38.101128],[-117.498899,37.21934],[-116.540435,36.501861],[-115.85034,35.970598],[-114.634459,35.00118],[-114.634459,34.87521],[-114.470151,34.710902],[-114.333228,34.448009],[-114.136058,34.305608],[-114.256551,34.174162],[-114.415382,34.108438],[-114.535874,33.933176],[-114.497536,33.697668],[-114.524921,33.54979],[-114.727567,33.40739],[-114.661844,33.034958],[-114.524921,33.029481],[-114.470151,32.843265],[-114.524921,32.755634],[-114.72209,32.717295],[-116.04751,32.624187],[-117.126467,32.536556],[-117.24696,32.668003],[-117.252437,32.876127],[-117.329114,33.122589],[-117.471515,33.297851],[-117.7837,33.538836],[-118.183517,33.763391],[-118.260194,33.703145],[-118.413548,33.741483],[-118.391641,33.840068],[-118.566903,34.042715],[-118.802411,33.998899],[-119.218659,34.146777],[-119.278905,34.26727],[-119.558229,34.415147],[-119.875891,34.40967],[-120.138784,34.475393],[-120.472878,34.448009],[-120.64814,34.579455],[-120.609801,34.858779],[-120.670048,34.902595],[-120.631709,35.099764],[-120.894602,35.247642],[-120.905556,35.450289],[-121.004141,35.461243],[-121.168449,35.636505],[-121.283465,35.674843],[-121.332757,35.784382],[-121.716143,36.195153],[-121.896882,36.315645],[-121.935221,36.638785],[-121.858544,36.6114],[-121.787344,36.803093],[-121.929744,36.978355],[-122.105006,36.956447],[-122.335038,37.115279],[-122.417192,37.241248],[-122.400761,37.361741],[-122.515777,37.520572],[-122.515777,37.783465],[-122.329561,37.783465],[-122.406238,38.15042],[-122.488392,38.112082],[-122.504823,37.931343],[-122.701993,37.893004],[-122.937501,38.029928],[-122.97584,38.265436],[-123.129194,38.451652],[-123.331841,38.566668],[-123.44138,38.698114],[-123.737134,38.95553],[-123.687842,39.032208],[-123.824765,39.366301],[-123.764519,39.552517],[-123.85215,39.831841],[-124.109566,40.105688],[-124.361506,40.259042],[-124.410798,40.439781],[-124.158859,40.877937],[-124.109566,41.025814],[-124.158859,41.14083],[-124.065751,41.442061],[-124.147905,41.715908],[-124.257444,41.781632],[-124.213628,42.000709],[-123.233256,42.006186]]]}};\n *\n * var triangles = turf.tesselate(polygon);\n *\n * //=triangles\n */\n\nmodule.exports = function (poly) {\n    if (!poly.geometry || (poly.geometry.type !== 'Polygon' && poly.geometry.type !== 'MultiPolygon')) {\n        throw new Error('input must be a Polygon or MultiPolygon');\n    }\n\n    var fc = {type: 'FeatureCollection', features: []};\n\n    if (poly.geometry.type === 'Polygon') {\n        fc.features = processPolygon(poly.geometry.coordinates);\n    } else {\n        poly.geometry.coordinates.forEach(function (coordinates) {\n            fc.features = fc.features.concat(processPolygon(coordinates));\n        });\n    }\n\n    return fc;\n};\n\nfunction processPolygon(coordinates) {\n    var data = flattenCoords(coordinates);\n    var dim = 2;\n    var result = earcut(data.vertices, data.holes, dim);\n\n    var features = [];\n    var vertices = [];\n\n    result.forEach(function (vert, i) {\n        var index = result[i];\n        vertices.push([data.vertices[index * dim], data.vertices[index * dim + 1]]);\n    });\n\n    for (var i = 0; i < vertices.length; i += 3) {\n        var coords = vertices.slice(i, i + 3);\n        coords.push(vertices[i]);\n        features.push(polygon([coords]));\n    }\n\n    return features;\n}\n\nfunction flattenCoords(data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n\n    return result;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/turf-tesselate/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/turf-tesselate/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}}],"sources":{"node_modules/turf-tesselate/index.js":"var polygon = require('turf-helpers').polygon;\nvar earcut = require('earcut');\n\n/**\n * Tesselates a {@link Feature<Polygon>} into a {@link FeatureCollection<Polygon>} of triangles\n * using [earcut](https://github.com/mapbox/earcut).\n *\n * @name tesselate\n * @param {Feature<Polygon>} polygon the polygon to tesselate\n * @returns {FeatureCollection<Polygon>} a geometrycollection feature\n * @example\n * var polygon = {\"type\":\"Feature\",\"id\":\"USA-CA\",\"properties\":{\"name\":\"California\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-123.233256,42.006186],[-122.378853,42.011663],[-121.037003,41.995232],[-120.001861,41.995232],[-119.996384,40.264519],[-120.001861,38.999346],[-118.71478,38.101128],[-117.498899,37.21934],[-116.540435,36.501861],[-115.85034,35.970598],[-114.634459,35.00118],[-114.634459,34.87521],[-114.470151,34.710902],[-114.333228,34.448009],[-114.136058,34.305608],[-114.256551,34.174162],[-114.415382,34.108438],[-114.535874,33.933176],[-114.497536,33.697668],[-114.524921,33.54979],[-114.727567,33.40739],[-114.661844,33.034958],[-114.524921,33.029481],[-114.470151,32.843265],[-114.524921,32.755634],[-114.72209,32.717295],[-116.04751,32.624187],[-117.126467,32.536556],[-117.24696,32.668003],[-117.252437,32.876127],[-117.329114,33.122589],[-117.471515,33.297851],[-117.7837,33.538836],[-118.183517,33.763391],[-118.260194,33.703145],[-118.413548,33.741483],[-118.391641,33.840068],[-118.566903,34.042715],[-118.802411,33.998899],[-119.218659,34.146777],[-119.278905,34.26727],[-119.558229,34.415147],[-119.875891,34.40967],[-120.138784,34.475393],[-120.472878,34.448009],[-120.64814,34.579455],[-120.609801,34.858779],[-120.670048,34.902595],[-120.631709,35.099764],[-120.894602,35.247642],[-120.905556,35.450289],[-121.004141,35.461243],[-121.168449,35.636505],[-121.283465,35.674843],[-121.332757,35.784382],[-121.716143,36.195153],[-121.896882,36.315645],[-121.935221,36.638785],[-121.858544,36.6114],[-121.787344,36.803093],[-121.929744,36.978355],[-122.105006,36.956447],[-122.335038,37.115279],[-122.417192,37.241248],[-122.400761,37.361741],[-122.515777,37.520572],[-122.515777,37.783465],[-122.329561,37.783465],[-122.406238,38.15042],[-122.488392,38.112082],[-122.504823,37.931343],[-122.701993,37.893004],[-122.937501,38.029928],[-122.97584,38.265436],[-123.129194,38.451652],[-123.331841,38.566668],[-123.44138,38.698114],[-123.737134,38.95553],[-123.687842,39.032208],[-123.824765,39.366301],[-123.764519,39.552517],[-123.85215,39.831841],[-124.109566,40.105688],[-124.361506,40.259042],[-124.410798,40.439781],[-124.158859,40.877937],[-124.109566,41.025814],[-124.158859,41.14083],[-124.065751,41.442061],[-124.147905,41.715908],[-124.257444,41.781632],[-124.213628,42.000709],[-123.233256,42.006186]]]}};\n *\n * var triangles = turf.tesselate(polygon);\n *\n * //=triangles\n */\n\nmodule.exports = function (poly) {\n    if (!poly.geometry || (poly.geometry.type !== 'Polygon' && poly.geometry.type !== 'MultiPolygon')) {\n        throw new Error('input must be a Polygon or MultiPolygon');\n    }\n\n    var fc = {type: 'FeatureCollection', features: []};\n\n    if (poly.geometry.type === 'Polygon') {\n        fc.features = processPolygon(poly.geometry.coordinates);\n    } else {\n        poly.geometry.coordinates.forEach(function (coordinates) {\n            fc.features = fc.features.concat(processPolygon(coordinates));\n        });\n    }\n\n    return fc;\n};\n\nfunction processPolygon(coordinates) {\n    var data = flattenCoords(coordinates);\n    var dim = 2;\n    var result = earcut(data.vertices, data.holes, dim);\n\n    var features = [];\n    var vertices = [];\n\n    result.forEach(function (vert, i) {\n        var index = result[i];\n        vertices.push([data.vertices[index * dim], data.vertices[index * dim + 1]]);\n    });\n\n    for (var i = 0; i < vertices.length; i += 3) {\n        var coords = vertices.slice(i, i + 3);\n        coords.push(vertices[i]);\n        features.push(polygon([coords]));\n    }\n\n    return features;\n}\n\nfunction flattenCoords(data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n\n    return result;\n}\n"},"lineCount":76}},"error":null,"hash":"9d2df3600762a5018f1bedf92eed1d76","cacheData":{"env":{}}}