{"id":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\data-urls\\package.json","includedInParent":true,"mtime":1557646988867},{"name":"whatwg-mimetype","loc":{"line":2,"column":25},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\data-urls\\lib\\parser.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\data-urls\\node_modules\\whatwg-mimetype\\lib\\mime-type.js"},{"name":"whatwg-url","loc":{"line":3,"column":43},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\data-urls\\lib\\parser.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\data-urls\\node_modules\\whatwg-url\\lib\\public-api.js"},{"name":"./utils.js","loc":{"line":9,"column":12},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\data-urls\\lib\\parser.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\data-urls\\lib\\utils.js"}],"generated":{"js":"\"use strict\";\nconst MIMEType = require(\"whatwg-mimetype\");\nconst { parseURL, serializeURL } = require(\"whatwg-url\");\nconst {\n  stripLeadingAndTrailingASCIIWhitespace,\n  stringPercentDecode,\n  isomorphicDecode,\n  forgivingBase64Decode\n} = require(\"./utils.js\");\n\nmodule.exports = stringInput => {\n  const urlRecord = parseURL(stringInput);\n\n  if (urlRecord === null) {\n    return null;\n  }\n\n  return module.exports.fromURLRecord(urlRecord);\n};\n\nmodule.exports.fromURLRecord = urlRecord => {\n  if (urlRecord.scheme !== \"data\") {\n    return null;\n  }\n\n  const input = serializeURL(urlRecord, true).substring(\"data:\".length);\n\n  let position = 0;\n\n  let mimeType = \"\";\n  while (position < input.length && input[position] !== \",\") {\n    mimeType += input[position];\n    ++position;\n  }\n  mimeType = stripLeadingAndTrailingASCIIWhitespace(mimeType);\n\n  if (position === input.length) {\n    return null;\n  }\n\n  ++position;\n\n  const encodedBody = input.substring(position);\n\n  let body = stringPercentDecode(encodedBody);\n\n  // Can't use /i regexp flag because it isn't restricted to ASCII.\n  const mimeTypeBase64MatchResult = /(.*); *[Bb][Aa][Ss][Ee]64$/.exec(mimeType);\n  if (mimeTypeBase64MatchResult) {\n    const stringBody = isomorphicDecode(body);\n    body = forgivingBase64Decode(stringBody);\n\n    if (body === null) {\n      return null;\n    }\n    mimeType = mimeTypeBase64MatchResult[1];\n  }\n\n  if (mimeType.startsWith(\";\")) {\n    mimeType = \"text/plain\" + mimeType;\n  }\n\n  let mimeTypeRecord;\n  try {\n    mimeTypeRecord = new MIMEType(mimeType);\n  } catch (e) {\n    mimeTypeRecord = new MIMEType(\"text/plain;charset=US-ASCII\");\n  }\n\n  return {\n    mimeType: mimeTypeRecord,\n    body\n  };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jsdom/node_modules/data-urls/lib/parser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/jsdom/node_modules/data-urls/lib/parser.js":"\"use strict\";\nconst MIMEType = require(\"whatwg-mimetype\");\nconst { parseURL, serializeURL } = require(\"whatwg-url\");\nconst {\n  stripLeadingAndTrailingASCIIWhitespace,\n  stringPercentDecode,\n  isomorphicDecode,\n  forgivingBase64Decode\n} = require(\"./utils.js\");\n\nmodule.exports = stringInput => {\n  const urlRecord = parseURL(stringInput);\n\n  if (urlRecord === null) {\n    return null;\n  }\n\n  return module.exports.fromURLRecord(urlRecord);\n};\n\nmodule.exports.fromURLRecord = urlRecord => {\n  if (urlRecord.scheme !== \"data\") {\n    return null;\n  }\n\n  const input = serializeURL(urlRecord, true).substring(\"data:\".length);\n\n  let position = 0;\n\n  let mimeType = \"\";\n  while (position < input.length && input[position] !== \",\") {\n    mimeType += input[position];\n    ++position;\n  }\n  mimeType = stripLeadingAndTrailingASCIIWhitespace(mimeType);\n\n  if (position === input.length) {\n    return null;\n  }\n\n  ++position;\n\n  const encodedBody = input.substring(position);\n\n  let body = stringPercentDecode(encodedBody);\n\n  // Can't use /i regexp flag because it isn't restricted to ASCII.\n  const mimeTypeBase64MatchResult = /(.*); *[Bb][Aa][Ss][Ee]64$/.exec(mimeType);\n  if (mimeTypeBase64MatchResult) {\n    const stringBody = isomorphicDecode(body);\n    body = forgivingBase64Decode(stringBody);\n\n    if (body === null) {\n      return null;\n    }\n    mimeType = mimeTypeBase64MatchResult[1];\n  }\n\n  if (mimeType.startsWith(\";\")) {\n    mimeType = \"text/plain\" + mimeType;\n  }\n\n  let mimeTypeRecord;\n  try {\n    mimeTypeRecord = new MIMEType(mimeType);\n  } catch (e) {\n    mimeTypeRecord = new MIMEType(\"text/plain;charset=US-ASCII\");\n  }\n\n  return {\n    mimeType: mimeTypeRecord,\n    body\n  };\n};\n"},"lineCount":75}},"error":null,"hash":"8b057fefc3a9c5a03f8826253fb3287b","cacheData":{"env":{}}}