{"id":"node_modules/jsdom/lib/jsdom/level3/xpath.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\package.json","includedInParent":true,"mtime":1557646988018}],"generated":{"js":"/** Here is yet another implementation of XPath 1.0 in Javascript.\n *\n * My goal was to make it relatively compact, but as I fixed all the axis bugs\n * the axes became more and more complicated. :-(.\n *\n * I have not implemented namespaces or case-sensitive axes for XML yet.\n *\n * How to test it in Chrome: You can make a Chrome extension that replaces\n * the WebKit XPath parser with this one. But it takes a bit of effort to\n * get around isolated world and same-origin restrictions:\n * manifest.json:\n    {\n      \"name\": \"XPathTest\",\n      \"version\": \"0.1\",\n      \"content_scripts\": [{\n        \"matches\": [\"http://localhost/*\"],  // or wildcard host\n        \"js\": [\"xpath.js\", \"injection.js\"],\n        \"all_frames\": true, \"run_at\": \"document_start\"\n      }]\n    }\n * injection.js:\n    // goal: give my xpath object to the website's JS context.\n    var script = document.createElement('script');\n    script.textContent =\n        \"document.addEventListener('xpathextend', function(e) {\\n\" +\n        \"  console.log('extending document with xpath...');\\n\" +\n        \"  e.detail(window);\" +\n        \"});\";\n    document.documentElement.appendChild(script);\n    document.documentElement.removeChild(script);\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent('xpathextend', true, true, this.xpath.extend);\n    document.dispatchEvent(evt);\n */\nmodule.exports = core => {\n  var xpath = {};\n\n  // Helper function to deal with the migration of Attr to no longer have a nodeName property despite this codebase\n  // assuming it does.\n  function getNodeName(nodeOrAttr) {\n    return nodeOrAttr.constructor.name === 'Attr' ? nodeOrAttr.name : nodeOrAttr.nodeName;\n  }\n\n  /***************************************************************************\n   *                            Tokenization                                 *\n   ***************************************************************************/\n  /**\n   * The XPath lexer is basically a single regular expression, along with\n   * some helper functions to pop different types.\n   */\n  var Stream = xpath.Stream = function Stream(str) {\n    this.original = this.str = str;\n    this.peeked = null;\n    // TODO: not really needed, but supposedly tokenizer also disambiguates\n    // a * b vs. node test *\n    this.prev = null;  // for debugging\n    this.prevprev = null;\n  }\n  Stream.prototype = {\n    peek: function() {\n      if (this.peeked) return this.peeked;\n      var m = this.re.exec(this.str);\n      if (!m) return null;\n      this.str = this.str.substr(m[0].length);\n      return this.peeked = m[1];\n    },\n    /** Peek 2 tokens ahead. */\n    peek2: function() {\n      this.peek();  // make sure this.peeked is set\n      var m = this.re.exec(this.str);\n      if (!m) return null;\n      return m[1];\n    },\n    pop: function() {\n      var r = this.peek();\n      this.peeked = null;\n      this.prevprev = this.prev;\n      this.prev = r;\n      return r;\n    },\n    trypop: function(tokens) {\n      var tok = this.peek();\n      if (tok === tokens) return this.pop();\n      if (Array.isArray(tokens)) {\n        for (var i = 0; i < tokens.length; ++i) {\n          var t = tokens[i];\n          if (t == tok) return this.pop();;\n        }\n      }\n    },\n    trypopfuncname: function() {\n      var tok = this.peek();\n      if (!this.isQnameRe.test(tok))\n        return null;\n      switch (tok) {\n        case 'comment': case 'text': case 'processing-instruction': case 'node':\n          return null;\n      }\n      if ('(' != this.peek2()) return null;\n      return this.pop();\n    },\n    trypopaxisname: function() {\n      var tok = this.peek();\n      switch (tok) {\n        case 'ancestor': case 'ancestor-or-self': case 'attribute':\n        case 'child': case 'descendant': case 'descendant-or-self':\n        case 'following': case 'following-sibling': case 'namespace':\n        case 'parent': case 'preceding': case 'preceding-sibling': case 'self':\n          if ('::' == this.peek2()) return this.pop();\n      }\n      return null;\n    },\n    trypopnametest: function() {\n      var tok = this.peek();\n      if ('*' === tok || this.startsWithNcNameRe.test(tok)) return this.pop();\n      return null;\n    },\n    trypopliteral: function() {\n      var tok = this.peek();\n      if (null == tok) return null;\n      var first = tok.charAt(0);\n      var last = tok.charAt(tok.length - 1);\n      if ('\"' === first && '\"' === last ||\n          \"'\" === first && \"'\" === last) {\n        this.pop();\n        return tok.substr(1, tok.length - 2);\n      }\n    },\n    trypopnumber: function() {\n      var tok = this.peek();\n      if (this.isNumberRe.test(tok)) return parseFloat(this.pop());\n      else return null;\n    },\n    trypopvarref: function() {\n      var tok = this.peek();\n      if (null == tok) return null;\n      if ('$' === tok.charAt(0)) return this.pop().substr(1);\n      else return null;\n    },\n    position: function() {\n      return this.original.length - this.str.length;\n    }\n  };\n  (function() {\n    // http://www.w3.org/TR/REC-xml-names/#NT-NCName\n    var nameStartCharsExceptColon =\n        'A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF' +\n        '\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF' +\n        '\\uFDF0-\\uFFFD';  // JS doesn't support [#x10000-#xEFFFF]\n    var nameCharExceptColon = nameStartCharsExceptColon +\n        '\\\\-\\\\.0-9\\xb7\\u0300-\\u036F\\u203F-\\u2040';\n    var ncNameChars = '[' + nameStartCharsExceptColon +\n        '][' + nameCharExceptColon + ']*'\n    // http://www.w3.org/TR/REC-xml-names/#NT-QName\n    var qNameChars = ncNameChars + '(?::' + ncNameChars + ')?';\n    var otherChars = '\\\\.\\\\.|[\\\\(\\\\)\\\\[\\\\].@,]|::';  // .. must come before [.]\n    var operatorChars =\n        'and|or|mod|div|' +\n        '//|!=|<=|>=|[*/|+\\\\-=<>]';  // //, !=, <=, >= before individual ones.\n    var literal = '\"[^\"]*\"|' + \"'[^']*'\";\n    var numberChars = '[0-9]+(?:\\\\.[0-9]*)?|\\\\.[0-9]+';\n    var variableReference = '\\\\$' + qNameChars;\n    var nameTestChars = '\\\\*|' + ncNameChars + ':\\\\*|' + qNameChars;\n    var optionalSpace = '[ \\t\\r\\n]*';  // stricter than regexp \\s.\n    var nodeType = 'comment|text|processing-instruction|node';\n    var re = new RegExp(\n        // numberChars before otherChars so that leading-decimal doesn't become .\n        '^' + optionalSpace + '(' + numberChars + '|' + otherChars + '|' +\n        nameTestChars + '|' + operatorChars + '|' + literal + '|' +\n        variableReference + ')'\n        // operatorName | nodeType | functionName | axisName are lumped into\n        // qName for now; we'll check them on pop.\n    );\n    Stream.prototype.re = re;\n    Stream.prototype.startsWithNcNameRe = new RegExp('^' + ncNameChars);\n    Stream.prototype.isQnameRe = new RegExp('^' + qNameChars + '$');\n    Stream.prototype.isNumberRe = new RegExp('^' + numberChars + '$');\n  })();\n\n  /***************************************************************************\n   *                               Parsing                                   *\n   ***************************************************************************/\n  var parse = xpath.parse = function parse(stream, a) {\n    var r = orExpr(stream,a);\n    var x, unparsed = [];\n    while (x = stream.pop()) {\n      unparsed.push(x);\n    }\n    if (unparsed.length)\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Position ' + stream.position() +\n                               ': Unparsed tokens: ' + unparsed.join(' '));\n    return r;\n  }\n\n  /**\n   * binaryL  ::= subExpr\n   *            | binaryL op subExpr\n   * so a op b op c becomes ((a op b) op c)\n   */\n  function binaryL(subExpr, stream, a, ops) {\n    var lhs = subExpr(stream, a);\n    if (lhs == null) return null;\n    var op;\n    while (op = stream.trypop(ops)) {\n      var rhs = subExpr(stream, a);\n      if (rhs == null)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected something after ' + op);\n      lhs = a.node(op, lhs, rhs);\n    }\n    return lhs;\n  }\n  /**\n   * Too bad this is never used. If they made a ** operator (raise to power),\n   ( we would use it.\n   * binaryR  ::= subExpr\n   *            | subExpr op binaryR\n   * so a op b op c becomes (a op (b op c))\n   */\n  function binaryR(subExpr, stream, a, ops) {\n    var lhs = subExpr(stream, a);\n    if (lhs == null) return null;\n    var op = stream.trypop(ops);\n    if (op) {\n      var rhs = binaryR(stream, a);\n      if (rhs == null)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected something after ' + op);\n      return a.node(op, lhs, rhs);\n    } else {\n      return lhs;// TODO\n    }\n  }\n  /** [1] LocationPath::= RelativeLocationPath | AbsoluteLocationPath\n   * e.g. a, a/b, //a/b\n   */\n  function locationPath(stream, a) {\n    return absoluteLocationPath(stream, a) ||\n           relativeLocationPath(null, stream, a);\n  }\n  /** [2] AbsoluteLocationPath::= '/' RelativeLocationPath? | AbbreviatedAbsoluteLocationPath\n   *  [10] AbbreviatedAbsoluteLocationPath::= '//' RelativeLocationPath\n   */\n  function absoluteLocationPath(stream, a) {\n    var op = stream.peek();\n    if ('/' === op || '//' === op) {\n      var lhs = a.node('Root');\n      return relativeLocationPath(lhs, stream, a, true);\n    } else {\n      return null;\n    }\n  }\n  /** [3] RelativeLocationPath::= Step | RelativeLocationPath '/' Step |\n   *                            | AbbreviatedRelativeLocationPath\n   *  [11] AbbreviatedRelativeLocationPath::= RelativeLocationPath '//' Step\n   * e.g. p/a, etc.\n   */\n  function relativeLocationPath(lhs, stream, a, isOnlyRootOk) {\n    if (null == lhs) {\n      lhs = step(stream, a);\n      if (null == lhs) return lhs;\n    }\n    var op;\n    while (op = stream.trypop(['/', '//'])) {\n      if ('//' === op) {\n        lhs = a.node('/', lhs,\n                     a.node('Axis', 'descendant-or-self', 'node', undefined));\n      }\n      var rhs = step(stream, a);\n      if (null == rhs && '/' === op && isOnlyRootOk) return lhs;\n      else isOnlyRootOk = false;\n      if (null == rhs)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected step after ' + op);\n      lhs = a.node('/', lhs, rhs);\n    }\n    return lhs;\n  }\n  /** [4] Step::= AxisSpecifier NodeTest Predicate* | AbbreviatedStep\n   *  [12] AbbreviatedStep::= '.' | '..'\n   * e.g. @href, self::p, p, a[@href], ., ..\n   */\n  function step(stream, a) {\n    var abbrStep = stream.trypop(['.', '..']);\n    if ('.' === abbrStep)  // A location step of . is short for self::node().\n      return a.node('Axis', 'self', 'node');\n    if ('..' === abbrStep)  // A location step of .. is short for parent::node()\n      return a.node('Axis', 'parent', 'node');\n\n    var axis = axisSpecifier(stream, a);\n    var nodeType = nodeTypeTest(stream, a);\n    var nodeName;\n    if (null == nodeType) nodeName = nodeNameTest(stream, a);\n    if (null == axis && null == nodeType && null == nodeName) return null;\n    if (null == nodeType && null == nodeName)\n        throw new XPathException(\n            XPathException.INVALID_EXPRESSION_ERR,\n            'Position ' + stream.position() +\n            ': Expected nodeTest after axisSpecifier ' + axis);\n    if (null == axis) axis = 'child';\n    if (null == nodeType) {\n      // When there's only a node name, then the node type is forced to be the\n      // principal node type of the axis.\n      // see http://www.w3.org/TR/xpath/#dt-principal-node-type\n      if ('attribute' === axis) nodeType = 'attribute';\n      else if ('namespace' === axis) nodeType = 'namespace';\n      else nodeType = 'element';\n    }\n    var lhs = a.node('Axis', axis, nodeType, nodeName);\n    var pred;\n    while (null != (pred = predicate(lhs, stream, a))) {\n      lhs = pred;\n    }\n    return lhs;\n  }\n  /** [5] AxisSpecifier::= AxisName '::' | AbbreviatedAxisSpecifier\n   *  [6] AxisName::= 'ancestor' | 'ancestor-or-self' | 'attribute' | 'child'\n   *                | 'descendant' | 'descendant-or-self' | 'following'\n   *                | 'following-sibling' | 'namespace' | 'parent' |\n   *                | 'preceding' | 'preceding-sibling' | 'self'\n   *  [13] AbbreviatedAxisSpecifier::= '@'?\n   */\n  function axisSpecifier(stream, a) {\n    var attr = stream.trypop('@');\n    if (null != attr) return 'attribute';\n    var axisName = stream.trypopaxisname();\n    if (null != axisName) {\n      var coloncolon = stream.trypop('::');\n      if (null == coloncolon)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Should not happen. Should be ::.');\n      return axisName;\n    }\n  }\n  /** [7] NodeTest::= NameTest | NodeType '(' ')' | 'processing-instruction' '(' Literal ')'\n   *  [38] NodeType::= 'comment' | 'text' | 'processing-instruction' | 'node'\n   * I've split nodeTypeTest from nodeNameTest for convenience.\n   */\n  function nodeTypeTest(stream, a) {\n    if ('(' !== stream.peek2()) {\n      return null;\n    }\n    var type = stream.trypop(['comment', 'text', 'processing-instruction', 'node']);\n    if (null != type) {\n      if (null == stream.trypop('('))\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Should not happen.');\n      var param = undefined;\n      if (type == 'processing-instruction') {\n        param = stream.trypopliteral();\n      }\n      if (null == stream.trypop(')'))\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected close parens.');\n      return type\n    }\n  }\n  function nodeNameTest(stream, a) {\n    var name = stream.trypopnametest();\n    if (name != null) return name;\n    else return null;\n  }\n  /** [8] Predicate::= '[' PredicateExpr ']'\n   *  [9] PredicateExpr::= Expr\n   */\n  function predicate(lhs, stream, a) {\n    if (null == stream.trypop('[')) return null;\n    var expr = orExpr(stream, a);\n    if (null == expr)\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Position ' + stream.position() +\n                               ': Expected expression after [');\n    if (null == stream.trypop(']'))\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Position ' + stream.position() +\n                               ': Expected ] after expression.');\n    return a.node('Predicate', lhs, expr);\n  }\n  /** [14] Expr::= OrExpr\n   */\n  /** [15] PrimaryExpr::= VariableReference | '(' Expr ')' | Literal | Number | FunctionCall\n   * e.g. $x,  (3+4),  \"hi\",  32,  f(x)\n   */\n  function primaryExpr(stream, a) {\n    var x = stream.trypopliteral();\n    if (null == x)\n      x = stream.trypopnumber();\n    if (null != x) {\n      return x;\n    }\n    var varRef = stream.trypopvarref();\n    if (null != varRef) return a.node('VariableReference', varRef);\n    var funCall = functionCall(stream, a);\n    if (null != funCall) {\n      return funCall;\n    }\n    if (stream.trypop('(')) {\n      var e = orExpr(stream, a);\n      if (null == e)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected expression after (.');\n      if (null == stream.trypop(')'))\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected ) after expression.');\n      return e;\n    }\n    return null;\n  }\n  /** [16] FunctionCall::= FunctionName '(' ( Argument ( ',' Argument )* )? ')'\n   *  [17] Argument::= Expr\n   */\n  function functionCall(stream, a) {\n    var name = stream.trypopfuncname(stream, a);\n    if (null == name) return null;\n    if (null == stream.trypop('('))\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Position ' + stream.position() +\n                               ': Expected ( ) after function name.');\n    var params = [];\n    var first = true;\n    while (null == stream.trypop(')')) {\n      if (!first && null == stream.trypop(','))\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected , between arguments of the function.');\n      first = false;\n      var param = orExpr(stream, a);\n      if (param == null)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected expression as argument of function.');\n      params.push(param);\n    }\n    return a.node('FunctionCall', name, params);\n  }\n\n  /** [18] UnionExpr::= PathExpr | UnionExpr '|' PathExpr\n   */\n  function unionExpr(stream, a) { return binaryL(pathExpr, stream, a, '|'); }\n  /** [19] PathExpr ::= LocationPath\n   *                  | FilterExpr\n   *                  | FilterExpr '/' RelativeLocationPath\n   *                  | FilterExpr '//' RelativeLocationPath\n   * Unlike most other nodes, this one always generates a node because\n   * at this point all reverse nodesets must turn into a forward nodeset\n   */\n  function pathExpr(stream, a) {\n    // We have to do FilterExpr before LocationPath because otherwise\n    // LocationPath will eat up the name from a function call.\n    var filter = filterExpr(stream, a);\n    if (null == filter) {\n      var loc = locationPath(stream, a);\n      if (null == loc) {\n        throw new Error\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': The expression shouldn\\'t be empty...');\n      }\n      return a.node('PathExpr', loc);\n    }\n    var rel = relativeLocationPath(filter, stream, a, false);\n    if (filter === rel) return rel;\n    else return a.node('PathExpr', rel);\n  }\n  /** [20] FilterExpr::= PrimaryExpr | FilterExpr Predicate\n   * aka. FilterExpr ::= PrimaryExpr Predicate*\n   */\n  function filterExpr(stream, a) {\n    var primary = primaryExpr(stream, a);\n    if (primary == null) return null;\n    var pred, lhs = primary;\n    while (null != (pred = predicate(lhs, stream, a))) {\n      lhs = pred;\n    }\n    return lhs;\n  }\n\n  /** [21] OrExpr::= AndExpr | OrExpr 'or' AndExpr\n   */\n  function orExpr(stream, a) {\n    var orig = (stream.peeked || '') + stream.str\n    var r = binaryL(andExpr, stream, a, 'or');\n    var now = (stream.peeked || '') + stream.str;\n    return r;\n  }\n  /** [22] AndExpr::= EqualityExpr | AndExpr 'and' EqualityExpr\n   */\n  function andExpr(stream, a) { return binaryL(equalityExpr, stream, a, 'and'); }\n  /** [23] EqualityExpr::= RelationalExpr | EqualityExpr '=' RelationalExpr\n   *                     | EqualityExpr '!=' RelationalExpr\n   */\n  function equalityExpr(stream, a) { return binaryL(relationalExpr, stream, a, ['=','!=']); }\n  /** [24] RelationalExpr::= AdditiveExpr | RelationalExpr '<' AdditiveExpr\n   *                       | RelationalExpr '>' AdditiveExpr\n   *                       | RelationalExpr '<=' AdditiveExpr\n   *                       | RelationalExpr '>=' AdditiveExpr\n   */\n  function relationalExpr(stream, a) { return binaryL(additiveExpr, stream, a, ['<','>','<=','>=']); }\n  /** [25] AdditiveExpr::= MultiplicativeExpr\n   *                     | AdditiveExpr '+' MultiplicativeExpr\n   *                     | AdditiveExpr '-' MultiplicativeExpr\n   */\n  function additiveExpr(stream, a) { return binaryL(multiplicativeExpr, stream, a, ['+','-']); }\n  /** [26] MultiplicativeExpr::= UnaryExpr\n   *                           | MultiplicativeExpr MultiplyOperator UnaryExpr\n   *                           | MultiplicativeExpr 'div' UnaryExpr\n   *                           | MultiplicativeExpr 'mod' UnaryExpr\n   */\n  function multiplicativeExpr(stream, a) { return binaryL(unaryExpr, stream, a, ['*','div','mod']); }\n  /** [27] UnaryExpr::= UnionExpr | '-' UnaryExpr\n   */\n  function unaryExpr(stream, a) {\n    if (stream.trypop('-')) {\n      var e = unaryExpr(stream, a);\n      if (null == e)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected unary expression after -');\n      return a.node('UnaryMinus', e);\n    }\n    else return unionExpr(stream, a);\n  }\n  var astFactory = {\n    node: function() {return Array.prototype.slice.call(arguments);}\n  };\n\n\n  /***************************************************************************\n   *                            Optimizations (TODO)                         *\n   ***************************************************************************/\n  /**\n   * Some things I've been considering:\n   * 1) a//b becomes a/descendant::b if there's no predicate that uses\n   *    position() or last()\n   * 2) axis[pred]: when pred doesn't use position, evaluate it just once per\n   *    node in the node-set rather than once per (node, position, last).\n   * For more optimizations, look up Gecko's optimizer:\n   * http://mxr.mozilla.org/mozilla-central/source/content/xslt/src/xpath/txXPathOptimizer.cpp\n   */\n  // TODO\n  function optimize(ast) {\n  }\n\n  /***************************************************************************\n   *                           Evaluation: axes                              *\n   ***************************************************************************/\n\n  /**\n   * Data types: For string, number, boolean, we just use Javascript types.\n   * Node-sets have the form\n   *    {nodes: [node, ...]}\n   * or {nodes: [node, ...], pos: [[1], [2], ...], lasts: [[1], [2], ...]}\n   *\n   * Most of the time, only the node is used and the position information is\n   * discarded. But if you use a predicate, we need to try every value of\n   * position and last in case the predicate calls position() or last().\n   */\n\n  /**\n   * The NodeMultiSet is a helper class to help generate\n   * {nodes:[], pos:[], lasts:[]} structures. It is useful for the\n   * descendant, descendant-or-self, following-sibling, and\n   * preceding-sibling axes for which we can use a stack to organize things.\n   */\n  function NodeMultiSet(isReverseAxis) {\n    this.nodes = [];\n    this.pos = [];\n    this.lasts = [];\n    this.nextPos = [];\n    this.seriesIndexes = [];  // index within nodes that each series begins.\n    this.isReverseAxis = isReverseAxis;\n    this._pushToNodes = isReverseAxis ? Array.prototype.unshift : Array.prototype.push;\n  }\n  NodeMultiSet.prototype = {\n    pushSeries: function pushSeries() {\n      this.nextPos.push(1);\n      this.seriesIndexes.push(this.nodes.length);\n    },\n    popSeries: function popSeries() {\n      console.assert(0 < this.nextPos.length, this.nextPos);\n      var last = this.nextPos.pop() - 1,\n          indexInPos = this.nextPos.length,\n          seriesBeginIndex = this.seriesIndexes.pop(),\n          seriesEndIndex = this.nodes.length;\n      for (var i = seriesBeginIndex; i < seriesEndIndex; ++i) {\n        console.assert(indexInPos < this.lasts[i].length);\n        console.assert(undefined === this.lasts[i][indexInPos]);\n        this.lasts[i][indexInPos] = last;\n      }\n    },\n    finalize: function() {\n      if (null == this.nextPos) return this;\n      console.assert(0 === this.nextPos.length);\n      var lastsJSON = JSON.stringify(this.lasts);\n      for (var i = 0; i < this.lasts.length; ++i) {\n        for (var j = 0; j < this.lasts[i].length; ++j) {\n          console.assert(null != this.lasts[i][j], i + ',' + j + ':' + lastsJSON);\n        }\n      }\n      this.pushSeries = this.popSeries = this.addNode = function() {\n        throw new Error('Already finalized.');\n      };\n      return this;\n    },\n    addNode: function addNode(node) {\n      console.assert(node);\n      this._pushToNodes.call(this.nodes, node)\n      this._pushToNodes.call(this.pos, this.nextPos.slice());\n      this._pushToNodes.call(this.lasts, new Array(this.nextPos.length));\n      for (var i = 0; i < this.nextPos.length; ++i) this.nextPos[i]++;\n    },\n    simplify: function() {\n      this.finalize();\n      return {nodes:this.nodes, pos:this.pos, lasts:this.lasts};\n    }\n  };\n  function eachContext(nodeMultiSet) {\n    var r = [];\n    for (var i = 0; i < nodeMultiSet.nodes.length; i++) {\n      var node = nodeMultiSet.nodes[i];\n      if (!nodeMultiSet.pos) {\n        r.push({nodes:[node], pos: [[i + 1]], lasts: [[nodeMultiSet.nodes.length]]});\n      } else {\n        for (var j = 0; j < nodeMultiSet.pos[i].length; ++j) {\n          r.push({nodes:[node], pos: [[nodeMultiSet.pos[i][j]]], lasts: [[nodeMultiSet.lasts[i][j]]]});\n        }\n      }\n    }\n    return r;\n  }\n  /** Matcher used in the axes.\n   */\n  function NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase) {\n    this.nodeTypeNum = nodeTypeNum;\n    this.nodeName = nodeName;\n    this.shouldLowerCase = shouldLowerCase;\n    this.nodeNameTest =\n      null == nodeName ? this._alwaysTrue :\n      shouldLowerCase ? this._nodeNameLowerCaseEquals :\n      this._nodeNameEquals;\n  }\n  NodeMatcher.prototype = {\n    matches: function matches(node) {\n      if (0 === this.nodeTypeNum || this._nodeTypeMatches(node)) {\n        return this.nodeNameTest(getNodeName(node));\n      }\n\n      return false;\n    },\n    _nodeTypeMatches(nodeOrAttr) {\n      if (nodeOrAttr.constructor.name === 'Attr' && this.nodeTypeNum === 2) {\n        return true;\n      }\n      return nodeOrAttr.nodeType === this.nodeTypeNum;\n    },\n    _alwaysTrue: function(name) {return true;},\n    _nodeNameEquals: function _nodeNameEquals(name) {\n      return this.nodeName === name;\n    },\n    _nodeNameLowerCaseEquals: function _nodeNameLowerCaseEquals(name) {\n      return this.nodeName === name.toLowerCase();\n    }\n  };\n\n  function followingSiblingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, shift, peek, followingNode, andSelf, isReverseAxis) {\n    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n    var nodeMultiSet = new NodeMultiSet(isReverseAxis);\n    while (0 < nodeList.length) {  // can be if for following, preceding\n      var node = shift.call(nodeList);\n      console.assert(node != null);\n      node = followingNode(node);\n      nodeMultiSet.pushSeries();\n      var numPushed = 1;\n      while (null != node) {\n        if (! andSelf && matcher.matches(node))\n          nodeMultiSet.addNode(node);\n        if (node === peek.call(nodeList)) {\n          shift.call(nodeList);\n          nodeMultiSet.pushSeries();\n          numPushed++;\n        }\n        if (andSelf && matcher.matches(node))\n          nodeMultiSet.addNode(node);\n        node = followingNode(node);\n      }\n      while (0 < numPushed--)\n        nodeMultiSet.popSeries();\n    }\n    return nodeMultiSet;\n  }\n\n  /** Returns the next non-descendant node in document order.\n   * This is the first node in following::node(), if node is the context.\n   */\n  function followingNonDescendantNode(node) {\n    if (node.ownerElement) {\n      if (node.ownerElement.firstChild)\n        return node.ownerElement.firstChild;\n      node = node.ownerElement;\n    }\n    do {\n      if (node.nextSibling) return node.nextSibling;\n    } while (node = node.parentNode);\n    return null;\n  }\n\n  /** Returns the next node in a document-order depth-first search.\n   * See the definition of document order[1]:\n   *   1) element\n   *   2) namespace nodes\n   *   3) attributes\n   *   4) children\n   *   [1]: http://www.w3.org/TR/xpath/#dt-document-order\n   */\n  function followingNode(node) {\n    if (node.ownerElement)  // attributes: following node of element.\n      node = node.ownerElement;\n    if (null != node.firstChild)\n      return node.firstChild;\n    do {\n      if (null != node.nextSibling) {\n        return node.nextSibling;\n      }\n      node = node.parentNode;\n    } while (node);\n    return null;\n  }\n  /** Returns the previous node in document order (excluding attributes\n   * and namespace nodes).\n   */\n  function precedingNode(node) {\n    if (node.ownerElement)\n      return node.ownerElement;\n    if (null != node.previousSibling) {\n      node = node.previousSibling;\n      while (null != node.lastChild) {\n        node = node.lastChild;\n      }\n      return node;\n    }\n    if (null != node.parentNode) {\n      return node.parentNode;\n    }\n    return null;\n  }\n  /** This axis is inefficient if there are many nodes in the nodeList.\n   * But I think it's a pretty useless axis so it's ok. */\n  function followingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n    var nodeMultiSet = new NodeMultiSet(false);\n    var cursor = nodeList[0];\n    var unorderedFollowingStarts = [];\n    for (var i = 0; i < nodeList.length; i++) {\n      var node = nodeList[i];\n      var start = followingNonDescendantNode(node);\n      if (start)\n        unorderedFollowingStarts.push(start);\n    }\n    if (0 === unorderedFollowingStarts.length)\n      return {nodes:[]};\n    var pos = [], nextPos = [];\n    var started = 0;\n    while (cursor = followingNode(cursor)) {\n      for (var i = unorderedFollowingStarts.length - 1; i >= 0; i--){\n        if (cursor === unorderedFollowingStarts[i]) {\n          nodeMultiSet.pushSeries();\n          unorderedFollowingStarts.splice(i,i+1);\n          started++;\n        }\n      }\n      if (started && matcher.matches(cursor)) {\n        nodeMultiSet.addNode(cursor);\n      }\n    }\n    console.assert(0 === unorderedFollowingStarts.length);\n    for (var i = 0; i < started; i++)\n      nodeMultiSet.popSeries();\n    return nodeMultiSet.finalize();\n  }\n  function precedingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n    var cursor = nodeList.pop();\n    if (null == cursor) return {nodes:{}};\n    var r = {nodes:[], pos:[], lasts:[]};\n    var nextParents = [cursor.parentNode || cursor.ownerElement], nextPos = [1];\n    while (cursor = precedingNode(cursor)) {\n      if (cursor === nodeList[nodeList.length - 1]) {\n        nextParents.push(nodeList.pop());\n        nextPos.push(1);\n      }\n      var matches = matcher.matches(cursor);\n      var pos, someoneUsed = false;\n      if (matches)\n        pos = nextPos.slice();\n\n      for (var i = 0; i < nextParents.length; ++i) {\n        if (cursor === nextParents[i]) {\n          nextParents[i] = cursor.parentNode || cursor.ownerElement;\n          if (matches) {\n            pos[i] = null;\n          }\n        } else {\n          if (matches) {\n            pos[i] = nextPos[i]++;\n            someoneUsed = true;\n          }\n        }\n      }\n      if (someoneUsed) {\n        r.nodes.unshift(cursor);\n        r.pos.unshift(pos);\n      }\n    }\n    for (var i = 0; i < r.pos.length; ++i) {\n      var lasts = [];\n      r.lasts.push(lasts);\n      for (var j = r.pos[i].length - 1; j >= 0; j--) {\n        if (null == r.pos[i][j]) {\n          r.pos[i].splice(j, j+1);\n        } else {\n          lasts.unshift(nextPos[j] - 1);\n        }\n      }\n    }\n    return r;\n  }\n\n  /** node-set, axis -> node-set */\n  function descendantDfs(nodeMultiSet, node, remaining, matcher, andSelf, attrIndices, attrNodes) {\n    while (0 < remaining.length && null != remaining[0].ownerElement) {\n      var attr = remaining.shift();\n      if (andSelf && matcher.matches(attr)) {\n        attrNodes.push(attr);\n        attrIndices.push(nodeMultiSet.nodes.length);\n      }\n    }\n    if (null != node && !andSelf) {\n      if (matcher.matches(node))\n        nodeMultiSet.addNode(node);\n    }\n    var pushed = false;\n    if (null == node) {\n      if (0 === remaining.length) return;\n      node = remaining.shift();\n      nodeMultiSet.pushSeries();\n      pushed = true;\n    } else if (0 < remaining.length && node === remaining[0]) {\n      nodeMultiSet.pushSeries();\n      pushed = true;\n      remaining.shift();\n    }\n    if (andSelf) {\n      if (matcher.matches(node))\n        nodeMultiSet.addNode(node);\n    }\n    // TODO: use optimization. Also try element.getElementsByTagName\n    // var nodeList = 1 === nodeTypeNum && null != node.children ? node.children : node.childNodes;\n    var nodeList = node.childNodes;\n    for (var j = 0; j < nodeList.length; ++j) {\n      var child = nodeList[j];\n      descendantDfs(nodeMultiSet, child, remaining, matcher, andSelf, attrIndices, attrNodes);\n    }\n    if (pushed) {\n      nodeMultiSet.popSeries();\n    }\n  }\n  function descenantHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, andSelf) {\n    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n    var nodeMultiSet = new NodeMultiSet(false);\n    var attrIndices = [], attrNodes = [];\n    while (0 < nodeList.length) {\n      // var node = nodeList.shift();\n      descendantDfs(nodeMultiSet, null, nodeList, matcher, andSelf, attrIndices, attrNodes);\n    }\n    nodeMultiSet.finalize();\n    for (var i = attrNodes.length-1; i >= 0; --i) {\n      nodeMultiSet.nodes.splice(attrIndices[i], attrIndices[i], attrNodes[i]);\n      nodeMultiSet.pos.splice(attrIndices[i], attrIndices[i], [1]);\n      nodeMultiSet.lasts.splice(attrIndices[i], attrIndices[i], [1]);\n    }\n    return nodeMultiSet;\n  }\n  /**\n   */\n  function ancestorHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, andSelf) {\n    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n    var ancestors = []; // array of non-empty arrays of matching ancestors\n    for (var i = 0; i < nodeList.length; ++i) {\n      var node = nodeList[i];\n      var isFirst = true;\n      var a = [];\n      while (null != node) {\n        if (!isFirst || andSelf) {\n          if (matcher.matches(node))\n            a.push(node);\n        }\n        isFirst = false;\n        node = node.parentNode || node.ownerElement;\n      }\n      if (0 < a.length)\n        ancestors.push(a);\n    }\n    var lasts = [];\n    for (var i = 0; i < ancestors.length; ++i) lasts.push(ancestors[i].length);\n    var nodeMultiSet = new NodeMultiSet(true);\n    var newCtx = {nodes:[], pos:[], lasts:[]};\n    while (0 < ancestors.length) {\n      var pos = [ancestors[0].length];\n      var last = [lasts[0]];\n      var node = ancestors[0].pop();\n      for (var i = ancestors.length - 1; i > 0; --i) {\n        if (node === ancestors[i][ancestors[i].length - 1]) {\n          pos.push(ancestors[i].length);\n          last.push(lasts[i]);\n          ancestors[i].pop();\n          if (0 === ancestors[i].length) {\n            ancestors.splice(i, i+1);\n            lasts.splice(i, i+1);\n          }\n        }\n      }\n      if (0 === ancestors[0].length) {\n        ancestors.shift();\n        lasts.shift();\n      }\n      newCtx.nodes.push(node);\n      newCtx.pos.push(pos);\n      newCtx.lasts.push(last);\n    }\n    return newCtx;\n  }\n  /** Helper function for sortDocumentOrder. Returns a list of indices, from the\n   * node to the root, of positions within parent.\n   * For convenience, the node is the first element of the array.\n   */\n  function addressVector(node) {\n    var r = [node];\n    if (null != node.ownerElement) {\n      node = node.ownerElement;\n      r.push(-1);\n    }\n    while (null != node) {\n      var i = 0;\n      while (null != node.previousSibling) {\n        node = node.previousSibling;\n        i++;\n      }\n      r.push(i);\n      node = node.parentNode\n    }\n    return r;\n  }\n  function addressComparator(a, b) {\n    var minlen = Math.min(a.length - 1, b.length - 1),  // not including [0]=node\n        alen = a.length,\n        blen = b.length;\n    if (a[0] === b[0]) return 0;\n    var c;\n    for (var i = 0; i < minlen; ++i) {\n      c = a[alen - i - 1] - b[blen - i - 1];\n      if (0 !== c)\n        break;\n    }\n    if (null == c || 0 === c) {\n      // All equal until one of the nodes. The longer one is the descendant.\n      c = alen - blen;\n    }\n    if (0 === c)\n      c = getNodeName(a) - getNodeName(b);\n    if (0 === c)\n      c = 1;\n    return c;\n  }\n  var sortUniqDocumentOrder = xpath.sortUniqDocumentOrder = function(nodes) {\n    var a = [];\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var v = addressVector(node);\n      a.push(v);\n    }\n    a.sort(addressComparator);\n    var b = [];\n    for (var i = 0; i < a.length; i++) {\n      if (0 < i && a[i][0] === a[i - 1][0])\n        continue;\n      b.push(a[i][0]);\n    }\n    return b;\n  }\n  /** Sort node multiset. Does not do any de-duping. */\n  function sortNodeMultiSet(nodeMultiSet) {\n    var a = [];\n    for (var i = 0; i < nodeMultiSet.nodes.length; i++) {\n      var v = addressVector(nodeMultiSet.nodes[i]);\n      a.push({v:v, n:nodeMultiSet.nodes[i],\n              p:nodeMultiSet.pos[i], l:nodeMultiSet.lasts[i]});\n    }\n    a.sort(compare);\n    var r = {nodes:[], pos:[], lasts:[]};\n    for (var i = 0; i < a.length; ++i) {\n      r.nodes.push(a[i].n);\n      r.pos.push(a[i].p);\n      r.lasts.push(a[i].l);\n    }\n    function compare(x, y) {\n      return addressComparator(x.v, y.v);\n    }\n    return r;\n  }\n  /** Returns an array containing all the ancestors down to a node.\n   * The array starts with document.\n   */\n  function nodeAndAncestors(node) {\n    var ancestors = [node];\n    var p = node;\n    while (p = p.parentNode || p.ownerElement) {\n      ancestors.unshift(p);\n    }\n    return ancestors;\n  }\n  function compareSiblings(a, b) {\n    if (a === b) return 0;\n    var c = a;\n    while (c = c.previousSibling) {\n      if (c === b)\n        return 1;  // b < a\n    }\n    c = b;\n    while (c = c.previousSibling) {\n      if (c === a)\n        return -1;  // a < b\n    }\n    throw new Error('a and b are not siblings: ' + xpath.stringifyObject(a) + ' vs ' + xpath.stringifyObject(b));\n  }\n  /** The merge in merge-sort.*/\n  function mergeNodeLists(x, y) {\n    var a, b, aanc, banc, r = [];\n    if ('object' !== typeof x)\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Invalid LHS for | operator ' +\n                               '(expected node-set): ' + x);\n    if ('object' !== typeof y)\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Invalid LHS for | operator ' +\n                               '(expected node-set): ' + y);\n    while (true) {\n      if (null == a) {\n        a = x.shift();\n        if (null != a)\n          aanc = addressVector(a);\n      }\n      if (null == b) {\n        b = y.shift();\n        if (null != b)\n          banc = addressVector(b);\n      }\n      if (null == a || null == b) break;\n      var c = addressComparator(aanc, banc);\n      if (c < 0) {\n        r.push(a);\n        a = null;\n        aanc = null;\n      } else if (c > 0) {\n        r.push(b);\n        b = null;\n        banc = null;\n      } else if (getNodeName(a) < getNodeName(b)) {  // attributes\n        r.push(a);\n        a = null;\n        aanc = null;\n      } else if (getNodeName(a) > getNodeName(b)) {  // attributes\n        r.push(b);\n        b = null;\n        banc = null;\n      } else if (a !== b) {\n        // choose b arbitrarily\n        r.push(b);\n        b = null;\n        banc = null;\n      } else {\n        console.assert(a === b, c);\n        // just skip b without pushing it.\n        b = null;\n        banc = null;\n      }\n    }\n    while (a) {\n      r.push(a);\n      a = x.shift();\n    }\n    while (b) {\n      r.push(b);\n      b = y.shift();\n    }\n    return r;\n  }\n  function comparisonHelper(test, x, y, isNumericComparison) {\n    var coersion;\n    if (isNumericComparison)\n      coersion = fn.number;\n    else coersion =\n      'boolean' === typeof x || 'boolean' === typeof y ? fn['boolean'] :\n      'number' === typeof x || 'number' === typeof y ? fn.number :\n      fn.string;\n    if ('object' === typeof x && 'object' === typeof y) {\n      var aMap = {};\n      for (var i = 0; i < x.nodes.length; ++i) {\n        var xi = coersion({nodes:[x.nodes[i]]});\n        for (var j = 0; j < y.nodes.length; ++j) {\n          var yj = coersion({nodes:[y.nodes[j]]});\n          if (test(xi, yj)) return true;\n        }\n      }\n      return false;\n    } else if ('object' === typeof x && x.nodes && x.nodes.length) {\n      for (var i = 0; i < x.nodes.length; ++i) {\n        var xi = coersion({nodes:[x.nodes[i]]}), yc = coersion(y);\n        if (test(xi, yc))\n          return true;\n      }\n      return false;\n    } else if ('object' === typeof y && x.nodes && x.nodes.length) {\n      for (var i = 0; i < x.nodes.length; ++i) {\n        var yi = coersion({nodes:[y.nodes[i]]}), xc = coersion(x);\n        if (test(xc, yi))\n          return true;\n      }\n      return false;\n    } else {\n      var xc = coersion(x), yc = coersion(y);\n      return test(xc, yc);\n    }\n  }\n  var axes = xpath.axes = {\n    'ancestor':\n      function ancestor(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return ancestorHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, false);\n      },\n    'ancestor-or-self':\n      function ancestorOrSelf(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return ancestorHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, true);\n      },\n    'attribute':\n      function attribute(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        // TODO: figure out whether positions should be undefined here.\n        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n        var nodeMultiSet = new NodeMultiSet(false);\n        if (null != nodeName) {\n          // TODO: with namespace\n          for (var i = 0; i < nodeList.length; ++i) {\n            var node = nodeList[i];\n            if (null == node.getAttributeNode)\n              continue;  // only Element has .getAttributeNode\n            var attr = node.getAttributeNode(nodeName);\n            if (null != attr && matcher.matches(attr)) {\n              nodeMultiSet.pushSeries();\n              nodeMultiSet.addNode(attr);\n              nodeMultiSet.popSeries();\n            }\n          }\n        } else {\n          for (var i = 0; i < nodeList.length; ++i) {\n            var node = nodeList[i];\n            if (null != node.attributes) {\n              nodeMultiSet.pushSeries();\n              for (var j = 0; j < node.attributes.length; j++) {  // all nodes have .attributes\n                var attr = node.attributes[j];\n                if (matcher.matches(attr))  // TODO: I think this check is unnecessary\n                  nodeMultiSet.addNode(attr);\n              }\n              nodeMultiSet.popSeries();\n            }\n          }\n        }\n        return nodeMultiSet.finalize();\n      },\n    'child':\n      function child(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n        var nodeMultiSet = new NodeMultiSet(false);\n        for (var i = 0; i < nodeList.length; ++i) {\n          var n = nodeList[i];\n          if (n.ownerElement)  // skip attribute nodes' text child.\n            continue;\n          if (n.childNodes) {\n            nodeMultiSet.pushSeries();\n            var childList = 1 === nodeTypeNum && null != n.children ?\n                n.children : n.childNodes;\n            for (var j = 0; j < childList.length; ++j) {\n              var child = childList[j];\n              if (matcher.matches(child)) {\n                nodeMultiSet.addNode(child);\n              }\n              // don't have to do de-duping because children have parent,\n              // which are current context.\n            }\n            nodeMultiSet.popSeries();\n          }\n        }\n        nodeMultiSet.finalize();\n        return sortNodeMultiSet(nodeMultiSet);\n      },\n    'descendant':\n      function descenant(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return descenantHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, false);\n      },\n    'descendant-or-self':\n      function descenantOrSelf(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return descenantHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, true);\n      },\n    'following':\n      function following(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return followingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase);\n      },\n    'following-sibling':\n      function followingSibling(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return followingSiblingHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase,\n          Array.prototype.shift, function() {return this[0];},\n          function(node) {return node.nextSibling;});\n      },\n    'namespace':\n      function namespace(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        // TODO\n      },\n    'parent':\n      function parent(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n        var nodes = [], pos = [];\n        for (var i = 0; i < nodeList.length; ++i) {\n          var parent = nodeList[i].parentNode || nodeList[i].ownerElement;\n          if (null == parent)\n            continue;\n          if (!matcher.matches(parent))\n            continue;\n          if (nodes.length > 0 && parent === nodes[nodes.length-1])\n            continue;\n          nodes.push(parent);\n          pos.push([1]);\n        }\n        return {nodes:nodes, pos:pos, lasts:pos};\n      },\n    'preceding':\n      function preceding(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return precedingHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase);\n      },\n    'preceding-sibling':\n      function precedingSibling(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return followingSiblingHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase,\n          Array.prototype.pop, function() {return this[this.length-1];},\n          function(node) {return node.previousSibling},\n          false, true);\n      },\n    'self':\n      function self(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        var nodes = [], pos = [];\n        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n        for (var i = 0; i < nodeList.length; ++i) {\n          if (matcher.matches(nodeList[i])) {\n            nodes.push(nodeList[i]);\n            pos.push([1]);\n          }\n        }\n        return {nodes: nodes, pos: pos, lasts: pos}\n      }\n  };\n\n  /***************************************************************************\n   *                         Evaluation: functions                           *\n   ***************************************************************************/\n  var fn = {\n    'number': function number(optObject) {\n      if ('number' === typeof optObject)\n        return optObject;\n      if ('string' === typeof optObject)\n        return parseFloat(optObject);  // note: parseFloat(' ') -> NaN, unlike +' ' -> 0.\n      if ('boolean' === typeof optObject)\n        return +optObject;\n      return fn.number(fn.string.call(this, optObject));  // for node-sets\n    },\n    'string': function string(optObject) {\n      if (null == optObject)\n        return fn.string(this);\n      if ('string' === typeof optObject || 'boolean' === typeof optObject ||\n          'number' === typeof optObject)\n        return '' + optObject;\n      if (0 == optObject.nodes.length) return '';\n      if (null != optObject.nodes[0].textContent)\n        return optObject.nodes[0].textContent;\n      return optObject.nodes[0].nodeValue;\n    },\n    'boolean': function booleanVal(x) {\n      return 'object' === typeof x ? x.nodes.length > 0 : !!x;\n    },\n    'last': function last() {\n      console.assert(Array.isArray(this.pos));\n      console.assert(Array.isArray(this.lasts));\n      console.assert(1 === this.pos.length);\n      console.assert(1 === this.lasts.length);\n      console.assert(1 === this.lasts[0].length);\n      return this.lasts[0][0];\n    },\n    'position': function position() {\n      console.assert(Array.isArray(this.pos));\n      console.assert(Array.isArray(this.lasts));\n      console.assert(1 === this.pos.length);\n      console.assert(1 === this.lasts.length);\n      console.assert(1 === this.pos[0].length);\n      return this.pos[0][0];\n    },\n    'count': function count(nodeSet) {\n      if ('object' !== typeof nodeSet)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Function count(node-set) ' +\n                                 'got wrong argument type: ' + nodeSet);\n      return nodeSet.nodes.length;\n    },\n    'id': function id(object) {\n      var r = {nodes: []};\n      var doc = this.nodes[0].ownerDocument || this.nodes[0];\n      console.assert(doc);\n      var ids;\n      if ('object' === typeof object) {\n        // for node-sets, map id over each node value.\n        ids = [];\n        for (var i = 0; i < object.nodes.length; ++i) {\n          var idNode = object.nodes[i];\n          var idsString = fn.string({nodes:[idNode]});\n          var a = idsString.split(/[ \\t\\r\\n]+/g);\n          Array.prototype.push.apply(ids, a);\n        }\n      } else {\n        var idsString = fn.string(object);\n        var a = idsString.split(/[ \\t\\r\\n]+/g);\n        ids = a;\n      }\n      for (var i = 0; i < ids.length; ++i) {\n        var id = ids[i];\n        if (0 === id.length)\n          continue;\n        var node = doc.getElementById(id);\n        if (null != node)\n          r.nodes.push(node);\n      }\n      r.nodes = sortUniqDocumentOrder(r.nodes);\n      return r;\n    },\n    'local-name': function(nodeSet) {\n      if (null == nodeSet)\n        return fn.name(this);\n      if (null == nodeSet.nodes) {\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'argument to name() must be a node-set. got ' + nodeSet);\n      }\n      // TODO: namespaced version\n      return nodeSet.nodes[0].localName;\n    },\n    'namespace-uri': function(nodeSet) {\n      // TODO\n      throw new Error('not implemented yet');\n    },\n    'name': function(nodeSet) {\n      if (null == nodeSet)\n        return fn.name(this);\n      if (null == nodeSet.nodes) {\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'argument to name() must be a node-set. got ' + nodeSet);\n      }\n      return nodeSet.nodes[0].name;\n    },\n    'concat': function concat(x) {\n      var l = [];\n      for (var i = 0; i < arguments.length; ++i) {\n        l.push(fn.string(arguments[i]));\n      }\n      return l.join('');\n    },\n    'starts-with': function startsWith(a, b) {\n      var as = fn.string(a), bs = fn.string(b);\n      return as.substr(0, bs.length) === bs;\n    },\n    'contains': function contains(a, b) {\n      var as = fn.string(a), bs = fn.string(b);\n      var i = as.indexOf(bs);\n      if (-1 === i) return false;\n      return true;\n    },\n    'substring-before': function substringBefore(a, b) {\n      var as = fn.string(a), bs = fn.string(b);\n      var i = as.indexOf(bs);\n      if (-1 === i) return '';\n      return as.substr(0, i);\n    },\n    'substring-after': function substringBefore(a, b) {\n      var as = fn.string(a), bs = fn.string(b);\n      var i = as.indexOf(bs);\n      if (-1 === i) return '';\n      return as.substr(i + bs.length);\n    },\n    'substring': function substring(string, start, optEnd) {\n      if (null == string || null == start) {\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Must be at least 2 arguments to string()');\n      }\n      var sString = fn.string(string),\n          iStart = fn.round(start),\n          iEnd = optEnd == null ? null : fn.round(optEnd);\n      // Note that xpath string positions user 1-based index\n      if (iEnd == null)\n        return sString.substr(iStart - 1);\n      else\n        return sString.substr(iStart - 1, iEnd);\n    },\n    'string-length': function stringLength(optString) {\n      return fn.string.call(this, optString).length;\n    },\n    'normalize-space': function normalizeSpace(optString) {\n      var s = fn.string.call(this, optString);\n      return s.replace(/[ \\t\\r\\n]+/g, ' ').replace(/^ | $/g, '');\n    },\n    'translate': function translate(string, from, to) {\n      var sString = fn.string.call(this, string),\n          sFrom = fn.string(from),\n          sTo = fn.string(to);\n      var eachCharRe = [];\n      var map = {};\n      for (var i = 0; i < sFrom.length; ++i) {\n        var c = sFrom.charAt(i);\n        map[c] = sTo.charAt(i);  // returns '' if beyond length of sTo.\n        // copied from goog.string.regExpEscape in the Closure library.\n        eachCharRe.push(\n          c.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1').\n            replace(/\\x08/g, '\\\\x08'));\n      }\n      var re = new RegExp(eachCharRe.join('|'), 'g');\n      return sString.replace(re, function(c) {return map[c];});\n    },\n    /// Boolean functions\n    'not': function not(x) {\n      var bx = fn['boolean'](x);\n      return !bx;\n    },\n    'true': function trueVal() { return true; },\n    'false': function falseVal() { return false; },\n    // TODO\n    'lang': function lang(string) { throw new Error('Not implemented');},\n    'sum': function sum(optNodeSet) {\n      if (null == optNodeSet) return fn.sum(this);\n      // for node-sets, map id over each node value.\n      var sum = 0;\n      for (var i = 0; i < optNodeSet.nodes.length; ++i) {\n        var node = optNodeSet.nodes[i];\n        var x = fn.number({nodes:[node]});\n        sum += x;\n      }\n      return sum;\n    },\n    'floor': function floor(number) {\n      return Math.floor(fn.number(number));\n    },\n    'ceiling': function ceiling(number) {\n      return Math.ceil(fn.number(number));\n    },\n    'round': function round(number) {\n      return Math.round(fn.number(number));\n    }\n  };\n  /***************************************************************************\n   *                         Evaluation: operators                           *\n   ***************************************************************************/\n  var more = {\n    UnaryMinus: function(x) { return -fn.number(x); },\n    '+': function(x, y) { return fn.number(x) + fn.number(y); },\n    '-': function(x, y) { return fn.number(x) - fn.number(y); },\n    '*': function(x, y) { return fn.number(x) * fn.number(y); },\n    'div': function(x, y) { return fn.number(x) / fn.number(y); },\n    'mod': function(x, y) { return fn.number(x) % fn.number(y); },\n    '<': function(x, y) {\n      return comparisonHelper(function(x, y) { return fn.number(x) < fn.number(y);}, x, y, true);\n    },\n    '<=': function(x, y) {\n      return comparisonHelper(function(x, y) { return fn.number(x) <= fn.number(y);}, x, y, true);\n    },\n    '>':  function(x, y) {\n      return comparisonHelper(function(x, y) { return fn.number(x) > fn.number(y);}, x, y, true);\n    },\n    '>=': function(x, y) {\n      return comparisonHelper(function(x, y) { return fn.number(x) >= fn.number(y);}, x, y, true);\n    },\n    'and': function(x, y) { return fn['boolean'](x) && fn['boolean'](y); },\n    'or': function(x, y) { return fn['boolean'](x) || fn['boolean'](y); },\n    '|': function(x, y) { return {nodes: mergeNodeLists(x.nodes, y.nodes)}; },\n    '=': function(x, y) {\n      // optimization for two node-sets case: avoid n^2 comparisons.\n      if ('object' === typeof x && 'object' === typeof y) {\n        var aMap = {};\n        for (var i = 0; i < x.nodes.length; ++i) {\n          var s = fn.string({nodes:[x.nodes[i]]});\n          aMap[s] = true;\n        }\n        for (var i = 0; i < y.nodes.length; ++i) {\n          var s = fn.string({nodes:[y.nodes[i]]});\n          if (aMap[s]) return true;\n        }\n        return false;\n      } else {\n        return comparisonHelper(function(x, y) {return x === y;}, x, y);\n      }\n    },\n    '!=': function(x, y) {\n      // optimization for two node-sets case: avoid n^2 comparisons.\n      if ('object' === typeof x && 'object' === typeof y) {\n        if (0 === x.nodes.length || 0 === y.nodes.length) return false;\n        var aMap = {};\n        for (var i = 0; i < x.nodes.length; ++i) {\n          var s = fn.string({nodes:[x.nodes[i]]});\n          aMap[s] = true;\n        }\n        for (var i = 0; i < y.nodes.length; ++i) {\n          var s = fn.string({nodes:[y.nodes[i]]});\n          if (!aMap[s]) return true;\n        }\n        return false;\n      } else {\n        return comparisonHelper(function(x, y) {return x !== y;}, x, y);\n      }\n    }\n  };\n  var nodeTypes = xpath.nodeTypes = {\n    'node': 0,\n    'attribute': 2,\n    'comment': 8, // this.doc.COMMENT_NODE,\n    'text': 3, // this.doc.TEXT_NODE,\n    'processing-instruction': 7, // this.doc.PROCESSING_INSTRUCTION_NODE,\n    'element': 1  //this.doc.ELEMENT_NODE\n  };\n  /** For debugging and unit tests: returnjs a stringified version of the\n   * argument. */\n  var stringifyObject = xpath.stringifyObject = function stringifyObject(ctx) {\n    var seenKey = 'seen' + Math.floor(Math.random()*1000000000);\n    return JSON.stringify(helper(ctx));\n\n    function helper(ctx) {\n      if (Array.isArray(ctx)) {\n        return ctx.map(function(x) {return helper(x);});\n      }\n      if ('object' !== typeof ctx) return ctx;\n      if (null == ctx) return ctx;\n    //  if (ctx.toString) return ctx.toString();\n      if (null != ctx.outerHTML) return ctx.outerHTML;\n      if (null != ctx.nodeValue) return ctx.nodeName + '=' + ctx.nodeValue;\n      if (ctx[seenKey]) return '[circular]';\n      ctx[seenKey] = true;\n      var nicer = {};\n      for (var key in ctx) {\n        if (seenKey === key)\n          continue;\n        try {\n          nicer[key] = helper(ctx[key]);\n        } catch (e) {\n          nicer[key] = '[exception: ' + e.message + ']';\n        }\n      }\n      delete ctx[seenKey];\n      return nicer;\n    }\n  }\n  var Evaluator = xpath.Evaluator = function Evaluator(doc) {\n    this.doc = doc;\n  }\n  Evaluator.prototype = {\n    val: function val(ast, ctx) {\n      console.assert(ctx.nodes);\n\n      if ('number' === typeof ast || 'string' === typeof ast) return ast;\n      if (more[ast[0]]) {\n        var evaluatedParams = [];\n        for (var i = 1; i < ast.length; ++i) {\n          evaluatedParams.push(this.val(ast[i], ctx));\n        }\n        var r = more[ast[0]].apply(ctx, evaluatedParams);\n        return r;\n      }\n      switch (ast[0]) {\n        case 'Root': return {nodes: [this.doc]};\n        case 'FunctionCall':\n          var functionName = ast[1], functionParams = ast[2];\n          if (null == fn[functionName])\n            throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                     'Unknown function: ' + functionName);\n          var evaluatedParams = [];\n          for (var i = 0; i < functionParams.length; ++i) {\n            evaluatedParams.push(this.val(functionParams[i], ctx));\n          }\n          var r = fn[functionName].apply(ctx, evaluatedParams);\n          return r;\n        case 'Predicate':\n          var lhs = this.val(ast[1], ctx);\n          var ret = {nodes: []};\n          var contexts = eachContext(lhs);\n          for (var i = 0; i < contexts.length; ++i) {\n            var singleNodeSet = contexts[i];\n            var rhs = this.val(ast[2], singleNodeSet);\n            var success;\n            if ('number' === typeof rhs) {\n              success = rhs === singleNodeSet.pos[0][0];\n            } else {\n              success = fn['boolean'](rhs);\n            }\n            if (success) {\n              var node = singleNodeSet.nodes[0];\n              ret.nodes.push(node);\n              // skip over all the rest of the same node.\n              while (i+1 < contexts.length && node === contexts[i+1].nodes[0]) {\n                i++;\n              }\n            }\n          }\n          return ret;\n        case 'PathExpr':\n          // turn the path into an expressoin; i.e., remove the position\n          // information of the last axis.\n          var x = this.val(ast[1], ctx);\n          // Make the nodeset a forward-direction-only one.\n          if (x.finalize) {  // it is a NodeMultiSet\n            return {nodes: x.nodes};\n          } else {\n            return x;\n          }\n        case '/':\n          // TODO: don't generate '/' nodes, just Axis nodes.\n          var lhs = this.val(ast[1], ctx);\n          console.assert(null != lhs);\n          var r = this.val(ast[2], lhs);\n          console.assert(null != r);\n          return r;\n        case 'Axis':\n          // All the axis tests from Step. We only get AxisSpecifier NodeTest,\n          // not the predicate (which is applied later)\n          var axis = ast[1],\n              nodeType = ast[2],\n              nodeTypeNum = nodeTypes[nodeType],\n              shouldLowerCase = true,  // TODO: give option\n              nodeName = ast[3] && shouldLowerCase ? ast[3].toLowerCase() : ast[3];\n          nodeName = nodeName === '*' ? null : nodeName;\n          if ('object' !== typeof ctx) return {nodes:[], pos:[]};\n          var nodeList = ctx.nodes.slice();  // TODO: is copy needed?\n          var r = axes[axis](nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase);\n          return r;\n      }\n    }\n  };\n  var evaluate = xpath.evaluate = function evaluate(expr, doc, context) {\n    //var astFactory = new AstEvaluatorFactory(doc, context);\n    var stream = new Stream(expr);\n    var ast = parse(stream, astFactory);\n    var val = new Evaluator(doc).val(ast, {nodes: [context]});\n    return val;\n  }\n\n  /***************************************************************************\n   *                           DOM interface                                 *\n   ***************************************************************************/\n  var XPathException = xpath.XPathException = function XPathException(code, message) {\n    var e = new Error(message);\n    e.name = 'XPathException';\n    e.code = code;\n    return e;\n  }\n  XPathException.INVALID_EXPRESSION_ERR = 51;\n  XPathException.TYPE_ERR = 52;\n\n\n  var XPathEvaluator = xpath.XPathEvaluator = function XPathEvaluator() {}\n  XPathEvaluator.prototype = {\n    createExpression: function(expression, resolver) {\n      return new XPathExpression(expression, resolver);\n    },\n    createNSResolver: function(nodeResolver) {\n      // TODO\n    },\n    evaluate: function evaluate(expression, contextNode, resolver, type, result) {\n      var expr = new XPathExpression(expression, resolver);\n      return expr.evaluate(contextNode, type, result);\n    }\n  };\n\n\n  var XPathExpression = xpath.XPathExpression = function XPathExpression(expression, resolver, optDoc) {\n    var stream = new Stream(expression);\n    this._ast = parse(stream, astFactory);\n    this._doc = optDoc;\n  }\n  XPathExpression.prototype = {\n    evaluate: function evaluate(contextNode, type, result) {\n      if (null == contextNode.nodeType)\n        throw new Error('bad argument (expected context node): ' + contextNode);\n      var doc = contextNode.ownerDocument || contextNode;\n      if (null != this._doc && this._doc !== doc) {\n        throw new core.DOMException(\n            core.DOMException.WRONG_DOCUMENT_ERR,\n            'The document must be the same as the context node\\'s document.');\n      }\n      var evaluator = new Evaluator(doc);\n      var value = evaluator.val(this._ast, {nodes: [contextNode]});\n      if (XPathResult.NUMBER_TYPE === type)\n        value = fn.number(value);\n      else if (XPathResult.STRING_TYPE === type)\n        value = fn.string(value);\n      else if (XPathResult.BOOLEAN_TYPE === type)\n        value = fn['boolean'](value);\n      else if (XPathResult.ANY_TYPE !== type &&\n               XPathResult.UNORDERED_NODE_ITERATOR_TYPE !== type &&\n               XPathResult.ORDERED_NODE_ITERATOR_TYPE !== type &&\n               XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE !== type &&\n               XPathResult.ORDERED_NODE_SNAPSHOT_TYPE !== type &&\n               XPathResult.ANY_UNORDERED_NODE_TYPE !== type &&\n               XPathResult.FIRST_ORDERED_NODE_TYPE !== type)\n        throw new core.DOMException(\n            core.DOMException.NOT_SUPPORTED_ERR,\n            'You must provide an XPath result type (0=any).');\n      else if (XPathResult.ANY_TYPE !== type &&\n               'object' !== typeof value)\n        throw new XPathException(\n            XPathException.TYPE_ERR,\n            'Value should be a node-set: ' + value);\n      return new XPathResult(doc, value, type);\n    }\n  }\n\n  var XPathResult = xpath.XPathResult = function XPathResult(doc, value, resultType) {\n    this._value = value;\n    this._resultType = resultType;\n    this._i = 0;\n\n    // TODO: we removed mutation events but didn't take care of this. No tests fail, so that's nice, but eventually we\n    // should fix this, preferably by entirely replacing our XPath implementation.\n    // this._invalidated = false;\n    // if (this.resultType === XPathResult.UNORDERED_NODE_ITERATOR_TYPE ||\n    //     this.resultType === XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\n    //   doc.addEventListener('DOMSubtreeModified', invalidate, true);\n    //   var self = this;\n    //   function invalidate() {\n    //     self._invalidated = true;\n    //     doc.removeEventListener('DOMSubtreeModified', invalidate, true);\n    //   }\n    // }\n  }\n  XPathResult.ANY_TYPE = 0;\n  XPathResult.NUMBER_TYPE = 1;\n  XPathResult.STRING_TYPE = 2;\n  XPathResult.BOOLEAN_TYPE = 3;\n  XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\n  XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\n  XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\n  XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\n  XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\n  XPathResult.FIRST_ORDERED_NODE_TYPE = 9;\n  var proto = {\n    // XPathResultType\n    get resultType() {\n      if (this._resultType) return this._resultType;\n      switch (typeof this._value) {\n        case 'number': return XPathResult.NUMBER_TYPE;\n        case 'string': return XPathResult.STRING_TYPE;\n        case 'boolean': return XPathResult.BOOLEAN_TYPE;\n        default: return XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\n      }\n    },\n    get numberValue() {\n      if (XPathResult.NUMBER_TYPE !== this.resultType)\n        throw new XPathException(XPathException.TYPE_ERR,\n                                 'You should have asked for a NUMBER_TYPE.');\n      return this._value;\n    },\n    get stringValue() {\n      if (XPathResult.STRING_TYPE !== this.resultType)\n        throw new XPathException(XPathException.TYPE_ERR,\n                                 'You should have asked for a STRING_TYPE.');\n      return this._value;\n    },\n    get booleanValue() {\n      if (XPathResult.BOOLEAN_TYPE !== this.resultType)\n        throw new XPathException(XPathException.TYPE_ERR,\n                                 'You should have asked for a BOOLEAN_TYPE.');\n      return this._value;\n    },\n    get singleNodeValue() {\n      if (XPathResult.ANY_UNORDERED_NODE_TYPE !== this.resultType &&\n          XPathResult.FIRST_ORDERED_NODE_TYPE !== this.resultType)\n        throw new XPathException(\n            XPathException.TYPE_ERR,\n            'You should have asked for a FIRST_ORDERED_NODE_TYPE.');\n      return this._value.nodes[0] || null;\n    },\n    get invalidIteratorState() {\n      if (XPathResult.UNORDERED_NODE_ITERATOR_TYPE !== this.resultType &&\n          XPathResult.ORDERED_NODE_ITERATOR_TYPE !== this.resultType)\n        return false;\n      return !!this._invalidated;\n    },\n    get snapshotLength() {\n      if (XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE !== this.resultType &&\n          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE !== this.resultType)\n        throw new XPathException(\n            XPathException.TYPE_ERR,\n            'You should have asked for a ORDERED_NODE_SNAPSHOT_TYPE.');\n      return this._value.nodes.length;\n    },\n    iterateNext: function iterateNext() {\n      if (XPathResult.UNORDERED_NODE_ITERATOR_TYPE !== this.resultType &&\n          XPathResult.ORDERED_NODE_ITERATOR_TYPE !== this.resultType)\n        throw new XPathException(\n            XPathException.TYPE_ERR,\n            'You should have asked for a ORDERED_NODE_ITERATOR_TYPE.');\n      if (this.invalidIteratorState)\n        throw new core.DOMException(\n            core.DOMException.INVALID_STATE_ERR,\n            'The document has been mutated since the result was returned');\n      return this._value.nodes[this._i++] || null;\n    },\n    snapshotItem: function snapshotItem(index) {\n      if (XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE !== this.resultType &&\n          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE !== this.resultType)\n        throw new XPathException(\n            XPathException.TYPE_ERR,\n            'You should have asked for a ORDERED_NODE_SNAPSHOT_TYPE.');\n      return this._value.nodes[index] || null;\n    }\n  };\n  // so you can access ANY_TYPE etc. from the instances:\n  XPathResult.prototype = Object.create(XPathResult,\n      Object.keys(proto).reduce(function (descriptors, name) {\n        descriptors[name] = Object.getOwnPropertyDescriptor(proto, name);\n        return descriptors;\n      }, {\n        constructor: {\n          value: XPathResult,\n          writable: true,\n          configurable: true\n        }\n      }));\n\n  core.XPathException = XPathException;\n  core.XPathExpression = XPathExpression;\n  core.XPathResult = XPathResult;\n  core.XPathEvaluator = XPathEvaluator;\n\n  core.Document.prototype.createExpression =\n    XPathEvaluator.prototype.createExpression;\n\n  core.Document.prototype.createNSResolver =\n      XPathEvaluator.prototype.createNSResolver;\n\n  core.Document.prototype.evaluate = XPathEvaluator.prototype.evaluate;\n\n  return xpath; // for tests\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1402,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1403,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1404,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1405,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1406,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1407,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1408,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1409,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1410,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1411,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1412,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1413,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1414,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1415,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1416,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1417,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1418,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1419,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1420,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1421,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1422,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1423,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1424,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1425,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1426,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1427,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1428,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1429,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1430,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1431,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1432,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1433,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1434,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1435,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1436,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1437,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1438,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1439,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1440,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1441,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1442,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1443,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1444,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1445,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1446,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1447,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1448,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1449,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1450,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1451,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1452,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1453,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1454,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1455,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1456,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1457,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1458,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1459,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1460,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1461,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1462,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1463,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1464,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1465,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1466,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1467,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1468,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1469,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1470,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1471,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1472,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1473,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1474,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1475,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1476,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1477,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1478,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1479,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1480,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1481,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1482,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1483,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1484,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1485,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1486,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1487,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1488,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1489,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1490,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1491,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1492,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1493,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1494,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1495,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1496,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1497,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1498,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1499,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1500,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1501,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1502,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1503,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1504,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1505,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1506,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1507,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1508,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1509,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1510,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1511,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1512,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1513,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1514,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1515,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1516,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1517,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1518,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1519,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1520,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1521,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1522,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1523,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1524,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1525,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1526,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1527,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1528,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1529,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1530,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1531,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1532,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1533,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1534,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1535,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1536,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1537,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1538,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1539,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1540,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1541,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1542,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1543,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1544,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1545,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1546,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1547,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1548,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1549,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1550,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1551,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1552,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1553,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1554,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1555,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1556,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1557,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1558,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1559,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1560,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1561,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1562,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1563,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1564,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1565,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1566,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1567,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1568,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1569,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1570,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1571,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1572,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1573,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1574,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1575,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1576,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1577,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1578,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1579,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1580,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1581,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1582,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1583,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1584,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1585,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1586,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1587,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1588,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1589,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1590,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1591,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1592,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1593,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1594,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1595,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1596,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1597,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1598,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1599,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1600,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1601,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1602,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1603,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1604,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1605,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1606,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1607,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1608,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1609,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1610,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1611,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1612,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1613,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1614,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1615,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1616,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1617,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1618,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1619,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1620,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1621,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1622,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1623,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1624,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1625,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1626,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1627,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1628,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1629,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1630,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1631,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1632,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1633,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1634,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1635,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1636,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1637,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1638,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1639,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1640,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1641,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1642,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1643,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1644,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1645,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1646,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1647,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1648,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1649,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1650,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1651,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1652,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1653,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1654,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1655,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1656,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1657,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1658,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1659,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1660,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1661,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1662,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1663,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1664,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1665,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1666,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1667,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1668,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1669,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1670,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1671,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1672,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1673,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1674,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1675,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1676,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1677,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1678,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1679,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1680,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1681,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1682,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1683,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1684,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1685,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1686,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1687,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1688,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1689,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1690,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1691,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1692,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1693,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1694,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1695,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1696,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1697,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1698,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1699,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1700,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1701,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1702,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1703,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1704,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1705,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1706,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1707,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1708,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1709,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1710,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1711,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1712,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1713,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1714,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1715,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1716,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1717,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1718,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1719,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1720,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1721,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1722,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1723,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1724,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1725,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1726,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1727,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1728,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1729,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1730,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1731,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1732,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1733,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1734,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1735,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1736,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1737,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1738,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1739,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1740,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1741,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1742,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1743,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1744,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1745,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1746,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1747,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1748,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1749,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1750,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1751,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1752,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1753,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1754,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1755,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1756,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1757,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1758,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1759,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1760,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1761,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1762,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1763,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1764,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1765,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1766,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1767,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1768,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1769,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1770,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1771,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1772,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1773,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1774,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1775,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1776,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1777,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1778,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1779,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1780,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1781,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1782,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1783,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1784,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1785,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1786,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1787,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1788,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1789,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1790,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1791,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1792,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1793,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1794,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1795,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1796,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1797,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1798,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1799,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1800,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1801,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1802,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1803,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1804,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1805,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1806,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1807,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1808,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1809,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1810,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1811,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1812,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1813,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1814,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1815,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1816,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1817,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1818,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1819,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1820,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1821,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1822,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1823,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1824,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1825,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1826,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1827,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1828,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1829,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1830,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1831,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1832,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1833,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1834,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1835,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1836,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1837,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1838,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1839,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1840,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1841,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1842,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1843,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1844,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1845,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1846,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1847,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1848,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1849,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1850,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1851,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1852,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1853,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1854,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1855,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1856,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1857,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1858,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1859,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1860,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1861,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1862,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1863,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1864,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1865,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1866,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1867,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1868,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1869,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1870,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1871,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1872,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1873,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1874,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/level3/xpath.js","original":{"line":1875,"column":0},"generated":{"line":1875,"column":0}}],"sources":{"node_modules/jsdom/lib/jsdom/level3/xpath.js":"/** Here is yet another implementation of XPath 1.0 in Javascript.\n *\n * My goal was to make it relatively compact, but as I fixed all the axis bugs\n * the axes became more and more complicated. :-(.\n *\n * I have not implemented namespaces or case-sensitive axes for XML yet.\n *\n * How to test it in Chrome: You can make a Chrome extension that replaces\n * the WebKit XPath parser with this one. But it takes a bit of effort to\n * get around isolated world and same-origin restrictions:\n * manifest.json:\n    {\n      \"name\": \"XPathTest\",\n      \"version\": \"0.1\",\n      \"content_scripts\": [{\n        \"matches\": [\"http://localhost/*\"],  // or wildcard host\n        \"js\": [\"xpath.js\", \"injection.js\"],\n        \"all_frames\": true, \"run_at\": \"document_start\"\n      }]\n    }\n * injection.js:\n    // goal: give my xpath object to the website's JS context.\n    var script = document.createElement('script');\n    script.textContent =\n        \"document.addEventListener('xpathextend', function(e) {\\n\" +\n        \"  console.log('extending document with xpath...');\\n\" +\n        \"  e.detail(window);\" +\n        \"});\";\n    document.documentElement.appendChild(script);\n    document.documentElement.removeChild(script);\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent('xpathextend', true, true, this.xpath.extend);\n    document.dispatchEvent(evt);\n */\nmodule.exports = core => {\n  var xpath = {};\n\n  // Helper function to deal with the migration of Attr to no longer have a nodeName property despite this codebase\n  // assuming it does.\n  function getNodeName(nodeOrAttr) {\n    return nodeOrAttr.constructor.name === 'Attr' ? nodeOrAttr.name : nodeOrAttr.nodeName;\n  }\n\n  /***************************************************************************\n   *                            Tokenization                                 *\n   ***************************************************************************/\n  /**\n   * The XPath lexer is basically a single regular expression, along with\n   * some helper functions to pop different types.\n   */\n  var Stream = xpath.Stream = function Stream(str) {\n    this.original = this.str = str;\n    this.peeked = null;\n    // TODO: not really needed, but supposedly tokenizer also disambiguates\n    // a * b vs. node test *\n    this.prev = null;  // for debugging\n    this.prevprev = null;\n  }\n  Stream.prototype = {\n    peek: function() {\n      if (this.peeked) return this.peeked;\n      var m = this.re.exec(this.str);\n      if (!m) return null;\n      this.str = this.str.substr(m[0].length);\n      return this.peeked = m[1];\n    },\n    /** Peek 2 tokens ahead. */\n    peek2: function() {\n      this.peek();  // make sure this.peeked is set\n      var m = this.re.exec(this.str);\n      if (!m) return null;\n      return m[1];\n    },\n    pop: function() {\n      var r = this.peek();\n      this.peeked = null;\n      this.prevprev = this.prev;\n      this.prev = r;\n      return r;\n    },\n    trypop: function(tokens) {\n      var tok = this.peek();\n      if (tok === tokens) return this.pop();\n      if (Array.isArray(tokens)) {\n        for (var i = 0; i < tokens.length; ++i) {\n          var t = tokens[i];\n          if (t == tok) return this.pop();;\n        }\n      }\n    },\n    trypopfuncname: function() {\n      var tok = this.peek();\n      if (!this.isQnameRe.test(tok))\n        return null;\n      switch (tok) {\n        case 'comment': case 'text': case 'processing-instruction': case 'node':\n          return null;\n      }\n      if ('(' != this.peek2()) return null;\n      return this.pop();\n    },\n    trypopaxisname: function() {\n      var tok = this.peek();\n      switch (tok) {\n        case 'ancestor': case 'ancestor-or-self': case 'attribute':\n        case 'child': case 'descendant': case 'descendant-or-self':\n        case 'following': case 'following-sibling': case 'namespace':\n        case 'parent': case 'preceding': case 'preceding-sibling': case 'self':\n          if ('::' == this.peek2()) return this.pop();\n      }\n      return null;\n    },\n    trypopnametest: function() {\n      var tok = this.peek();\n      if ('*' === tok || this.startsWithNcNameRe.test(tok)) return this.pop();\n      return null;\n    },\n    trypopliteral: function() {\n      var tok = this.peek();\n      if (null == tok) return null;\n      var first = tok.charAt(0);\n      var last = tok.charAt(tok.length - 1);\n      if ('\"' === first && '\"' === last ||\n          \"'\" === first && \"'\" === last) {\n        this.pop();\n        return tok.substr(1, tok.length - 2);\n      }\n    },\n    trypopnumber: function() {\n      var tok = this.peek();\n      if (this.isNumberRe.test(tok)) return parseFloat(this.pop());\n      else return null;\n    },\n    trypopvarref: function() {\n      var tok = this.peek();\n      if (null == tok) return null;\n      if ('$' === tok.charAt(0)) return this.pop().substr(1);\n      else return null;\n    },\n    position: function() {\n      return this.original.length - this.str.length;\n    }\n  };\n  (function() {\n    // http://www.w3.org/TR/REC-xml-names/#NT-NCName\n    var nameStartCharsExceptColon =\n        'A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF' +\n        '\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF' +\n        '\\uFDF0-\\uFFFD';  // JS doesn't support [#x10000-#xEFFFF]\n    var nameCharExceptColon = nameStartCharsExceptColon +\n        '\\\\-\\\\.0-9\\xb7\\u0300-\\u036F\\u203F-\\u2040';\n    var ncNameChars = '[' + nameStartCharsExceptColon +\n        '][' + nameCharExceptColon + ']*'\n    // http://www.w3.org/TR/REC-xml-names/#NT-QName\n    var qNameChars = ncNameChars + '(?::' + ncNameChars + ')?';\n    var otherChars = '\\\\.\\\\.|[\\\\(\\\\)\\\\[\\\\].@,]|::';  // .. must come before [.]\n    var operatorChars =\n        'and|or|mod|div|' +\n        '//|!=|<=|>=|[*/|+\\\\-=<>]';  // //, !=, <=, >= before individual ones.\n    var literal = '\"[^\"]*\"|' + \"'[^']*'\";\n    var numberChars = '[0-9]+(?:\\\\.[0-9]*)?|\\\\.[0-9]+';\n    var variableReference = '\\\\$' + qNameChars;\n    var nameTestChars = '\\\\*|' + ncNameChars + ':\\\\*|' + qNameChars;\n    var optionalSpace = '[ \\t\\r\\n]*';  // stricter than regexp \\s.\n    var nodeType = 'comment|text|processing-instruction|node';\n    var re = new RegExp(\n        // numberChars before otherChars so that leading-decimal doesn't become .\n        '^' + optionalSpace + '(' + numberChars + '|' + otherChars + '|' +\n        nameTestChars + '|' + operatorChars + '|' + literal + '|' +\n        variableReference + ')'\n        // operatorName | nodeType | functionName | axisName are lumped into\n        // qName for now; we'll check them on pop.\n    );\n    Stream.prototype.re = re;\n    Stream.prototype.startsWithNcNameRe = new RegExp('^' + ncNameChars);\n    Stream.prototype.isQnameRe = new RegExp('^' + qNameChars + '$');\n    Stream.prototype.isNumberRe = new RegExp('^' + numberChars + '$');\n  })();\n\n  /***************************************************************************\n   *                               Parsing                                   *\n   ***************************************************************************/\n  var parse = xpath.parse = function parse(stream, a) {\n    var r = orExpr(stream,a);\n    var x, unparsed = [];\n    while (x = stream.pop()) {\n      unparsed.push(x);\n    }\n    if (unparsed.length)\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Position ' + stream.position() +\n                               ': Unparsed tokens: ' + unparsed.join(' '));\n    return r;\n  }\n\n  /**\n   * binaryL  ::= subExpr\n   *            | binaryL op subExpr\n   * so a op b op c becomes ((a op b) op c)\n   */\n  function binaryL(subExpr, stream, a, ops) {\n    var lhs = subExpr(stream, a);\n    if (lhs == null) return null;\n    var op;\n    while (op = stream.trypop(ops)) {\n      var rhs = subExpr(stream, a);\n      if (rhs == null)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected something after ' + op);\n      lhs = a.node(op, lhs, rhs);\n    }\n    return lhs;\n  }\n  /**\n   * Too bad this is never used. If they made a ** operator (raise to power),\n   ( we would use it.\n   * binaryR  ::= subExpr\n   *            | subExpr op binaryR\n   * so a op b op c becomes (a op (b op c))\n   */\n  function binaryR(subExpr, stream, a, ops) {\n    var lhs = subExpr(stream, a);\n    if (lhs == null) return null;\n    var op = stream.trypop(ops);\n    if (op) {\n      var rhs = binaryR(stream, a);\n      if (rhs == null)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected something after ' + op);\n      return a.node(op, lhs, rhs);\n    } else {\n      return lhs;// TODO\n    }\n  }\n  /** [1] LocationPath::= RelativeLocationPath | AbsoluteLocationPath\n   * e.g. a, a/b, //a/b\n   */\n  function locationPath(stream, a) {\n    return absoluteLocationPath(stream, a) ||\n           relativeLocationPath(null, stream, a);\n  }\n  /** [2] AbsoluteLocationPath::= '/' RelativeLocationPath? | AbbreviatedAbsoluteLocationPath\n   *  [10] AbbreviatedAbsoluteLocationPath::= '//' RelativeLocationPath\n   */\n  function absoluteLocationPath(stream, a) {\n    var op = stream.peek();\n    if ('/' === op || '//' === op) {\n      var lhs = a.node('Root');\n      return relativeLocationPath(lhs, stream, a, true);\n    } else {\n      return null;\n    }\n  }\n  /** [3] RelativeLocationPath::= Step | RelativeLocationPath '/' Step |\n   *                            | AbbreviatedRelativeLocationPath\n   *  [11] AbbreviatedRelativeLocationPath::= RelativeLocationPath '//' Step\n   * e.g. p/a, etc.\n   */\n  function relativeLocationPath(lhs, stream, a, isOnlyRootOk) {\n    if (null == lhs) {\n      lhs = step(stream, a);\n      if (null == lhs) return lhs;\n    }\n    var op;\n    while (op = stream.trypop(['/', '//'])) {\n      if ('//' === op) {\n        lhs = a.node('/', lhs,\n                     a.node('Axis', 'descendant-or-self', 'node', undefined));\n      }\n      var rhs = step(stream, a);\n      if (null == rhs && '/' === op && isOnlyRootOk) return lhs;\n      else isOnlyRootOk = false;\n      if (null == rhs)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected step after ' + op);\n      lhs = a.node('/', lhs, rhs);\n    }\n    return lhs;\n  }\n  /** [4] Step::= AxisSpecifier NodeTest Predicate* | AbbreviatedStep\n   *  [12] AbbreviatedStep::= '.' | '..'\n   * e.g. @href, self::p, p, a[@href], ., ..\n   */\n  function step(stream, a) {\n    var abbrStep = stream.trypop(['.', '..']);\n    if ('.' === abbrStep)  // A location step of . is short for self::node().\n      return a.node('Axis', 'self', 'node');\n    if ('..' === abbrStep)  // A location step of .. is short for parent::node()\n      return a.node('Axis', 'parent', 'node');\n\n    var axis = axisSpecifier(stream, a);\n    var nodeType = nodeTypeTest(stream, a);\n    var nodeName;\n    if (null == nodeType) nodeName = nodeNameTest(stream, a);\n    if (null == axis && null == nodeType && null == nodeName) return null;\n    if (null == nodeType && null == nodeName)\n        throw new XPathException(\n            XPathException.INVALID_EXPRESSION_ERR,\n            'Position ' + stream.position() +\n            ': Expected nodeTest after axisSpecifier ' + axis);\n    if (null == axis) axis = 'child';\n    if (null == nodeType) {\n      // When there's only a node name, then the node type is forced to be the\n      // principal node type of the axis.\n      // see http://www.w3.org/TR/xpath/#dt-principal-node-type\n      if ('attribute' === axis) nodeType = 'attribute';\n      else if ('namespace' === axis) nodeType = 'namespace';\n      else nodeType = 'element';\n    }\n    var lhs = a.node('Axis', axis, nodeType, nodeName);\n    var pred;\n    while (null != (pred = predicate(lhs, stream, a))) {\n      lhs = pred;\n    }\n    return lhs;\n  }\n  /** [5] AxisSpecifier::= AxisName '::' | AbbreviatedAxisSpecifier\n   *  [6] AxisName::= 'ancestor' | 'ancestor-or-self' | 'attribute' | 'child'\n   *                | 'descendant' | 'descendant-or-self' | 'following'\n   *                | 'following-sibling' | 'namespace' | 'parent' |\n   *                | 'preceding' | 'preceding-sibling' | 'self'\n   *  [13] AbbreviatedAxisSpecifier::= '@'?\n   */\n  function axisSpecifier(stream, a) {\n    var attr = stream.trypop('@');\n    if (null != attr) return 'attribute';\n    var axisName = stream.trypopaxisname();\n    if (null != axisName) {\n      var coloncolon = stream.trypop('::');\n      if (null == coloncolon)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Should not happen. Should be ::.');\n      return axisName;\n    }\n  }\n  /** [7] NodeTest::= NameTest | NodeType '(' ')' | 'processing-instruction' '(' Literal ')'\n   *  [38] NodeType::= 'comment' | 'text' | 'processing-instruction' | 'node'\n   * I've split nodeTypeTest from nodeNameTest for convenience.\n   */\n  function nodeTypeTest(stream, a) {\n    if ('(' !== stream.peek2()) {\n      return null;\n    }\n    var type = stream.trypop(['comment', 'text', 'processing-instruction', 'node']);\n    if (null != type) {\n      if (null == stream.trypop('('))\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Should not happen.');\n      var param = undefined;\n      if (type == 'processing-instruction') {\n        param = stream.trypopliteral();\n      }\n      if (null == stream.trypop(')'))\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected close parens.');\n      return type\n    }\n  }\n  function nodeNameTest(stream, a) {\n    var name = stream.trypopnametest();\n    if (name != null) return name;\n    else return null;\n  }\n  /** [8] Predicate::= '[' PredicateExpr ']'\n   *  [9] PredicateExpr::= Expr\n   */\n  function predicate(lhs, stream, a) {\n    if (null == stream.trypop('[')) return null;\n    var expr = orExpr(stream, a);\n    if (null == expr)\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Position ' + stream.position() +\n                               ': Expected expression after [');\n    if (null == stream.trypop(']'))\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Position ' + stream.position() +\n                               ': Expected ] after expression.');\n    return a.node('Predicate', lhs, expr);\n  }\n  /** [14] Expr::= OrExpr\n   */\n  /** [15] PrimaryExpr::= VariableReference | '(' Expr ')' | Literal | Number | FunctionCall\n   * e.g. $x,  (3+4),  \"hi\",  32,  f(x)\n   */\n  function primaryExpr(stream, a) {\n    var x = stream.trypopliteral();\n    if (null == x)\n      x = stream.trypopnumber();\n    if (null != x) {\n      return x;\n    }\n    var varRef = stream.trypopvarref();\n    if (null != varRef) return a.node('VariableReference', varRef);\n    var funCall = functionCall(stream, a);\n    if (null != funCall) {\n      return funCall;\n    }\n    if (stream.trypop('(')) {\n      var e = orExpr(stream, a);\n      if (null == e)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected expression after (.');\n      if (null == stream.trypop(')'))\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected ) after expression.');\n      return e;\n    }\n    return null;\n  }\n  /** [16] FunctionCall::= FunctionName '(' ( Argument ( ',' Argument )* )? ')'\n   *  [17] Argument::= Expr\n   */\n  function functionCall(stream, a) {\n    var name = stream.trypopfuncname(stream, a);\n    if (null == name) return null;\n    if (null == stream.trypop('('))\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Position ' + stream.position() +\n                               ': Expected ( ) after function name.');\n    var params = [];\n    var first = true;\n    while (null == stream.trypop(')')) {\n      if (!first && null == stream.trypop(','))\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected , between arguments of the function.');\n      first = false;\n      var param = orExpr(stream, a);\n      if (param == null)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected expression as argument of function.');\n      params.push(param);\n    }\n    return a.node('FunctionCall', name, params);\n  }\n\n  /** [18] UnionExpr::= PathExpr | UnionExpr '|' PathExpr\n   */\n  function unionExpr(stream, a) { return binaryL(pathExpr, stream, a, '|'); }\n  /** [19] PathExpr ::= LocationPath\n   *                  | FilterExpr\n   *                  | FilterExpr '/' RelativeLocationPath\n   *                  | FilterExpr '//' RelativeLocationPath\n   * Unlike most other nodes, this one always generates a node because\n   * at this point all reverse nodesets must turn into a forward nodeset\n   */\n  function pathExpr(stream, a) {\n    // We have to do FilterExpr before LocationPath because otherwise\n    // LocationPath will eat up the name from a function call.\n    var filter = filterExpr(stream, a);\n    if (null == filter) {\n      var loc = locationPath(stream, a);\n      if (null == loc) {\n        throw new Error\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': The expression shouldn\\'t be empty...');\n      }\n      return a.node('PathExpr', loc);\n    }\n    var rel = relativeLocationPath(filter, stream, a, false);\n    if (filter === rel) return rel;\n    else return a.node('PathExpr', rel);\n  }\n  /** [20] FilterExpr::= PrimaryExpr | FilterExpr Predicate\n   * aka. FilterExpr ::= PrimaryExpr Predicate*\n   */\n  function filterExpr(stream, a) {\n    var primary = primaryExpr(stream, a);\n    if (primary == null) return null;\n    var pred, lhs = primary;\n    while (null != (pred = predicate(lhs, stream, a))) {\n      lhs = pred;\n    }\n    return lhs;\n  }\n\n  /** [21] OrExpr::= AndExpr | OrExpr 'or' AndExpr\n   */\n  function orExpr(stream, a) {\n    var orig = (stream.peeked || '') + stream.str\n    var r = binaryL(andExpr, stream, a, 'or');\n    var now = (stream.peeked || '') + stream.str;\n    return r;\n  }\n  /** [22] AndExpr::= EqualityExpr | AndExpr 'and' EqualityExpr\n   */\n  function andExpr(stream, a) { return binaryL(equalityExpr, stream, a, 'and'); }\n  /** [23] EqualityExpr::= RelationalExpr | EqualityExpr '=' RelationalExpr\n   *                     | EqualityExpr '!=' RelationalExpr\n   */\n  function equalityExpr(stream, a) { return binaryL(relationalExpr, stream, a, ['=','!=']); }\n  /** [24] RelationalExpr::= AdditiveExpr | RelationalExpr '<' AdditiveExpr\n   *                       | RelationalExpr '>' AdditiveExpr\n   *                       | RelationalExpr '<=' AdditiveExpr\n   *                       | RelationalExpr '>=' AdditiveExpr\n   */\n  function relationalExpr(stream, a) { return binaryL(additiveExpr, stream, a, ['<','>','<=','>=']); }\n  /** [25] AdditiveExpr::= MultiplicativeExpr\n   *                     | AdditiveExpr '+' MultiplicativeExpr\n   *                     | AdditiveExpr '-' MultiplicativeExpr\n   */\n  function additiveExpr(stream, a) { return binaryL(multiplicativeExpr, stream, a, ['+','-']); }\n  /** [26] MultiplicativeExpr::= UnaryExpr\n   *                           | MultiplicativeExpr MultiplyOperator UnaryExpr\n   *                           | MultiplicativeExpr 'div' UnaryExpr\n   *                           | MultiplicativeExpr 'mod' UnaryExpr\n   */\n  function multiplicativeExpr(stream, a) { return binaryL(unaryExpr, stream, a, ['*','div','mod']); }\n  /** [27] UnaryExpr::= UnionExpr | '-' UnaryExpr\n   */\n  function unaryExpr(stream, a) {\n    if (stream.trypop('-')) {\n      var e = unaryExpr(stream, a);\n      if (null == e)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Expected unary expression after -');\n      return a.node('UnaryMinus', e);\n    }\n    else return unionExpr(stream, a);\n  }\n  var astFactory = {\n    node: function() {return Array.prototype.slice.call(arguments);}\n  };\n\n\n  /***************************************************************************\n   *                            Optimizations (TODO)                         *\n   ***************************************************************************/\n  /**\n   * Some things I've been considering:\n   * 1) a//b becomes a/descendant::b if there's no predicate that uses\n   *    position() or last()\n   * 2) axis[pred]: when pred doesn't use position, evaluate it just once per\n   *    node in the node-set rather than once per (node, position, last).\n   * For more optimizations, look up Gecko's optimizer:\n   * http://mxr.mozilla.org/mozilla-central/source/content/xslt/src/xpath/txXPathOptimizer.cpp\n   */\n  // TODO\n  function optimize(ast) {\n  }\n\n  /***************************************************************************\n   *                           Evaluation: axes                              *\n   ***************************************************************************/\n\n  /**\n   * Data types: For string, number, boolean, we just use Javascript types.\n   * Node-sets have the form\n   *    {nodes: [node, ...]}\n   * or {nodes: [node, ...], pos: [[1], [2], ...], lasts: [[1], [2], ...]}\n   *\n   * Most of the time, only the node is used and the position information is\n   * discarded. But if you use a predicate, we need to try every value of\n   * position and last in case the predicate calls position() or last().\n   */\n\n  /**\n   * The NodeMultiSet is a helper class to help generate\n   * {nodes:[], pos:[], lasts:[]} structures. It is useful for the\n   * descendant, descendant-or-self, following-sibling, and\n   * preceding-sibling axes for which we can use a stack to organize things.\n   */\n  function NodeMultiSet(isReverseAxis) {\n    this.nodes = [];\n    this.pos = [];\n    this.lasts = [];\n    this.nextPos = [];\n    this.seriesIndexes = [];  // index within nodes that each series begins.\n    this.isReverseAxis = isReverseAxis;\n    this._pushToNodes = isReverseAxis ? Array.prototype.unshift : Array.prototype.push;\n  }\n  NodeMultiSet.prototype = {\n    pushSeries: function pushSeries() {\n      this.nextPos.push(1);\n      this.seriesIndexes.push(this.nodes.length);\n    },\n    popSeries: function popSeries() {\n      console.assert(0 < this.nextPos.length, this.nextPos);\n      var last = this.nextPos.pop() - 1,\n          indexInPos = this.nextPos.length,\n          seriesBeginIndex = this.seriesIndexes.pop(),\n          seriesEndIndex = this.nodes.length;\n      for (var i = seriesBeginIndex; i < seriesEndIndex; ++i) {\n        console.assert(indexInPos < this.lasts[i].length);\n        console.assert(undefined === this.lasts[i][indexInPos]);\n        this.lasts[i][indexInPos] = last;\n      }\n    },\n    finalize: function() {\n      if (null == this.nextPos) return this;\n      console.assert(0 === this.nextPos.length);\n      var lastsJSON = JSON.stringify(this.lasts);\n      for (var i = 0; i < this.lasts.length; ++i) {\n        for (var j = 0; j < this.lasts[i].length; ++j) {\n          console.assert(null != this.lasts[i][j], i + ',' + j + ':' + lastsJSON);\n        }\n      }\n      this.pushSeries = this.popSeries = this.addNode = function() {\n        throw new Error('Already finalized.');\n      };\n      return this;\n    },\n    addNode: function addNode(node) {\n      console.assert(node);\n      this._pushToNodes.call(this.nodes, node)\n      this._pushToNodes.call(this.pos, this.nextPos.slice());\n      this._pushToNodes.call(this.lasts, new Array(this.nextPos.length));\n      for (var i = 0; i < this.nextPos.length; ++i) this.nextPos[i]++;\n    },\n    simplify: function() {\n      this.finalize();\n      return {nodes:this.nodes, pos:this.pos, lasts:this.lasts};\n    }\n  };\n  function eachContext(nodeMultiSet) {\n    var r = [];\n    for (var i = 0; i < nodeMultiSet.nodes.length; i++) {\n      var node = nodeMultiSet.nodes[i];\n      if (!nodeMultiSet.pos) {\n        r.push({nodes:[node], pos: [[i + 1]], lasts: [[nodeMultiSet.nodes.length]]});\n      } else {\n        for (var j = 0; j < nodeMultiSet.pos[i].length; ++j) {\n          r.push({nodes:[node], pos: [[nodeMultiSet.pos[i][j]]], lasts: [[nodeMultiSet.lasts[i][j]]]});\n        }\n      }\n    }\n    return r;\n  }\n  /** Matcher used in the axes.\n   */\n  function NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase) {\n    this.nodeTypeNum = nodeTypeNum;\n    this.nodeName = nodeName;\n    this.shouldLowerCase = shouldLowerCase;\n    this.nodeNameTest =\n      null == nodeName ? this._alwaysTrue :\n      shouldLowerCase ? this._nodeNameLowerCaseEquals :\n      this._nodeNameEquals;\n  }\n  NodeMatcher.prototype = {\n    matches: function matches(node) {\n      if (0 === this.nodeTypeNum || this._nodeTypeMatches(node)) {\n        return this.nodeNameTest(getNodeName(node));\n      }\n\n      return false;\n    },\n    _nodeTypeMatches(nodeOrAttr) {\n      if (nodeOrAttr.constructor.name === 'Attr' && this.nodeTypeNum === 2) {\n        return true;\n      }\n      return nodeOrAttr.nodeType === this.nodeTypeNum;\n    },\n    _alwaysTrue: function(name) {return true;},\n    _nodeNameEquals: function _nodeNameEquals(name) {\n      return this.nodeName === name;\n    },\n    _nodeNameLowerCaseEquals: function _nodeNameLowerCaseEquals(name) {\n      return this.nodeName === name.toLowerCase();\n    }\n  };\n\n  function followingSiblingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, shift, peek, followingNode, andSelf, isReverseAxis) {\n    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n    var nodeMultiSet = new NodeMultiSet(isReverseAxis);\n    while (0 < nodeList.length) {  // can be if for following, preceding\n      var node = shift.call(nodeList);\n      console.assert(node != null);\n      node = followingNode(node);\n      nodeMultiSet.pushSeries();\n      var numPushed = 1;\n      while (null != node) {\n        if (! andSelf && matcher.matches(node))\n          nodeMultiSet.addNode(node);\n        if (node === peek.call(nodeList)) {\n          shift.call(nodeList);\n          nodeMultiSet.pushSeries();\n          numPushed++;\n        }\n        if (andSelf && matcher.matches(node))\n          nodeMultiSet.addNode(node);\n        node = followingNode(node);\n      }\n      while (0 < numPushed--)\n        nodeMultiSet.popSeries();\n    }\n    return nodeMultiSet;\n  }\n\n  /** Returns the next non-descendant node in document order.\n   * This is the first node in following::node(), if node is the context.\n   */\n  function followingNonDescendantNode(node) {\n    if (node.ownerElement) {\n      if (node.ownerElement.firstChild)\n        return node.ownerElement.firstChild;\n      node = node.ownerElement;\n    }\n    do {\n      if (node.nextSibling) return node.nextSibling;\n    } while (node = node.parentNode);\n    return null;\n  }\n\n  /** Returns the next node in a document-order depth-first search.\n   * See the definition of document order[1]:\n   *   1) element\n   *   2) namespace nodes\n   *   3) attributes\n   *   4) children\n   *   [1]: http://www.w3.org/TR/xpath/#dt-document-order\n   */\n  function followingNode(node) {\n    if (node.ownerElement)  // attributes: following node of element.\n      node = node.ownerElement;\n    if (null != node.firstChild)\n      return node.firstChild;\n    do {\n      if (null != node.nextSibling) {\n        return node.nextSibling;\n      }\n      node = node.parentNode;\n    } while (node);\n    return null;\n  }\n  /** Returns the previous node in document order (excluding attributes\n   * and namespace nodes).\n   */\n  function precedingNode(node) {\n    if (node.ownerElement)\n      return node.ownerElement;\n    if (null != node.previousSibling) {\n      node = node.previousSibling;\n      while (null != node.lastChild) {\n        node = node.lastChild;\n      }\n      return node;\n    }\n    if (null != node.parentNode) {\n      return node.parentNode;\n    }\n    return null;\n  }\n  /** This axis is inefficient if there are many nodes in the nodeList.\n   * But I think it's a pretty useless axis so it's ok. */\n  function followingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n    var nodeMultiSet = new NodeMultiSet(false);\n    var cursor = nodeList[0];\n    var unorderedFollowingStarts = [];\n    for (var i = 0; i < nodeList.length; i++) {\n      var node = nodeList[i];\n      var start = followingNonDescendantNode(node);\n      if (start)\n        unorderedFollowingStarts.push(start);\n    }\n    if (0 === unorderedFollowingStarts.length)\n      return {nodes:[]};\n    var pos = [], nextPos = [];\n    var started = 0;\n    while (cursor = followingNode(cursor)) {\n      for (var i = unorderedFollowingStarts.length - 1; i >= 0; i--){\n        if (cursor === unorderedFollowingStarts[i]) {\n          nodeMultiSet.pushSeries();\n          unorderedFollowingStarts.splice(i,i+1);\n          started++;\n        }\n      }\n      if (started && matcher.matches(cursor)) {\n        nodeMultiSet.addNode(cursor);\n      }\n    }\n    console.assert(0 === unorderedFollowingStarts.length);\n    for (var i = 0; i < started; i++)\n      nodeMultiSet.popSeries();\n    return nodeMultiSet.finalize();\n  }\n  function precedingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n    var cursor = nodeList.pop();\n    if (null == cursor) return {nodes:{}};\n    var r = {nodes:[], pos:[], lasts:[]};\n    var nextParents = [cursor.parentNode || cursor.ownerElement], nextPos = [1];\n    while (cursor = precedingNode(cursor)) {\n      if (cursor === nodeList[nodeList.length - 1]) {\n        nextParents.push(nodeList.pop());\n        nextPos.push(1);\n      }\n      var matches = matcher.matches(cursor);\n      var pos, someoneUsed = false;\n      if (matches)\n        pos = nextPos.slice();\n\n      for (var i = 0; i < nextParents.length; ++i) {\n        if (cursor === nextParents[i]) {\n          nextParents[i] = cursor.parentNode || cursor.ownerElement;\n          if (matches) {\n            pos[i] = null;\n          }\n        } else {\n          if (matches) {\n            pos[i] = nextPos[i]++;\n            someoneUsed = true;\n          }\n        }\n      }\n      if (someoneUsed) {\n        r.nodes.unshift(cursor);\n        r.pos.unshift(pos);\n      }\n    }\n    for (var i = 0; i < r.pos.length; ++i) {\n      var lasts = [];\n      r.lasts.push(lasts);\n      for (var j = r.pos[i].length - 1; j >= 0; j--) {\n        if (null == r.pos[i][j]) {\n          r.pos[i].splice(j, j+1);\n        } else {\n          lasts.unshift(nextPos[j] - 1);\n        }\n      }\n    }\n    return r;\n  }\n\n  /** node-set, axis -> node-set */\n  function descendantDfs(nodeMultiSet, node, remaining, matcher, andSelf, attrIndices, attrNodes) {\n    while (0 < remaining.length && null != remaining[0].ownerElement) {\n      var attr = remaining.shift();\n      if (andSelf && matcher.matches(attr)) {\n        attrNodes.push(attr);\n        attrIndices.push(nodeMultiSet.nodes.length);\n      }\n    }\n    if (null != node && !andSelf) {\n      if (matcher.matches(node))\n        nodeMultiSet.addNode(node);\n    }\n    var pushed = false;\n    if (null == node) {\n      if (0 === remaining.length) return;\n      node = remaining.shift();\n      nodeMultiSet.pushSeries();\n      pushed = true;\n    } else if (0 < remaining.length && node === remaining[0]) {\n      nodeMultiSet.pushSeries();\n      pushed = true;\n      remaining.shift();\n    }\n    if (andSelf) {\n      if (matcher.matches(node))\n        nodeMultiSet.addNode(node);\n    }\n    // TODO: use optimization. Also try element.getElementsByTagName\n    // var nodeList = 1 === nodeTypeNum && null != node.children ? node.children : node.childNodes;\n    var nodeList = node.childNodes;\n    for (var j = 0; j < nodeList.length; ++j) {\n      var child = nodeList[j];\n      descendantDfs(nodeMultiSet, child, remaining, matcher, andSelf, attrIndices, attrNodes);\n    }\n    if (pushed) {\n      nodeMultiSet.popSeries();\n    }\n  }\n  function descenantHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, andSelf) {\n    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n    var nodeMultiSet = new NodeMultiSet(false);\n    var attrIndices = [], attrNodes = [];\n    while (0 < nodeList.length) {\n      // var node = nodeList.shift();\n      descendantDfs(nodeMultiSet, null, nodeList, matcher, andSelf, attrIndices, attrNodes);\n    }\n    nodeMultiSet.finalize();\n    for (var i = attrNodes.length-1; i >= 0; --i) {\n      nodeMultiSet.nodes.splice(attrIndices[i], attrIndices[i], attrNodes[i]);\n      nodeMultiSet.pos.splice(attrIndices[i], attrIndices[i], [1]);\n      nodeMultiSet.lasts.splice(attrIndices[i], attrIndices[i], [1]);\n    }\n    return nodeMultiSet;\n  }\n  /**\n   */\n  function ancestorHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, andSelf) {\n    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n    var ancestors = []; // array of non-empty arrays of matching ancestors\n    for (var i = 0; i < nodeList.length; ++i) {\n      var node = nodeList[i];\n      var isFirst = true;\n      var a = [];\n      while (null != node) {\n        if (!isFirst || andSelf) {\n          if (matcher.matches(node))\n            a.push(node);\n        }\n        isFirst = false;\n        node = node.parentNode || node.ownerElement;\n      }\n      if (0 < a.length)\n        ancestors.push(a);\n    }\n    var lasts = [];\n    for (var i = 0; i < ancestors.length; ++i) lasts.push(ancestors[i].length);\n    var nodeMultiSet = new NodeMultiSet(true);\n    var newCtx = {nodes:[], pos:[], lasts:[]};\n    while (0 < ancestors.length) {\n      var pos = [ancestors[0].length];\n      var last = [lasts[0]];\n      var node = ancestors[0].pop();\n      for (var i = ancestors.length - 1; i > 0; --i) {\n        if (node === ancestors[i][ancestors[i].length - 1]) {\n          pos.push(ancestors[i].length);\n          last.push(lasts[i]);\n          ancestors[i].pop();\n          if (0 === ancestors[i].length) {\n            ancestors.splice(i, i+1);\n            lasts.splice(i, i+1);\n          }\n        }\n      }\n      if (0 === ancestors[0].length) {\n        ancestors.shift();\n        lasts.shift();\n      }\n      newCtx.nodes.push(node);\n      newCtx.pos.push(pos);\n      newCtx.lasts.push(last);\n    }\n    return newCtx;\n  }\n  /** Helper function for sortDocumentOrder. Returns a list of indices, from the\n   * node to the root, of positions within parent.\n   * For convenience, the node is the first element of the array.\n   */\n  function addressVector(node) {\n    var r = [node];\n    if (null != node.ownerElement) {\n      node = node.ownerElement;\n      r.push(-1);\n    }\n    while (null != node) {\n      var i = 0;\n      while (null != node.previousSibling) {\n        node = node.previousSibling;\n        i++;\n      }\n      r.push(i);\n      node = node.parentNode\n    }\n    return r;\n  }\n  function addressComparator(a, b) {\n    var minlen = Math.min(a.length - 1, b.length - 1),  // not including [0]=node\n        alen = a.length,\n        blen = b.length;\n    if (a[0] === b[0]) return 0;\n    var c;\n    for (var i = 0; i < minlen; ++i) {\n      c = a[alen - i - 1] - b[blen - i - 1];\n      if (0 !== c)\n        break;\n    }\n    if (null == c || 0 === c) {\n      // All equal until one of the nodes. The longer one is the descendant.\n      c = alen - blen;\n    }\n    if (0 === c)\n      c = getNodeName(a) - getNodeName(b);\n    if (0 === c)\n      c = 1;\n    return c;\n  }\n  var sortUniqDocumentOrder = xpath.sortUniqDocumentOrder = function(nodes) {\n    var a = [];\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var v = addressVector(node);\n      a.push(v);\n    }\n    a.sort(addressComparator);\n    var b = [];\n    for (var i = 0; i < a.length; i++) {\n      if (0 < i && a[i][0] === a[i - 1][0])\n        continue;\n      b.push(a[i][0]);\n    }\n    return b;\n  }\n  /** Sort node multiset. Does not do any de-duping. */\n  function sortNodeMultiSet(nodeMultiSet) {\n    var a = [];\n    for (var i = 0; i < nodeMultiSet.nodes.length; i++) {\n      var v = addressVector(nodeMultiSet.nodes[i]);\n      a.push({v:v, n:nodeMultiSet.nodes[i],\n              p:nodeMultiSet.pos[i], l:nodeMultiSet.lasts[i]});\n    }\n    a.sort(compare);\n    var r = {nodes:[], pos:[], lasts:[]};\n    for (var i = 0; i < a.length; ++i) {\n      r.nodes.push(a[i].n);\n      r.pos.push(a[i].p);\n      r.lasts.push(a[i].l);\n    }\n    function compare(x, y) {\n      return addressComparator(x.v, y.v);\n    }\n    return r;\n  }\n  /** Returns an array containing all the ancestors down to a node.\n   * The array starts with document.\n   */\n  function nodeAndAncestors(node) {\n    var ancestors = [node];\n    var p = node;\n    while (p = p.parentNode || p.ownerElement) {\n      ancestors.unshift(p);\n    }\n    return ancestors;\n  }\n  function compareSiblings(a, b) {\n    if (a === b) return 0;\n    var c = a;\n    while (c = c.previousSibling) {\n      if (c === b)\n        return 1;  // b < a\n    }\n    c = b;\n    while (c = c.previousSibling) {\n      if (c === a)\n        return -1;  // a < b\n    }\n    throw new Error('a and b are not siblings: ' + xpath.stringifyObject(a) + ' vs ' + xpath.stringifyObject(b));\n  }\n  /** The merge in merge-sort.*/\n  function mergeNodeLists(x, y) {\n    var a, b, aanc, banc, r = [];\n    if ('object' !== typeof x)\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Invalid LHS for | operator ' +\n                               '(expected node-set): ' + x);\n    if ('object' !== typeof y)\n      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                               'Invalid LHS for | operator ' +\n                               '(expected node-set): ' + y);\n    while (true) {\n      if (null == a) {\n        a = x.shift();\n        if (null != a)\n          aanc = addressVector(a);\n      }\n      if (null == b) {\n        b = y.shift();\n        if (null != b)\n          banc = addressVector(b);\n      }\n      if (null == a || null == b) break;\n      var c = addressComparator(aanc, banc);\n      if (c < 0) {\n        r.push(a);\n        a = null;\n        aanc = null;\n      } else if (c > 0) {\n        r.push(b);\n        b = null;\n        banc = null;\n      } else if (getNodeName(a) < getNodeName(b)) {  // attributes\n        r.push(a);\n        a = null;\n        aanc = null;\n      } else if (getNodeName(a) > getNodeName(b)) {  // attributes\n        r.push(b);\n        b = null;\n        banc = null;\n      } else if (a !== b) {\n        // choose b arbitrarily\n        r.push(b);\n        b = null;\n        banc = null;\n      } else {\n        console.assert(a === b, c);\n        // just skip b without pushing it.\n        b = null;\n        banc = null;\n      }\n    }\n    while (a) {\n      r.push(a);\n      a = x.shift();\n    }\n    while (b) {\n      r.push(b);\n      b = y.shift();\n    }\n    return r;\n  }\n  function comparisonHelper(test, x, y, isNumericComparison) {\n    var coersion;\n    if (isNumericComparison)\n      coersion = fn.number;\n    else coersion =\n      'boolean' === typeof x || 'boolean' === typeof y ? fn['boolean'] :\n      'number' === typeof x || 'number' === typeof y ? fn.number :\n      fn.string;\n    if ('object' === typeof x && 'object' === typeof y) {\n      var aMap = {};\n      for (var i = 0; i < x.nodes.length; ++i) {\n        var xi = coersion({nodes:[x.nodes[i]]});\n        for (var j = 0; j < y.nodes.length; ++j) {\n          var yj = coersion({nodes:[y.nodes[j]]});\n          if (test(xi, yj)) return true;\n        }\n      }\n      return false;\n    } else if ('object' === typeof x && x.nodes && x.nodes.length) {\n      for (var i = 0; i < x.nodes.length; ++i) {\n        var xi = coersion({nodes:[x.nodes[i]]}), yc = coersion(y);\n        if (test(xi, yc))\n          return true;\n      }\n      return false;\n    } else if ('object' === typeof y && x.nodes && x.nodes.length) {\n      for (var i = 0; i < x.nodes.length; ++i) {\n        var yi = coersion({nodes:[y.nodes[i]]}), xc = coersion(x);\n        if (test(xc, yi))\n          return true;\n      }\n      return false;\n    } else {\n      var xc = coersion(x), yc = coersion(y);\n      return test(xc, yc);\n    }\n  }\n  var axes = xpath.axes = {\n    'ancestor':\n      function ancestor(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return ancestorHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, false);\n      },\n    'ancestor-or-self':\n      function ancestorOrSelf(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return ancestorHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, true);\n      },\n    'attribute':\n      function attribute(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        // TODO: figure out whether positions should be undefined here.\n        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n        var nodeMultiSet = new NodeMultiSet(false);\n        if (null != nodeName) {\n          // TODO: with namespace\n          for (var i = 0; i < nodeList.length; ++i) {\n            var node = nodeList[i];\n            if (null == node.getAttributeNode)\n              continue;  // only Element has .getAttributeNode\n            var attr = node.getAttributeNode(nodeName);\n            if (null != attr && matcher.matches(attr)) {\n              nodeMultiSet.pushSeries();\n              nodeMultiSet.addNode(attr);\n              nodeMultiSet.popSeries();\n            }\n          }\n        } else {\n          for (var i = 0; i < nodeList.length; ++i) {\n            var node = nodeList[i];\n            if (null != node.attributes) {\n              nodeMultiSet.pushSeries();\n              for (var j = 0; j < node.attributes.length; j++) {  // all nodes have .attributes\n                var attr = node.attributes[j];\n                if (matcher.matches(attr))  // TODO: I think this check is unnecessary\n                  nodeMultiSet.addNode(attr);\n              }\n              nodeMultiSet.popSeries();\n            }\n          }\n        }\n        return nodeMultiSet.finalize();\n      },\n    'child':\n      function child(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n        var nodeMultiSet = new NodeMultiSet(false);\n        for (var i = 0; i < nodeList.length; ++i) {\n          var n = nodeList[i];\n          if (n.ownerElement)  // skip attribute nodes' text child.\n            continue;\n          if (n.childNodes) {\n            nodeMultiSet.pushSeries();\n            var childList = 1 === nodeTypeNum && null != n.children ?\n                n.children : n.childNodes;\n            for (var j = 0; j < childList.length; ++j) {\n              var child = childList[j];\n              if (matcher.matches(child)) {\n                nodeMultiSet.addNode(child);\n              }\n              // don't have to do de-duping because children have parent,\n              // which are current context.\n            }\n            nodeMultiSet.popSeries();\n          }\n        }\n        nodeMultiSet.finalize();\n        return sortNodeMultiSet(nodeMultiSet);\n      },\n    'descendant':\n      function descenant(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return descenantHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, false);\n      },\n    'descendant-or-self':\n      function descenantOrSelf(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return descenantHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, true);\n      },\n    'following':\n      function following(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return followingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase);\n      },\n    'following-sibling':\n      function followingSibling(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return followingSiblingHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase,\n          Array.prototype.shift, function() {return this[0];},\n          function(node) {return node.nextSibling;});\n      },\n    'namespace':\n      function namespace(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        // TODO\n      },\n    'parent':\n      function parent(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n        var nodes = [], pos = [];\n        for (var i = 0; i < nodeList.length; ++i) {\n          var parent = nodeList[i].parentNode || nodeList[i].ownerElement;\n          if (null == parent)\n            continue;\n          if (!matcher.matches(parent))\n            continue;\n          if (nodes.length > 0 && parent === nodes[nodes.length-1])\n            continue;\n          nodes.push(parent);\n          pos.push([1]);\n        }\n        return {nodes:nodes, pos:pos, lasts:pos};\n      },\n    'preceding':\n      function preceding(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return precedingHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase);\n      },\n    'preceding-sibling':\n      function precedingSibling(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        return followingSiblingHelper(\n          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase,\n          Array.prototype.pop, function() {return this[this.length-1];},\n          function(node) {return node.previousSibling},\n          false, true);\n      },\n    'self':\n      function self(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {\n        var nodes = [], pos = [];\n        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);\n        for (var i = 0; i < nodeList.length; ++i) {\n          if (matcher.matches(nodeList[i])) {\n            nodes.push(nodeList[i]);\n            pos.push([1]);\n          }\n        }\n        return {nodes: nodes, pos: pos, lasts: pos}\n      }\n  };\n\n  /***************************************************************************\n   *                         Evaluation: functions                           *\n   ***************************************************************************/\n  var fn = {\n    'number': function number(optObject) {\n      if ('number' === typeof optObject)\n        return optObject;\n      if ('string' === typeof optObject)\n        return parseFloat(optObject);  // note: parseFloat(' ') -> NaN, unlike +' ' -> 0.\n      if ('boolean' === typeof optObject)\n        return +optObject;\n      return fn.number(fn.string.call(this, optObject));  // for node-sets\n    },\n    'string': function string(optObject) {\n      if (null == optObject)\n        return fn.string(this);\n      if ('string' === typeof optObject || 'boolean' === typeof optObject ||\n          'number' === typeof optObject)\n        return '' + optObject;\n      if (0 == optObject.nodes.length) return '';\n      if (null != optObject.nodes[0].textContent)\n        return optObject.nodes[0].textContent;\n      return optObject.nodes[0].nodeValue;\n    },\n    'boolean': function booleanVal(x) {\n      return 'object' === typeof x ? x.nodes.length > 0 : !!x;\n    },\n    'last': function last() {\n      console.assert(Array.isArray(this.pos));\n      console.assert(Array.isArray(this.lasts));\n      console.assert(1 === this.pos.length);\n      console.assert(1 === this.lasts.length);\n      console.assert(1 === this.lasts[0].length);\n      return this.lasts[0][0];\n    },\n    'position': function position() {\n      console.assert(Array.isArray(this.pos));\n      console.assert(Array.isArray(this.lasts));\n      console.assert(1 === this.pos.length);\n      console.assert(1 === this.lasts.length);\n      console.assert(1 === this.pos[0].length);\n      return this.pos[0][0];\n    },\n    'count': function count(nodeSet) {\n      if ('object' !== typeof nodeSet)\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Position ' + stream.position() +\n                                 ': Function count(node-set) ' +\n                                 'got wrong argument type: ' + nodeSet);\n      return nodeSet.nodes.length;\n    },\n    'id': function id(object) {\n      var r = {nodes: []};\n      var doc = this.nodes[0].ownerDocument || this.nodes[0];\n      console.assert(doc);\n      var ids;\n      if ('object' === typeof object) {\n        // for node-sets, map id over each node value.\n        ids = [];\n        for (var i = 0; i < object.nodes.length; ++i) {\n          var idNode = object.nodes[i];\n          var idsString = fn.string({nodes:[idNode]});\n          var a = idsString.split(/[ \\t\\r\\n]+/g);\n          Array.prototype.push.apply(ids, a);\n        }\n      } else {\n        var idsString = fn.string(object);\n        var a = idsString.split(/[ \\t\\r\\n]+/g);\n        ids = a;\n      }\n      for (var i = 0; i < ids.length; ++i) {\n        var id = ids[i];\n        if (0 === id.length)\n          continue;\n        var node = doc.getElementById(id);\n        if (null != node)\n          r.nodes.push(node);\n      }\n      r.nodes = sortUniqDocumentOrder(r.nodes);\n      return r;\n    },\n    'local-name': function(nodeSet) {\n      if (null == nodeSet)\n        return fn.name(this);\n      if (null == nodeSet.nodes) {\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'argument to name() must be a node-set. got ' + nodeSet);\n      }\n      // TODO: namespaced version\n      return nodeSet.nodes[0].localName;\n    },\n    'namespace-uri': function(nodeSet) {\n      // TODO\n      throw new Error('not implemented yet');\n    },\n    'name': function(nodeSet) {\n      if (null == nodeSet)\n        return fn.name(this);\n      if (null == nodeSet.nodes) {\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'argument to name() must be a node-set. got ' + nodeSet);\n      }\n      return nodeSet.nodes[0].name;\n    },\n    'concat': function concat(x) {\n      var l = [];\n      for (var i = 0; i < arguments.length; ++i) {\n        l.push(fn.string(arguments[i]));\n      }\n      return l.join('');\n    },\n    'starts-with': function startsWith(a, b) {\n      var as = fn.string(a), bs = fn.string(b);\n      return as.substr(0, bs.length) === bs;\n    },\n    'contains': function contains(a, b) {\n      var as = fn.string(a), bs = fn.string(b);\n      var i = as.indexOf(bs);\n      if (-1 === i) return false;\n      return true;\n    },\n    'substring-before': function substringBefore(a, b) {\n      var as = fn.string(a), bs = fn.string(b);\n      var i = as.indexOf(bs);\n      if (-1 === i) return '';\n      return as.substr(0, i);\n    },\n    'substring-after': function substringBefore(a, b) {\n      var as = fn.string(a), bs = fn.string(b);\n      var i = as.indexOf(bs);\n      if (-1 === i) return '';\n      return as.substr(i + bs.length);\n    },\n    'substring': function substring(string, start, optEnd) {\n      if (null == string || null == start) {\n        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                 'Must be at least 2 arguments to string()');\n      }\n      var sString = fn.string(string),\n          iStart = fn.round(start),\n          iEnd = optEnd == null ? null : fn.round(optEnd);\n      // Note that xpath string positions user 1-based index\n      if (iEnd == null)\n        return sString.substr(iStart - 1);\n      else\n        return sString.substr(iStart - 1, iEnd);\n    },\n    'string-length': function stringLength(optString) {\n      return fn.string.call(this, optString).length;\n    },\n    'normalize-space': function normalizeSpace(optString) {\n      var s = fn.string.call(this, optString);\n      return s.replace(/[ \\t\\r\\n]+/g, ' ').replace(/^ | $/g, '');\n    },\n    'translate': function translate(string, from, to) {\n      var sString = fn.string.call(this, string),\n          sFrom = fn.string(from),\n          sTo = fn.string(to);\n      var eachCharRe = [];\n      var map = {};\n      for (var i = 0; i < sFrom.length; ++i) {\n        var c = sFrom.charAt(i);\n        map[c] = sTo.charAt(i);  // returns '' if beyond length of sTo.\n        // copied from goog.string.regExpEscape in the Closure library.\n        eachCharRe.push(\n          c.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1').\n            replace(/\\x08/g, '\\\\x08'));\n      }\n      var re = new RegExp(eachCharRe.join('|'), 'g');\n      return sString.replace(re, function(c) {return map[c];});\n    },\n    /// Boolean functions\n    'not': function not(x) {\n      var bx = fn['boolean'](x);\n      return !bx;\n    },\n    'true': function trueVal() { return true; },\n    'false': function falseVal() { return false; },\n    // TODO\n    'lang': function lang(string) { throw new Error('Not implemented');},\n    'sum': function sum(optNodeSet) {\n      if (null == optNodeSet) return fn.sum(this);\n      // for node-sets, map id over each node value.\n      var sum = 0;\n      for (var i = 0; i < optNodeSet.nodes.length; ++i) {\n        var node = optNodeSet.nodes[i];\n        var x = fn.number({nodes:[node]});\n        sum += x;\n      }\n      return sum;\n    },\n    'floor': function floor(number) {\n      return Math.floor(fn.number(number));\n    },\n    'ceiling': function ceiling(number) {\n      return Math.ceil(fn.number(number));\n    },\n    'round': function round(number) {\n      return Math.round(fn.number(number));\n    }\n  };\n  /***************************************************************************\n   *                         Evaluation: operators                           *\n   ***************************************************************************/\n  var more = {\n    UnaryMinus: function(x) { return -fn.number(x); },\n    '+': function(x, y) { return fn.number(x) + fn.number(y); },\n    '-': function(x, y) { return fn.number(x) - fn.number(y); },\n    '*': function(x, y) { return fn.number(x) * fn.number(y); },\n    'div': function(x, y) { return fn.number(x) / fn.number(y); },\n    'mod': function(x, y) { return fn.number(x) % fn.number(y); },\n    '<': function(x, y) {\n      return comparisonHelper(function(x, y) { return fn.number(x) < fn.number(y);}, x, y, true);\n    },\n    '<=': function(x, y) {\n      return comparisonHelper(function(x, y) { return fn.number(x) <= fn.number(y);}, x, y, true);\n    },\n    '>':  function(x, y) {\n      return comparisonHelper(function(x, y) { return fn.number(x) > fn.number(y);}, x, y, true);\n    },\n    '>=': function(x, y) {\n      return comparisonHelper(function(x, y) { return fn.number(x) >= fn.number(y);}, x, y, true);\n    },\n    'and': function(x, y) { return fn['boolean'](x) && fn['boolean'](y); },\n    'or': function(x, y) { return fn['boolean'](x) || fn['boolean'](y); },\n    '|': function(x, y) { return {nodes: mergeNodeLists(x.nodes, y.nodes)}; },\n    '=': function(x, y) {\n      // optimization for two node-sets case: avoid n^2 comparisons.\n      if ('object' === typeof x && 'object' === typeof y) {\n        var aMap = {};\n        for (var i = 0; i < x.nodes.length; ++i) {\n          var s = fn.string({nodes:[x.nodes[i]]});\n          aMap[s] = true;\n        }\n        for (var i = 0; i < y.nodes.length; ++i) {\n          var s = fn.string({nodes:[y.nodes[i]]});\n          if (aMap[s]) return true;\n        }\n        return false;\n      } else {\n        return comparisonHelper(function(x, y) {return x === y;}, x, y);\n      }\n    },\n    '!=': function(x, y) {\n      // optimization for two node-sets case: avoid n^2 comparisons.\n      if ('object' === typeof x && 'object' === typeof y) {\n        if (0 === x.nodes.length || 0 === y.nodes.length) return false;\n        var aMap = {};\n        for (var i = 0; i < x.nodes.length; ++i) {\n          var s = fn.string({nodes:[x.nodes[i]]});\n          aMap[s] = true;\n        }\n        for (var i = 0; i < y.nodes.length; ++i) {\n          var s = fn.string({nodes:[y.nodes[i]]});\n          if (!aMap[s]) return true;\n        }\n        return false;\n      } else {\n        return comparisonHelper(function(x, y) {return x !== y;}, x, y);\n      }\n    }\n  };\n  var nodeTypes = xpath.nodeTypes = {\n    'node': 0,\n    'attribute': 2,\n    'comment': 8, // this.doc.COMMENT_NODE,\n    'text': 3, // this.doc.TEXT_NODE,\n    'processing-instruction': 7, // this.doc.PROCESSING_INSTRUCTION_NODE,\n    'element': 1  //this.doc.ELEMENT_NODE\n  };\n  /** For debugging and unit tests: returnjs a stringified version of the\n   * argument. */\n  var stringifyObject = xpath.stringifyObject = function stringifyObject(ctx) {\n    var seenKey = 'seen' + Math.floor(Math.random()*1000000000);\n    return JSON.stringify(helper(ctx));\n\n    function helper(ctx) {\n      if (Array.isArray(ctx)) {\n        return ctx.map(function(x) {return helper(x);});\n      }\n      if ('object' !== typeof ctx) return ctx;\n      if (null == ctx) return ctx;\n    //  if (ctx.toString) return ctx.toString();\n      if (null != ctx.outerHTML) return ctx.outerHTML;\n      if (null != ctx.nodeValue) return ctx.nodeName + '=' + ctx.nodeValue;\n      if (ctx[seenKey]) return '[circular]';\n      ctx[seenKey] = true;\n      var nicer = {};\n      for (var key in ctx) {\n        if (seenKey === key)\n          continue;\n        try {\n          nicer[key] = helper(ctx[key]);\n        } catch (e) {\n          nicer[key] = '[exception: ' + e.message + ']';\n        }\n      }\n      delete ctx[seenKey];\n      return nicer;\n    }\n  }\n  var Evaluator = xpath.Evaluator = function Evaluator(doc) {\n    this.doc = doc;\n  }\n  Evaluator.prototype = {\n    val: function val(ast, ctx) {\n      console.assert(ctx.nodes);\n\n      if ('number' === typeof ast || 'string' === typeof ast) return ast;\n      if (more[ast[0]]) {\n        var evaluatedParams = [];\n        for (var i = 1; i < ast.length; ++i) {\n          evaluatedParams.push(this.val(ast[i], ctx));\n        }\n        var r = more[ast[0]].apply(ctx, evaluatedParams);\n        return r;\n      }\n      switch (ast[0]) {\n        case 'Root': return {nodes: [this.doc]};\n        case 'FunctionCall':\n          var functionName = ast[1], functionParams = ast[2];\n          if (null == fn[functionName])\n            throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,\n                                     'Unknown function: ' + functionName);\n          var evaluatedParams = [];\n          for (var i = 0; i < functionParams.length; ++i) {\n            evaluatedParams.push(this.val(functionParams[i], ctx));\n          }\n          var r = fn[functionName].apply(ctx, evaluatedParams);\n          return r;\n        case 'Predicate':\n          var lhs = this.val(ast[1], ctx);\n          var ret = {nodes: []};\n          var contexts = eachContext(lhs);\n          for (var i = 0; i < contexts.length; ++i) {\n            var singleNodeSet = contexts[i];\n            var rhs = this.val(ast[2], singleNodeSet);\n            var success;\n            if ('number' === typeof rhs) {\n              success = rhs === singleNodeSet.pos[0][0];\n            } else {\n              success = fn['boolean'](rhs);\n            }\n            if (success) {\n              var node = singleNodeSet.nodes[0];\n              ret.nodes.push(node);\n              // skip over all the rest of the same node.\n              while (i+1 < contexts.length && node === contexts[i+1].nodes[0]) {\n                i++;\n              }\n            }\n          }\n          return ret;\n        case 'PathExpr':\n          // turn the path into an expressoin; i.e., remove the position\n          // information of the last axis.\n          var x = this.val(ast[1], ctx);\n          // Make the nodeset a forward-direction-only one.\n          if (x.finalize) {  // it is a NodeMultiSet\n            return {nodes: x.nodes};\n          } else {\n            return x;\n          }\n        case '/':\n          // TODO: don't generate '/' nodes, just Axis nodes.\n          var lhs = this.val(ast[1], ctx);\n          console.assert(null != lhs);\n          var r = this.val(ast[2], lhs);\n          console.assert(null != r);\n          return r;\n        case 'Axis':\n          // All the axis tests from Step. We only get AxisSpecifier NodeTest,\n          // not the predicate (which is applied later)\n          var axis = ast[1],\n              nodeType = ast[2],\n              nodeTypeNum = nodeTypes[nodeType],\n              shouldLowerCase = true,  // TODO: give option\n              nodeName = ast[3] && shouldLowerCase ? ast[3].toLowerCase() : ast[3];\n          nodeName = nodeName === '*' ? null : nodeName;\n          if ('object' !== typeof ctx) return {nodes:[], pos:[]};\n          var nodeList = ctx.nodes.slice();  // TODO: is copy needed?\n          var r = axes[axis](nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase);\n          return r;\n      }\n    }\n  };\n  var evaluate = xpath.evaluate = function evaluate(expr, doc, context) {\n    //var astFactory = new AstEvaluatorFactory(doc, context);\n    var stream = new Stream(expr);\n    var ast = parse(stream, astFactory);\n    var val = new Evaluator(doc).val(ast, {nodes: [context]});\n    return val;\n  }\n\n  /***************************************************************************\n   *                           DOM interface                                 *\n   ***************************************************************************/\n  var XPathException = xpath.XPathException = function XPathException(code, message) {\n    var e = new Error(message);\n    e.name = 'XPathException';\n    e.code = code;\n    return e;\n  }\n  XPathException.INVALID_EXPRESSION_ERR = 51;\n  XPathException.TYPE_ERR = 52;\n\n\n  var XPathEvaluator = xpath.XPathEvaluator = function XPathEvaluator() {}\n  XPathEvaluator.prototype = {\n    createExpression: function(expression, resolver) {\n      return new XPathExpression(expression, resolver);\n    },\n    createNSResolver: function(nodeResolver) {\n      // TODO\n    },\n    evaluate: function evaluate(expression, contextNode, resolver, type, result) {\n      var expr = new XPathExpression(expression, resolver);\n      return expr.evaluate(contextNode, type, result);\n    }\n  };\n\n\n  var XPathExpression = xpath.XPathExpression = function XPathExpression(expression, resolver, optDoc) {\n    var stream = new Stream(expression);\n    this._ast = parse(stream, astFactory);\n    this._doc = optDoc;\n  }\n  XPathExpression.prototype = {\n    evaluate: function evaluate(contextNode, type, result) {\n      if (null == contextNode.nodeType)\n        throw new Error('bad argument (expected context node): ' + contextNode);\n      var doc = contextNode.ownerDocument || contextNode;\n      if (null != this._doc && this._doc !== doc) {\n        throw new core.DOMException(\n            core.DOMException.WRONG_DOCUMENT_ERR,\n            'The document must be the same as the context node\\'s document.');\n      }\n      var evaluator = new Evaluator(doc);\n      var value = evaluator.val(this._ast, {nodes: [contextNode]});\n      if (XPathResult.NUMBER_TYPE === type)\n        value = fn.number(value);\n      else if (XPathResult.STRING_TYPE === type)\n        value = fn.string(value);\n      else if (XPathResult.BOOLEAN_TYPE === type)\n        value = fn['boolean'](value);\n      else if (XPathResult.ANY_TYPE !== type &&\n               XPathResult.UNORDERED_NODE_ITERATOR_TYPE !== type &&\n               XPathResult.ORDERED_NODE_ITERATOR_TYPE !== type &&\n               XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE !== type &&\n               XPathResult.ORDERED_NODE_SNAPSHOT_TYPE !== type &&\n               XPathResult.ANY_UNORDERED_NODE_TYPE !== type &&\n               XPathResult.FIRST_ORDERED_NODE_TYPE !== type)\n        throw new core.DOMException(\n            core.DOMException.NOT_SUPPORTED_ERR,\n            'You must provide an XPath result type (0=any).');\n      else if (XPathResult.ANY_TYPE !== type &&\n               'object' !== typeof value)\n        throw new XPathException(\n            XPathException.TYPE_ERR,\n            'Value should be a node-set: ' + value);\n      return new XPathResult(doc, value, type);\n    }\n  }\n\n  var XPathResult = xpath.XPathResult = function XPathResult(doc, value, resultType) {\n    this._value = value;\n    this._resultType = resultType;\n    this._i = 0;\n\n    // TODO: we removed mutation events but didn't take care of this. No tests fail, so that's nice, but eventually we\n    // should fix this, preferably by entirely replacing our XPath implementation.\n    // this._invalidated = false;\n    // if (this.resultType === XPathResult.UNORDERED_NODE_ITERATOR_TYPE ||\n    //     this.resultType === XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\n    //   doc.addEventListener('DOMSubtreeModified', invalidate, true);\n    //   var self = this;\n    //   function invalidate() {\n    //     self._invalidated = true;\n    //     doc.removeEventListener('DOMSubtreeModified', invalidate, true);\n    //   }\n    // }\n  }\n  XPathResult.ANY_TYPE = 0;\n  XPathResult.NUMBER_TYPE = 1;\n  XPathResult.STRING_TYPE = 2;\n  XPathResult.BOOLEAN_TYPE = 3;\n  XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\n  XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\n  XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\n  XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\n  XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\n  XPathResult.FIRST_ORDERED_NODE_TYPE = 9;\n  var proto = {\n    // XPathResultType\n    get resultType() {\n      if (this._resultType) return this._resultType;\n      switch (typeof this._value) {\n        case 'number': return XPathResult.NUMBER_TYPE;\n        case 'string': return XPathResult.STRING_TYPE;\n        case 'boolean': return XPathResult.BOOLEAN_TYPE;\n        default: return XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\n      }\n    },\n    get numberValue() {\n      if (XPathResult.NUMBER_TYPE !== this.resultType)\n        throw new XPathException(XPathException.TYPE_ERR,\n                                 'You should have asked for a NUMBER_TYPE.');\n      return this._value;\n    },\n    get stringValue() {\n      if (XPathResult.STRING_TYPE !== this.resultType)\n        throw new XPathException(XPathException.TYPE_ERR,\n                                 'You should have asked for a STRING_TYPE.');\n      return this._value;\n    },\n    get booleanValue() {\n      if (XPathResult.BOOLEAN_TYPE !== this.resultType)\n        throw new XPathException(XPathException.TYPE_ERR,\n                                 'You should have asked for a BOOLEAN_TYPE.');\n      return this._value;\n    },\n    get singleNodeValue() {\n      if (XPathResult.ANY_UNORDERED_NODE_TYPE !== this.resultType &&\n          XPathResult.FIRST_ORDERED_NODE_TYPE !== this.resultType)\n        throw new XPathException(\n            XPathException.TYPE_ERR,\n            'You should have asked for a FIRST_ORDERED_NODE_TYPE.');\n      return this._value.nodes[0] || null;\n    },\n    get invalidIteratorState() {\n      if (XPathResult.UNORDERED_NODE_ITERATOR_TYPE !== this.resultType &&\n          XPathResult.ORDERED_NODE_ITERATOR_TYPE !== this.resultType)\n        return false;\n      return !!this._invalidated;\n    },\n    get snapshotLength() {\n      if (XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE !== this.resultType &&\n          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE !== this.resultType)\n        throw new XPathException(\n            XPathException.TYPE_ERR,\n            'You should have asked for a ORDERED_NODE_SNAPSHOT_TYPE.');\n      return this._value.nodes.length;\n    },\n    iterateNext: function iterateNext() {\n      if (XPathResult.UNORDERED_NODE_ITERATOR_TYPE !== this.resultType &&\n          XPathResult.ORDERED_NODE_ITERATOR_TYPE !== this.resultType)\n        throw new XPathException(\n            XPathException.TYPE_ERR,\n            'You should have asked for a ORDERED_NODE_ITERATOR_TYPE.');\n      if (this.invalidIteratorState)\n        throw new core.DOMException(\n            core.DOMException.INVALID_STATE_ERR,\n            'The document has been mutated since the result was returned');\n      return this._value.nodes[this._i++] || null;\n    },\n    snapshotItem: function snapshotItem(index) {\n      if (XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE !== this.resultType &&\n          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE !== this.resultType)\n        throw new XPathException(\n            XPathException.TYPE_ERR,\n            'You should have asked for a ORDERED_NODE_SNAPSHOT_TYPE.');\n      return this._value.nodes[index] || null;\n    }\n  };\n  // so you can access ANY_TYPE etc. from the instances:\n  XPathResult.prototype = Object.create(XPathResult,\n      Object.keys(proto).reduce(function (descriptors, name) {\n        descriptors[name] = Object.getOwnPropertyDescriptor(proto, name);\n        return descriptors;\n      }, {\n        constructor: {\n          value: XPathResult,\n          writable: true,\n          configurable: true\n        }\n      }));\n\n  core.XPathException = XPathException;\n  core.XPathExpression = XPathExpression;\n  core.XPathResult = XPathResult;\n  core.XPathEvaluator = XPathEvaluator;\n\n  core.Document.prototype.createExpression =\n    XPathEvaluator.prototype.createExpression;\n\n  core.Document.prototype.createNSResolver =\n      XPathEvaluator.prototype.createNSResolver;\n\n  core.Document.prototype.evaluate = XPathEvaluator.prototype.evaluate;\n\n  return xpath; // for tests\n};\n"},"lineCount":1875}},"error":null,"hash":"2e799041c97f68cea32ef16baadbeeca","cacheData":{"env":{}}}