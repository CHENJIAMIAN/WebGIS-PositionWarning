{"id":"node_modules/turf-point-on-surface/index.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557726847338},{"name":"C:\\桌面\\new-project\\node_modules\\turf-point-on-surface\\package.json","includedInParent":true,"mtime":1557726826220},{"name":"turf-helpers","loc":{"line":1,"column":32},"parent":"C:\\桌面\\new-project\\node_modules\\turf-point-on-surface\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-helpers\\index.js"},{"name":"turf-center","loc":{"line":2,"column":23},"parent":"C:\\桌面\\new-project\\node_modules\\turf-point-on-surface\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-center\\index.js"},{"name":"turf-distance","loc":{"line":3,"column":23},"parent":"C:\\桌面\\new-project\\node_modules\\turf-point-on-surface\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-distance\\index.js"},{"name":"turf-inside","loc":{"line":4,"column":21},"parent":"C:\\桌面\\new-project\\node_modules\\turf-point-on-surface\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-inside\\index.js"},{"name":"turf-explode","loc":{"line":5,"column":22},"parent":"C:\\桌面\\new-project\\node_modules\\turf-point-on-surface\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-explode\\index.js"}],"generated":{"js":"var featureCollection = require('turf-helpers').featureCollection;\nvar centroid = require('turf-center');\nvar distance = require('turf-distance');\nvar inside = require('turf-inside');\nvar explode = require('turf-explode');\n\n/**\n * Takes a feature and returns a {@link Point} guaranteed to be on the surface of the feature.\n *\n * * Given a {@link Polygon}, the point will be in the area of the polygon\n * * Given a {@link LineString}, the point will be along the string\n * * Given a {@link Point}, the point will the same as the input\n *\n * @param {(Feature|FeatureCollection)} fc any feature or set of features\n * @returns {Feature} a point on the surface of `input`\n * @example\n * // create a random polygon\n * var polygon = turf.random('polygon');\n *\n * //=polygon\n *\n * var pointOnPolygon = turf.pointOnSurface(polygon);\n *\n* var resultFeatures = polygon.features.concat(pointOnPolygon);\n* var result = {\n*   \"type\": \"FeatureCollection\",\n*   \"features\": resultFeatures\n* };\n *\n * //=result\n */\nfunction pointOnSurface(fc) {\n    // normalize\n    if (fc.type !== 'FeatureCollection') {\n        if (fc.type !== 'Feature') {\n            fc = {\n                type: 'Feature',\n                geometry: fc,\n                properties: {}\n            };\n        }\n        fc = featureCollection([fc]);\n    }\n\n    //get centroid\n    var cent = centroid(fc);\n\n    // check to see if centroid is on surface\n    var onSurface = false;\n    var i = 0;\n    while (!onSurface && i < fc.features.length) {\n        var geom = fc.features[i].geometry;\n        var x, y, x1, y1, x2, y2, k;\n        var onLine = false;\n        if (geom.type === 'Point') {\n            if (cent.geometry.coordinates[0] === geom.coordinates[0] &&\n        cent.geometry.coordinates[1] === geom.coordinates[1]) {\n                onSurface = true;\n            }\n        } else if (geom.type === 'MultiPoint') {\n            var onMultiPoint = false;\n            k = 0;\n            while (!onMultiPoint && k < geom.coordinates.length) {\n                if (cent.geometry.coordinates[0] === geom.coordinates[k][0] &&\n          cent.geometry.coordinates[1] === geom.coordinates[k][1]) {\n                    onSurface = true;\n                    onMultiPoint = true;\n                }\n                k++;\n            }\n        } else if (geom.type === 'LineString') {\n            k = 0;\n            while (!onLine && k < geom.coordinates.length - 1) {\n                x = cent.geometry.coordinates[0];\n                y = cent.geometry.coordinates[1];\n                x1 = geom.coordinates[k][0];\n                y1 = geom.coordinates[k][1];\n                x2 = geom.coordinates[k + 1][0];\n                y2 = geom.coordinates[k + 1][1];\n                if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n                    onLine = true;\n                    onSurface = true;\n                }\n                k++;\n            }\n        } else if (geom.type === 'MultiLineString') {\n            var j = 0;\n            while (j < geom.coordinates.length) {\n                onLine = false;\n                k = 0;\n                var line = geom.coordinates[j];\n                while (!onLine && k < line.length - 1) {\n                    x = cent.geometry.coordinates[0];\n                    y = cent.geometry.coordinates[1];\n                    x1 = line[k][0];\n                    y1 = line[k][1];\n                    x2 = line[k + 1][0];\n                    y2 = line[k + 1][1];\n                    if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n                        onLine = true;\n                        onSurface = true;\n                    }\n                    k++;\n                }\n                j++;\n            }\n        } else if (geom.type === 'Polygon' || geom.type === 'MultiPolygon') {\n            var f = {\n                type: 'Feature',\n                geometry: geom,\n                properties: {}\n            };\n            if (inside(cent, f)) {\n                onSurface = true;\n            }\n        }\n        i++;\n    }\n    if (onSurface) {\n        return cent;\n    } else {\n        var vertices = featureCollection([]);\n        for (i = 0; i < fc.features.length; i++) {\n            vertices.features = vertices.features.concat(explode(fc.features[i]).features);\n        }\n        var closestVertex;\n        var closestDistance = Infinity;\n        for (i = 0; i < vertices.features.length; i++) {\n            var dist = distance(cent, vertices.features[i], 'miles');\n            if (dist < closestDistance) {\n                closestDistance = dist;\n                closestVertex = vertices.features[i];\n            }\n        }\n        return closestVertex;\n    }\n}\n\nfunction pointOnSegment(x, y, x1, y1, x2, y2) {\n    var ab = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    var ap = Math.sqrt((x - x1) * (x - x1) + (y - y1) * (y - y1));\n    var pb = Math.sqrt((x2 - x) * (x2 - x) + (y2 - y) * (y2 - y));\n    if (ab === ap + pb) {\n        return true;\n    }\n}\n\nmodule.exports = pointOnSurface;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/turf-point-on-surface/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}}],"sources":{"node_modules/turf-point-on-surface/index.js":"var featureCollection = require('turf-helpers').featureCollection;\nvar centroid = require('turf-center');\nvar distance = require('turf-distance');\nvar inside = require('turf-inside');\nvar explode = require('turf-explode');\n\n/**\n * Takes a feature and returns a {@link Point} guaranteed to be on the surface of the feature.\n *\n * * Given a {@link Polygon}, the point will be in the area of the polygon\n * * Given a {@link LineString}, the point will be along the string\n * * Given a {@link Point}, the point will the same as the input\n *\n * @param {(Feature|FeatureCollection)} fc any feature or set of features\n * @returns {Feature} a point on the surface of `input`\n * @example\n * // create a random polygon\n * var polygon = turf.random('polygon');\n *\n * //=polygon\n *\n * var pointOnPolygon = turf.pointOnSurface(polygon);\n *\n* var resultFeatures = polygon.features.concat(pointOnPolygon);\n* var result = {\n*   \"type\": \"FeatureCollection\",\n*   \"features\": resultFeatures\n* };\n *\n * //=result\n */\nfunction pointOnSurface(fc) {\n    // normalize\n    if (fc.type !== 'FeatureCollection') {\n        if (fc.type !== 'Feature') {\n            fc = {\n                type: 'Feature',\n                geometry: fc,\n                properties: {}\n            };\n        }\n        fc = featureCollection([fc]);\n    }\n\n    //get centroid\n    var cent = centroid(fc);\n\n    // check to see if centroid is on surface\n    var onSurface = false;\n    var i = 0;\n    while (!onSurface && i < fc.features.length) {\n        var geom = fc.features[i].geometry;\n        var x, y, x1, y1, x2, y2, k;\n        var onLine = false;\n        if (geom.type === 'Point') {\n            if (cent.geometry.coordinates[0] === geom.coordinates[0] &&\n        cent.geometry.coordinates[1] === geom.coordinates[1]) {\n                onSurface = true;\n            }\n        } else if (geom.type === 'MultiPoint') {\n            var onMultiPoint = false;\n            k = 0;\n            while (!onMultiPoint && k < geom.coordinates.length) {\n                if (cent.geometry.coordinates[0] === geom.coordinates[k][0] &&\n          cent.geometry.coordinates[1] === geom.coordinates[k][1]) {\n                    onSurface = true;\n                    onMultiPoint = true;\n                }\n                k++;\n            }\n        } else if (geom.type === 'LineString') {\n            k = 0;\n            while (!onLine && k < geom.coordinates.length - 1) {\n                x = cent.geometry.coordinates[0];\n                y = cent.geometry.coordinates[1];\n                x1 = geom.coordinates[k][0];\n                y1 = geom.coordinates[k][1];\n                x2 = geom.coordinates[k + 1][0];\n                y2 = geom.coordinates[k + 1][1];\n                if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n                    onLine = true;\n                    onSurface = true;\n                }\n                k++;\n            }\n        } else if (geom.type === 'MultiLineString') {\n            var j = 0;\n            while (j < geom.coordinates.length) {\n                onLine = false;\n                k = 0;\n                var line = geom.coordinates[j];\n                while (!onLine && k < line.length - 1) {\n                    x = cent.geometry.coordinates[0];\n                    y = cent.geometry.coordinates[1];\n                    x1 = line[k][0];\n                    y1 = line[k][1];\n                    x2 = line[k + 1][0];\n                    y2 = line[k + 1][1];\n                    if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n                        onLine = true;\n                        onSurface = true;\n                    }\n                    k++;\n                }\n                j++;\n            }\n        } else if (geom.type === 'Polygon' || geom.type === 'MultiPolygon') {\n            var f = {\n                type: 'Feature',\n                geometry: geom,\n                properties: {}\n            };\n            if (inside(cent, f)) {\n                onSurface = true;\n            }\n        }\n        i++;\n    }\n    if (onSurface) {\n        return cent;\n    } else {\n        var vertices = featureCollection([]);\n        for (i = 0; i < fc.features.length; i++) {\n            vertices.features = vertices.features.concat(explode(fc.features[i]).features);\n        }\n        var closestVertex;\n        var closestDistance = Infinity;\n        for (i = 0; i < vertices.features.length; i++) {\n            var dist = distance(cent, vertices.features[i], 'miles');\n            if (dist < closestDistance) {\n                closestDistance = dist;\n                closestVertex = vertices.features[i];\n            }\n        }\n        return closestVertex;\n    }\n}\n\nfunction pointOnSegment(x, y, x1, y1, x2, y2) {\n    var ab = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    var ap = Math.sqrt((x - x1) * (x - x1) + (y - y1) * (y - y1));\n    var pb = Math.sqrt((x2 - x) * (x2 - x) + (y2 - y) * (y2 - y));\n    if (ab === ap + pb) {\n        return true;\n    }\n}\n\nmodule.exports = pointOnSurface;\n"},"lineCount":149}},"error":null,"hash":"e35b8c0a58e576c25da77cff27ce74da","cacheData":{"env":{}}}