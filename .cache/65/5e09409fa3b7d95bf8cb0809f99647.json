{"id":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\package.json","includedInParent":true,"mtime":1557646988018},{"name":"parse5","loc":{"line":2,"column":23},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\browser\\domtohtml.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\parse5\\lib\\index.js"},{"name":"./parse5-adapter-serialization","loc":{"line":3,"column":28},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\browser\\domtohtml.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\browser\\parse5-adapter-serialization.js"},{"name":"../living/node-type","loc":{"line":4,"column":26},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\browser\\domtohtml.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\node-type.js"}],"generated":{"js":"\"use strict\";\nconst parse5 = require(\"parse5\");\nconst treeAdapter = require(\"./parse5-adapter-serialization\");\nconst NODE_TYPE = require(\"../living/node-type\");\n\nexports.domToHtml = iterable => {\n  let ret = \"\";\n  for (const node of iterable) {\n    if (node.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n      ret += parse5.serialize(node, { treeAdapter });\n    } else {\n      // TODO: maybe parse5 can give us a hook where it serializes the node itself too:\n      // https://github.com/inikulin/parse5/issues/230\n      ret += parse5.serialize({ childNodesForSerializing: [node] }, { treeAdapter });\n    }\n  }\n  return ret;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/browser/domtohtml.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"node_modules/jsdom/lib/jsdom/browser/domtohtml.js":"\"use strict\";\nconst parse5 = require(\"parse5\");\nconst treeAdapter = require(\"./parse5-adapter-serialization\");\nconst NODE_TYPE = require(\"../living/node-type\");\n\nexports.domToHtml = iterable => {\n  let ret = \"\";\n  for (const node of iterable) {\n    if (node.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n      ret += parse5.serialize(node, { treeAdapter });\n    } else {\n      // TODO: maybe parse5 can give us a hook where it serializes the node itself too:\n      // https://github.com/inikulin/parse5/issues/230\n      ret += parse5.serialize({ childNodesForSerializing: [node] }, { treeAdapter });\n    }\n  }\n  return ret;\n};\n"},"lineCount":19}},"error":null,"hash":"f17185e698b4fac67adceb0053e14954","cacheData":{"env":{}}}