{"id":"node_modules/geojson-area/index.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557726847338},{"name":"C:\\桌面\\new-project\\node_modules\\geojson-area\\package.json","includedInParent":true,"mtime":1557726825790},{"name":"wgs84","loc":{"line":1,"column":20},"parent":"C:\\桌面\\new-project\\node_modules\\geojson-area\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\wgs84\\index.js"}],"generated":{"js":"var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/geojson-area/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/geojson-area/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}}],"sources":{"node_modules/geojson-area/index.js":"var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}"},"lineCount":89}},"error":null,"hash":"d24b99031399ff446890366070d228ca","cacheData":{"env":{}}}