{"id":"node_modules/turf-explode/index.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557726847338},{"name":"C:\\桌面\\new-project\\node_modules\\turf-explode\\package.json","includedInParent":true,"mtime":1557726825582},{"name":"turf-helpers","loc":{"line":3,"column":20},"parent":"C:\\桌面\\new-project\\node_modules\\turf-explode\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-helpers\\index.js"},{"name":"turf-meta","loc":{"line":2,"column":19},"parent":"C:\\桌面\\new-project\\node_modules\\turf-explode\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\turf-meta\\index.js"}],"generated":{"js":"var featureCollection = require('turf-helpers').featureCollection;\nvar each = require('turf-meta').coordEach;\nvar point = require('turf-helpers').point;\n\n/**\n * Takes a feature or set of features and returns all positions as\n * {@link Point|points}.\n *\n * @name explode\n * @param {(Feature|FeatureCollection)} geojson input features\n * @return {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [177.434692, -17.77517],\n *       [177.402076, -17.779093],\n *       [177.38079, -17.803937],\n *       [177.40242, -17.826164],\n *       [177.438468, -17.824857],\n *       [177.454948, -17.796746],\n *       [177.434692, -17.77517]\n *     ]]\n *   }\n * };\n *\n * var points = turf.explode(poly);\n *\n * //=poly\n *\n * //=points\n */\nmodule.exports = function (geojson) {\n    var points = [];\n    each(geojson, function (coord) {\n        points.push(point(coord));\n    });\n    return featureCollection(points);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/turf-explode/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/turf-explode/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"node_modules/turf-explode/index.js":"var featureCollection = require('turf-helpers').featureCollection;\nvar each = require('turf-meta').coordEach;\nvar point = require('turf-helpers').point;\n\n/**\n * Takes a feature or set of features and returns all positions as\n * {@link Point|points}.\n *\n * @name explode\n * @param {(Feature|FeatureCollection)} geojson input features\n * @return {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [177.434692, -17.77517],\n *       [177.402076, -17.779093],\n *       [177.38079, -17.803937],\n *       [177.40242, -17.826164],\n *       [177.438468, -17.824857],\n *       [177.454948, -17.796746],\n *       [177.434692, -17.77517]\n *     ]]\n *   }\n * };\n *\n * var points = turf.explode(poly);\n *\n * //=poly\n *\n * //=points\n */\nmodule.exports = function (geojson) {\n    var points = [];\n    each(geojson, function (coord) {\n        points.push(point(coord));\n    });\n    return featureCollection(points);\n};\n"},"lineCount":44}},"error":null,"hash":"80f7673573fca21d159ee5ffea388ad1","cacheData":{"env":{}}}