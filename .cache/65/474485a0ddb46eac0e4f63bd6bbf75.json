{"id":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\package.json","includedInParent":true,"mtime":1557646988018},{"name":"os","loc":{"line":2,"column":24},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\file-api\\Blob-impl.js","resolved":"C:\\桌面\\new-project\\node_modules\\_os-browserify@0.3.0@os-browserify\\browser.js"},{"name":"../generated/Blob","loc":{"line":3,"column":21},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\file-api\\Blob-impl.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\generated\\Blob.js"},{"name":"buffer","parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\file-api\\Blob-impl.js","resolved":"C:\\桌面\\new-project\\node_modules\\_buffer@4.9.1@buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nconst { EOL } = require(\"os\");\nconst Blob = require(\"../generated/Blob\");\n\nfunction convertLineEndingsToNative(s) {\n  return s.replace(/\\r\\n|\\r|\\n/g, EOL);\n}\n\nexports.implementation = class BlobImpl {\n  constructor(args) {\n    const parts = args[0];\n    const properties = args[1];\n\n    const buffers = [];\n\n    if (parts !== undefined) {\n      for (const part of parts) {\n        let buffer;\n        if (part instanceof ArrayBuffer) {\n          buffer = Buffer.from(part);\n        } else if (ArrayBuffer.isView(part)) {\n          buffer = Buffer.from(part.buffer, part.byteOffset, part.byteLength);\n        } else if (Blob.isImpl(part)) {\n          buffer = part._buffer;\n        } else {\n          let s = part;\n          if (properties.endings === \"native\") {\n            s = convertLineEndingsToNative(part);\n          }\n          buffer = Buffer.from(s);\n        }\n        buffers.push(buffer);\n      }\n    }\n\n    this._buffer = Buffer.concat(buffers);\n\n    this.type = properties.type;\n    if (/[^\\u0020-\\u007E]/.test(this.type)) {\n      this.type = \"\";\n    } else {\n      this.type = this.type.toLowerCase();\n    }\n  }\n\n  get size() {\n    return this._buffer.length;\n  }\n\n  slice(start, end, contentType) {\n    const { size } = this;\n\n    let relativeStart;\n    let relativeEnd;\n    let relativeContentType;\n\n    if (start === undefined) {\n      relativeStart = 0;\n    } else if (start < 0) {\n      relativeStart = Math.max(size + start, 0);\n    } else {\n      relativeStart = Math.min(start, size);\n    }\n    if (end === undefined) {\n      relativeEnd = size;\n    } else if (end < 0) {\n      relativeEnd = Math.max(size + end, 0);\n    } else {\n      relativeEnd = Math.min(end, size);\n    }\n\n    if (contentType === undefined) {\n      relativeContentType = \"\";\n    } else {\n      // sanitization (lower case and invalid char check) is done in the\n      // constructor\n      relativeContentType = contentType;\n    }\n\n    const span = Math.max(relativeEnd - relativeStart, 0);\n\n    const buffer = this._buffer;\n    const slicedBuffer = buffer.slice(\n      relativeStart,\n      relativeStart + span\n    );\n\n    const blob = Blob.createImpl([[], { type: relativeContentType }], {});\n    blob._buffer = slicedBuffer;\n    return blob;\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}}],"sources":{"node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js":"\"use strict\";\nconst { EOL } = require(\"os\");\nconst Blob = require(\"../generated/Blob\");\n\nfunction convertLineEndingsToNative(s) {\n  return s.replace(/\\r\\n|\\r|\\n/g, EOL);\n}\n\nexports.implementation = class BlobImpl {\n  constructor(args) {\n    const parts = args[0];\n    const properties = args[1];\n\n    const buffers = [];\n\n    if (parts !== undefined) {\n      for (const part of parts) {\n        let buffer;\n        if (part instanceof ArrayBuffer) {\n          buffer = Buffer.from(part);\n        } else if (ArrayBuffer.isView(part)) {\n          buffer = Buffer.from(part.buffer, part.byteOffset, part.byteLength);\n        } else if (Blob.isImpl(part)) {\n          buffer = part._buffer;\n        } else {\n          let s = part;\n          if (properties.endings === \"native\") {\n            s = convertLineEndingsToNative(part);\n          }\n          buffer = Buffer.from(s);\n        }\n        buffers.push(buffer);\n      }\n    }\n\n    this._buffer = Buffer.concat(buffers);\n\n    this.type = properties.type;\n    if (/[^\\u0020-\\u007E]/.test(this.type)) {\n      this.type = \"\";\n    } else {\n      this.type = this.type.toLowerCase();\n    }\n  }\n\n  get size() {\n    return this._buffer.length;\n  }\n\n  slice(start, end, contentType) {\n    const { size } = this;\n\n    let relativeStart;\n    let relativeEnd;\n    let relativeContentType;\n\n    if (start === undefined) {\n      relativeStart = 0;\n    } else if (start < 0) {\n      relativeStart = Math.max(size + start, 0);\n    } else {\n      relativeStart = Math.min(start, size);\n    }\n    if (end === undefined) {\n      relativeEnd = size;\n    } else if (end < 0) {\n      relativeEnd = Math.max(size + end, 0);\n    } else {\n      relativeEnd = Math.min(end, size);\n    }\n\n    if (contentType === undefined) {\n      relativeContentType = \"\";\n    } else {\n      // sanitization (lower case and invalid char check) is done in the\n      // constructor\n      relativeContentType = contentType;\n    }\n\n    const span = Math.max(relativeEnd - relativeStart, 0);\n\n    const buffer = this._buffer;\n    const slicedBuffer = buffer.slice(\n      relativeStart,\n      relativeStart + span\n    );\n\n    const blob = Blob.createImpl([[], { type: relativeContentType }], {});\n    blob._buffer = slicedBuffer;\n    return blob;\n  }\n};\n"},"lineCount":94}},"error":null,"hash":"5810c38aa5894d4d23009c81011b40e7","cacheData":{"env":{}}}