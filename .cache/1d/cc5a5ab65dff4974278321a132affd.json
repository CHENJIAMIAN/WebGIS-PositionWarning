{"id":"node_modules/turf-isolines/conrec.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557726847338},{"name":"C:\\桌面\\new-project\\node_modules\\turf-isolines\\package.json","includedInParent":true,"mtime":1557726826216}],"generated":{"js":"/* eslint-disable */\n\n/*\n * Copyright (c) 2010, Jason Davies.\n *\n * All rights reserved.  This code is based on Bradley White's Java version,\n * which is in turn based on Nicholas Yue's C++ version, which in turn is based\n * on Paul D. Bourke's original Fortran version.  See below for the respective\n * copyright notices.\n *\n * See http://local.wasp.uwa.edu.au/~pbourke/papers/conrec/ for the original\n * paper by Paul D. Bourke.\n *\n * The vector conversion code is based on http://apptree.net/conrec.htm by\n * Graham Cox.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the <organization> nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Copyright (c) 1996-1997 Nicholas Yue\n *\n * This software is copyrighted by Nicholas Yue. This code is based on Paul D.\n * Bourke's CONREC.F routine.\n *\n * The authors hereby grant permission to use, copy, and distribute this\n * software and its documentation for any purpose, provided that existing\n * copyright notices are retained in all copies and that this notice is\n * included verbatim in any distributions. Additionally, the authors grant\n * permission to modify this software and its documentation for any purpose,\n * provided that such modifications are not distributed without the explicit\n * consent of the authors and that existing copyright notices are retained in\n * all copies. Some of the algorithms implemented by this software are\n * patented, observe all applicable patent law.\n *\n * IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR\n * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT\n * OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES THEREOF,\n * EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE IS\n * PROVIDED ON AN \"AS IS\" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO\n * OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR\n * MODIFICATIONS.\n */\n\n\n  module.exports = Conrec;\n\n  var EPSILON = 1e-10;\n\n  function pointsEqual(a, b) {\n      var x = a.x - b.x, y = a.y - b.y;\n      return x * x + y * y < EPSILON;\n  }\n\n  function reverseList(list) {\n      var pp = list.head;\n\n      while (pp) {\n      // swap prev/next pointers\n          var temp = pp.next;\n          pp.next = pp.prev;\n          pp.prev = temp;\n\n      // continue through the list\n          pp = temp;\n      }\n\n    // swap head/tail pointers\n      var temp = list.head;\n      list.head = list.tail;\n      list.tail = temp;\n  }\n\n  function ContourBuilder(level) {\n      this.level = level;\n      this.s = null;\n      this.count = 0;\n  }\n  ContourBuilder.prototype.remove_seq = function (list) {\n    // if list is the first item, static ptr s is updated\n      if (list.prev) {\n          list.prev.next = list.next;\n      } else {\n          this.s = list.next;\n      }\n\n      if (list.next) {\n          list.next.prev = list.prev;\n      }\n      --this.count;\n  };\n  ContourBuilder.prototype.addSegment = function (a, b) {\n      var ss = this.s;\n      var ma = null;\n      var mb = null;\n      var prependA = false;\n      var prependB = false;\n\n      while (ss) {\n          if (ma == null) {\n        // no match for a yet\n              if (pointsEqual(a, ss.head.p)) {\n                  ma = ss;\n                  prependA = true;\n              } else if (pointsEqual(a, ss.tail.p)) {\n                  ma = ss;\n              }\n          }\n          if (mb == null) {\n        // no match for b yet\n              if (pointsEqual(b, ss.head.p)) {\n                  mb = ss;\n                  prependB = true;\n              } else if (pointsEqual(b, ss.tail.p)) {\n                  mb = ss;\n              }\n          }\n      // if we matched both no need to continue searching\n          if (mb != null && ma != null) {\n              break;\n          } else {\n              ss = ss.next;\n          }\n      }\n\n    // c is the case selector based on which of ma and/or mb are set\n      var c = ((ma != null) ? 1 : 0) | ((mb != null) ? 2 : 0);\n\n      switch (c) {\n      case 0:   // both unmatched, add as new sequence\n          var aa = {p: a, prev: null};\n          var bb = {p: b, next: null};\n          aa.next = bb;\n          bb.prev = aa;\n\n        // create sequence element and push onto head of main list. The order\n        // of items in this list is unimportant\n          ma = {head: aa, tail: bb, next: this.s, prev: null, closed: false};\n          if (this.s) {\n              this.s.prev = ma;\n          }\n          this.s = ma;\n\n          ++this.count;    // not essential - tracks number of unmerged sequences\n          break;\n\n      case 1:   // a matched, b did not - thus b extends sequence ma\n          var pp = {p: b};\n\n          if (prependA) {\n              pp.next = ma.head;\n              pp.prev = null;\n              ma.head.prev = pp;\n              ma.head = pp;\n          } else {\n              pp.next = null;\n              pp.prev = ma.tail;\n              ma.tail.next = pp;\n              ma.tail = pp;\n          }\n          break;\n\n      case 2:   // b matched, a did not - thus a extends sequence mb\n          var pp = {p: a};\n\n          if (prependB) {\n              pp.next = mb.head;\n              pp.prev = null;\n              mb.head.prev = pp;\n              mb.head = pp;\n          } else {\n              pp.next = null;\n              pp.prev = mb.tail;\n              mb.tail.next = pp;\n              mb.tail = pp;\n          }\n          break;\n\n      case 3:   // both matched, can merge sequences\n        // if the sequences are the same, do nothing, as we are simply closing this path (could set a flag)\n\n          if (ma === mb) {\n              var pp = {p: ma.tail.p, next: ma.head, prev: null};\n              ma.head.prev = pp;\n              ma.head = pp;\n              ma.closed = true;\n              break;\n          }\n\n        // there are 4 ways the sequence pair can be joined. The current setting of prependA and\n        // prependB will tell us which type of join is needed. For head/head and tail/tail joins\n        // one sequence needs to be reversed\n          switch ((prependA ? 1 : 0) | (prependB ? 2 : 0)) {\n          case 0:   // tail-tail\n            // reverse ma and append to mb\n              reverseList(ma);\n            // fall through to head/tail case\n          case 1:   // head-tail\n            // ma is appended to mb and ma discarded\n              mb.tail.next = ma.head;\n              ma.head.prev = mb.tail;\n              mb.tail = ma.tail;\n\n            //discard ma sequence record\n              this.remove_seq(ma);\n              break;\n\n          case 3:   // head-head\n            // reverse ma and append mb to it\n              reverseList(ma);\n            // fall through to tail/head case\n          case 2:   // tail-head\n            // mb is appended to ma and mb is discarded\n              ma.tail.next = mb.head;\n              mb.head.prev = ma.tail;\n              ma.tail = mb.tail;\n\n            //discard mb sequence record\n              this.remove_seq(mb);\n              break;\n          }\n      }\n  };\n\n  /*\n   * Implements CONREC.\n   *\n   * @private\n   * @param {function} drawContour function for drawing contour.  Defaults to a\n   *                               custom \"contour builder\", which populates the\n   *                               contours property.\n   */\n  function Conrec(drawContour) {\n      if (!drawContour) {\n          var c = this;\n          c.contours = {};\n      /**\n       * drawContour - interface for implementing the user supplied method to\n       * render the countours.\n       *\n       * Draws a line between the start and end coordinates.\n       *\n       * @private\n       * @param startX    - start coordinate for X\n       * @param startY    - start coordinate for Y\n       * @param endX      - end coordinate for X\n       * @param endY      - end coordinate for Y\n       * @param contourLevel - Contour level for line.\n       */\n          this.drawContour = function (startX, startY, endX, endY, contourLevel, k) {\n              var cb = c.contours[k];\n              if (!cb) {\n                  cb = c.contours[k] = new ContourBuilder(contourLevel);\n              }\n              cb.addSegment({x: startX, y: startY}, {x: endX, y: endY});\n          };\n          this.contourList = function () {\n              var l = [];\n              var a = c.contours;\n              for (var k in a) {\n                  var s = a[k].s;\n                  var level = a[k].level;\n                  while (s) {\n                      var h = s.head;\n                      var l2 = [];\n                      l2.level = level;\n                      l2.k = k;\n                      while (h && h.p) {\n                          l2.push(h.p);\n                          h = h.next;\n                      }\n                      l.push(l2);\n                      s = s.next;\n                  }\n              }\n              l.sort(function (a, b) { return a.k - b.k; });\n              return l;\n          };\n      } else {\n          this.drawContour = drawContour;\n      }\n      this.h  = new Array(5);\n      this.sh = new Array(5);\n      this.xh = new Array(5);\n      this.yh = new Array(5);\n  }\n\n  /*\n   * contour is a contouring subroutine for rectangularily spaced data\n   *\n   * It emits calls to a line drawing subroutine supplied by the user which\n   * draws a contour map corresponding to real*4data on a randomly spaced\n   * rectangular grid. The coordinates emitted are in the same units given in\n   * the x() and y() arrays.\n   *\n   * Any number of contour levels may be specified but they must be in order of\n   * increasing value.\n   *\n   *\n   * @param {number[][]} d - matrix of data to contour\n   * @param {number} ilb,iub,jlb,jub - index bounds of data matrix\n   *\n   *             The following two, one dimensional arrays (x and y) contain\n   *             the horizontal and vertical coordinates of each sample points.\n   * @param {number[]} x  - data matrix column coordinates\n   * @param {number[]} y  - data matrix row coordinates\n   * @param {number} nc   - number of contour levels\n   * @param {number[]} z  - contour levels in increasing order.\n   */\n  Conrec.prototype.contour = function (d, ilb, iub, jlb, jub, x, y, nc, z) {\n      var h = this.h, sh = this.sh, xh = this.xh, yh = this.yh;\n      var drawContour = this.drawContour;\n      this.contours = {};\n\n      var xsect = function (p1, p2) {\n          return (h[p2] * xh[p1] - h[p1] * xh[p2]) / (h[p2] - h[p1]);\n      };\n\n      var ysect = function (p1, p2) {\n          return (h[p2] * yh[p1] - h[p1] * yh[p2]) / (h[p2] - h[p1]);\n      };\n      var m1;\n      var m2;\n      var m3;\n      var case_value;\n      var dmin;\n      var dmax;\n      var x1 = 0.0;\n      var x2 = 0.0;\n      var y1 = 0.0;\n      var y2 = 0.0;\n\n    // The indexing of im and jm should be noted as it has to start from zero\n    // unlike the fortran counter part\n      var im = [0, 1, 1, 0];\n      var jm = [0, 0, 1, 1];\n\n    // Note that castab is arranged differently from the FORTRAN code because\n    // Fortran and C/C++ arrays are transposed of each other, in this case\n    // it is more tricky as castab is in 3 dimensions\n      var castab = [\n          [\n        [0, 0, 8], [0, 2, 5], [7, 6, 9]\n          ],\n          [\n        [0, 3, 4], [1, 3, 1], [4, 3, 0]\n          ],\n          [\n        [9, 6, 7], [5, 2, 0], [8, 0, 0]\n          ]\n      ];\n\n      for (var j = (jub - 1); j >= jlb; j--) {\n          for (var i = ilb; i <= iub - 1; i++) {\n              var temp1, temp2;\n              temp1 = Math.min(d[i][j], d[i][j + 1]);\n              temp2 = Math.min(d[i + 1][j], d[i + 1][j + 1]);\n              dmin  = Math.min(temp1, temp2);\n              temp1 = Math.max(d[i][j], d[i][j + 1]);\n              temp2 = Math.max(d[i + 1][j], d[i + 1][j + 1]);\n              dmax  = Math.max(temp1, temp2);\n\n              if (dmax >= z[0] && dmin <= z[nc - 1]) {\n                  for (var k = 0; k < nc; k++) {\n                      if (z[k] >= dmin && z[k] <= dmax) {\n                          for (var m = 4; m >= 0; m--) {\n                            if (m > 0) {\n                  // The indexing of im and jm should be noted as it has to\n                  // start from zero\n                              h[m] = d[i + im[m - 1]][j + jm[m - 1]] - z[k];\n                              xh[m] = x[i + im[m - 1]];\n                              yh[m] = y[j + jm[m - 1]];\n                          } else {\n                              h[0] = 0.25 * (h[1] + h[2] + h[3] + h[4]);\n                              xh[0] = 0.5 * (x[i] + x[i + 1]);\n                              yh[0] = 0.5 * (y[j] + y[j + 1]);\n                          }\n                            if (h[m] > EPSILON) {\n                              sh[m] = 1;\n                          } else if (h[m] < -EPSILON) {\n                            sh[m] = -1;\n                        } else\n                  sh[m] = 0;\n                        }\n              //\n              // Note: at this stage the relative heights of the corners and the\n              // centre are in the h array, and the corresponding coordinates are\n              // in the xh and yh arrays. The centre of the box is indexed by 0\n              // and the 4 corners by 1 to 4 as shown below.\n              // Each triangle is then indexed by the parameter m, and the 3\n              // vertices of each triangle are indexed by parameters m1,m2,and\n              // m3.\n              // It is assumed that the centre of the box is always vertex 2\n              // though this isimportant only when all 3 vertices lie exactly on\n              // the same contour level, in which case only the side of the box\n              // is drawn.\n              //\n              //\n              //      vertex 4 +-------------------+ vertex 3\n              //               | \\               / |\n              //               |   \\    m-3    /   |\n              //               |     \\       /     |\n              //               |       \\   /       |\n              //               |  m=2    X   m=2   |       the centre is vertex 0\n              //               |       /   \\       |\n              //               |     /       \\     |\n              //               |   /    m=1    \\   |\n              //               | /               \\ |\n              //      vertex 1 +-------------------+ vertex 2\n              //\n              //\n              //\n              //               Scan each triangle in the box\n              //\n                          for (m = 1; m <= 4; m++) {\n                            m1 = m;\n                            m2 = 0;\n                            if (m != 4) {\n                              m3 = m + 1;\n                          } else {\n                              m3 = 1;\n                          }\n                            case_value = castab[sh[m1] + 1][sh[m2] + 1][sh[m3] + 1];\n                            if (case_value != 0) {\n                              switch (case_value) {\n                            case 1: // Line between vertices 1 and 2\n                                x1 = xh[m1];\n                                y1 = yh[m1];\n                                x2 = xh[m2];\n                                y2 = yh[m2];\n                                break;\n                            case 2: // Line between vertices 2 and 3\n                                x1 = xh[m2];\n                                y1 = yh[m2];\n                                x2 = xh[m3];\n                                y2 = yh[m3];\n                                break;\n                            case 3: // Line between vertices 3 and 1\n                                x1 = xh[m3];\n                                y1 = yh[m3];\n                                x2 = xh[m1];\n                                y2 = yh[m1];\n                                break;\n                            case 4: // Line between vertex 1 and side 2-3\n                                x1 = xh[m1];\n                                y1 = yh[m1];\n                                x2 = xsect(m2, m3);\n                                y2 = ysect(m2, m3);\n                                break;\n                            case 5: // Line between vertex 2 and side 3-1\n                                x1 = xh[m2];\n                                y1 = yh[m2];\n                                x2 = xsect(m3, m1);\n                                y2 = ysect(m3, m1);\n                                break;\n                            case 6: //  Line between vertex 3 and side 1-2\n                                x1 = xh[m3];\n                                y1 = yh[m3];\n                                x2 = xsect(m1, m2);\n                                y2 = ysect(m1, m2);\n                                break;\n                            case 7: // Line between sides 1-2 and 2-3\n                                x1 = xsect(m1, m2);\n                                y1 = ysect(m1, m2);\n                                x2 = xsect(m2, m3);\n                                y2 = ysect(m2, m3);\n                                break;\n                            case 8: // Line between sides 2-3 and 3-1\n                                x1 = xsect(m2, m3);\n                                y1 = ysect(m2, m3);\n                                x2 = xsect(m3, m1);\n                                y2 = ysect(m3, m1);\n                                break;\n                            case 9: // Line between sides 3-1 and 1-2\n                                x1 = xsect(m3, m1);\n                                y1 = ysect(m3, m1);\n                                x2 = xsect(m1, m2);\n                                y2 = ysect(m1, m2);\n                                break;\n                            default:\n                                break;\n                            }\n                  // Put your processing code here and comment out the printf\n                  //printf(\"%f %f %f %f %f\\n\",x1,y1,x2,y2,z[k]);\n                              drawContour(x1, y1, x2, y2, z[k], k);\n                          }\n                        }\n                      }\n                  }\n              }\n          }\n      }\n  };\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/turf-isolines/conrec.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/turf-isolines/conrec.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}}],"sources":{"node_modules/turf-isolines/conrec.js":"/* eslint-disable */\n\n/*\n * Copyright (c) 2010, Jason Davies.\n *\n * All rights reserved.  This code is based on Bradley White's Java version,\n * which is in turn based on Nicholas Yue's C++ version, which in turn is based\n * on Paul D. Bourke's original Fortran version.  See below for the respective\n * copyright notices.\n *\n * See http://local.wasp.uwa.edu.au/~pbourke/papers/conrec/ for the original\n * paper by Paul D. Bourke.\n *\n * The vector conversion code is based on http://apptree.net/conrec.htm by\n * Graham Cox.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the <organization> nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Copyright (c) 1996-1997 Nicholas Yue\n *\n * This software is copyrighted by Nicholas Yue. This code is based on Paul D.\n * Bourke's CONREC.F routine.\n *\n * The authors hereby grant permission to use, copy, and distribute this\n * software and its documentation for any purpose, provided that existing\n * copyright notices are retained in all copies and that this notice is\n * included verbatim in any distributions. Additionally, the authors grant\n * permission to modify this software and its documentation for any purpose,\n * provided that such modifications are not distributed without the explicit\n * consent of the authors and that existing copyright notices are retained in\n * all copies. Some of the algorithms implemented by this software are\n * patented, observe all applicable patent law.\n *\n * IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR\n * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT\n * OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES THEREOF,\n * EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE IS\n * PROVIDED ON AN \"AS IS\" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO\n * OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR\n * MODIFICATIONS.\n */\n\n\n  module.exports = Conrec;\n\n  var EPSILON = 1e-10;\n\n  function pointsEqual(a, b) {\n      var x = a.x - b.x, y = a.y - b.y;\n      return x * x + y * y < EPSILON;\n  }\n\n  function reverseList(list) {\n      var pp = list.head;\n\n      while (pp) {\n      // swap prev/next pointers\n          var temp = pp.next;\n          pp.next = pp.prev;\n          pp.prev = temp;\n\n      // continue through the list\n          pp = temp;\n      }\n\n    // swap head/tail pointers\n      var temp = list.head;\n      list.head = list.tail;\n      list.tail = temp;\n  }\n\n  function ContourBuilder(level) {\n      this.level = level;\n      this.s = null;\n      this.count = 0;\n  }\n  ContourBuilder.prototype.remove_seq = function (list) {\n    // if list is the first item, static ptr s is updated\n      if (list.prev) {\n          list.prev.next = list.next;\n      } else {\n          this.s = list.next;\n      }\n\n      if (list.next) {\n          list.next.prev = list.prev;\n      }\n      --this.count;\n  };\n  ContourBuilder.prototype.addSegment = function (a, b) {\n      var ss = this.s;\n      var ma = null;\n      var mb = null;\n      var prependA = false;\n      var prependB = false;\n\n      while (ss) {\n          if (ma == null) {\n        // no match for a yet\n              if (pointsEqual(a, ss.head.p)) {\n                  ma = ss;\n                  prependA = true;\n              } else if (pointsEqual(a, ss.tail.p)) {\n                  ma = ss;\n              }\n          }\n          if (mb == null) {\n        // no match for b yet\n              if (pointsEqual(b, ss.head.p)) {\n                  mb = ss;\n                  prependB = true;\n              } else if (pointsEqual(b, ss.tail.p)) {\n                  mb = ss;\n              }\n          }\n      // if we matched both no need to continue searching\n          if (mb != null && ma != null) {\n              break;\n          } else {\n              ss = ss.next;\n          }\n      }\n\n    // c is the case selector based on which of ma and/or mb are set\n      var c = ((ma != null) ? 1 : 0) | ((mb != null) ? 2 : 0);\n\n      switch (c) {\n      case 0:   // both unmatched, add as new sequence\n          var aa = {p: a, prev: null};\n          var bb = {p: b, next: null};\n          aa.next = bb;\n          bb.prev = aa;\n\n        // create sequence element and push onto head of main list. The order\n        // of items in this list is unimportant\n          ma = {head: aa, tail: bb, next: this.s, prev: null, closed: false};\n          if (this.s) {\n              this.s.prev = ma;\n          }\n          this.s = ma;\n\n          ++this.count;    // not essential - tracks number of unmerged sequences\n          break;\n\n      case 1:   // a matched, b did not - thus b extends sequence ma\n          var pp = {p: b};\n\n          if (prependA) {\n              pp.next = ma.head;\n              pp.prev = null;\n              ma.head.prev = pp;\n              ma.head = pp;\n          } else {\n              pp.next = null;\n              pp.prev = ma.tail;\n              ma.tail.next = pp;\n              ma.tail = pp;\n          }\n          break;\n\n      case 2:   // b matched, a did not - thus a extends sequence mb\n          var pp = {p: a};\n\n          if (prependB) {\n              pp.next = mb.head;\n              pp.prev = null;\n              mb.head.prev = pp;\n              mb.head = pp;\n          } else {\n              pp.next = null;\n              pp.prev = mb.tail;\n              mb.tail.next = pp;\n              mb.tail = pp;\n          }\n          break;\n\n      case 3:   // both matched, can merge sequences\n        // if the sequences are the same, do nothing, as we are simply closing this path (could set a flag)\n\n          if (ma === mb) {\n              var pp = {p: ma.tail.p, next: ma.head, prev: null};\n              ma.head.prev = pp;\n              ma.head = pp;\n              ma.closed = true;\n              break;\n          }\n\n        // there are 4 ways the sequence pair can be joined. The current setting of prependA and\n        // prependB will tell us which type of join is needed. For head/head and tail/tail joins\n        // one sequence needs to be reversed\n          switch ((prependA ? 1 : 0) | (prependB ? 2 : 0)) {\n          case 0:   // tail-tail\n            // reverse ma and append to mb\n              reverseList(ma);\n            // fall through to head/tail case\n          case 1:   // head-tail\n            // ma is appended to mb and ma discarded\n              mb.tail.next = ma.head;\n              ma.head.prev = mb.tail;\n              mb.tail = ma.tail;\n\n            //discard ma sequence record\n              this.remove_seq(ma);\n              break;\n\n          case 3:   // head-head\n            // reverse ma and append mb to it\n              reverseList(ma);\n            // fall through to tail/head case\n          case 2:   // tail-head\n            // mb is appended to ma and mb is discarded\n              ma.tail.next = mb.head;\n              mb.head.prev = ma.tail;\n              ma.tail = mb.tail;\n\n            //discard mb sequence record\n              this.remove_seq(mb);\n              break;\n          }\n      }\n  };\n\n  /*\n   * Implements CONREC.\n   *\n   * @private\n   * @param {function} drawContour function for drawing contour.  Defaults to a\n   *                               custom \"contour builder\", which populates the\n   *                               contours property.\n   */\n  function Conrec(drawContour) {\n      if (!drawContour) {\n          var c = this;\n          c.contours = {};\n      /**\n       * drawContour - interface for implementing the user supplied method to\n       * render the countours.\n       *\n       * Draws a line between the start and end coordinates.\n       *\n       * @private\n       * @param startX    - start coordinate for X\n       * @param startY    - start coordinate for Y\n       * @param endX      - end coordinate for X\n       * @param endY      - end coordinate for Y\n       * @param contourLevel - Contour level for line.\n       */\n          this.drawContour = function (startX, startY, endX, endY, contourLevel, k) {\n              var cb = c.contours[k];\n              if (!cb) {\n                  cb = c.contours[k] = new ContourBuilder(contourLevel);\n              }\n              cb.addSegment({x: startX, y: startY}, {x: endX, y: endY});\n          };\n          this.contourList = function () {\n              var l = [];\n              var a = c.contours;\n              for (var k in a) {\n                  var s = a[k].s;\n                  var level = a[k].level;\n                  while (s) {\n                      var h = s.head;\n                      var l2 = [];\n                      l2.level = level;\n                      l2.k = k;\n                      while (h && h.p) {\n                          l2.push(h.p);\n                          h = h.next;\n                      }\n                      l.push(l2);\n                      s = s.next;\n                  }\n              }\n              l.sort(function (a, b) { return a.k - b.k; });\n              return l;\n          };\n      } else {\n          this.drawContour = drawContour;\n      }\n      this.h  = new Array(5);\n      this.sh = new Array(5);\n      this.xh = new Array(5);\n      this.yh = new Array(5);\n  }\n\n  /*\n   * contour is a contouring subroutine for rectangularily spaced data\n   *\n   * It emits calls to a line drawing subroutine supplied by the user which\n   * draws a contour map corresponding to real*4data on a randomly spaced\n   * rectangular grid. The coordinates emitted are in the same units given in\n   * the x() and y() arrays.\n   *\n   * Any number of contour levels may be specified but they must be in order of\n   * increasing value.\n   *\n   *\n   * @param {number[][]} d - matrix of data to contour\n   * @param {number} ilb,iub,jlb,jub - index bounds of data matrix\n   *\n   *             The following two, one dimensional arrays (x and y) contain\n   *             the horizontal and vertical coordinates of each sample points.\n   * @param {number[]} x  - data matrix column coordinates\n   * @param {number[]} y  - data matrix row coordinates\n   * @param {number} nc   - number of contour levels\n   * @param {number[]} z  - contour levels in increasing order.\n   */\n  Conrec.prototype.contour = function (d, ilb, iub, jlb, jub, x, y, nc, z) {\n      var h = this.h, sh = this.sh, xh = this.xh, yh = this.yh;\n      var drawContour = this.drawContour;\n      this.contours = {};\n\n      var xsect = function (p1, p2) {\n          return (h[p2] * xh[p1] - h[p1] * xh[p2]) / (h[p2] - h[p1]);\n      };\n\n      var ysect = function (p1, p2) {\n          return (h[p2] * yh[p1] - h[p1] * yh[p2]) / (h[p2] - h[p1]);\n      };\n      var m1;\n      var m2;\n      var m3;\n      var case_value;\n      var dmin;\n      var dmax;\n      var x1 = 0.0;\n      var x2 = 0.0;\n      var y1 = 0.0;\n      var y2 = 0.0;\n\n    // The indexing of im and jm should be noted as it has to start from zero\n    // unlike the fortran counter part\n      var im = [0, 1, 1, 0];\n      var jm = [0, 0, 1, 1];\n\n    // Note that castab is arranged differently from the FORTRAN code because\n    // Fortran and C/C++ arrays are transposed of each other, in this case\n    // it is more tricky as castab is in 3 dimensions\n      var castab = [\n          [\n        [0, 0, 8], [0, 2, 5], [7, 6, 9]\n          ],\n          [\n        [0, 3, 4], [1, 3, 1], [4, 3, 0]\n          ],\n          [\n        [9, 6, 7], [5, 2, 0], [8, 0, 0]\n          ]\n      ];\n\n      for (var j = (jub - 1); j >= jlb; j--) {\n          for (var i = ilb; i <= iub - 1; i++) {\n              var temp1, temp2;\n              temp1 = Math.min(d[i][j], d[i][j + 1]);\n              temp2 = Math.min(d[i + 1][j], d[i + 1][j + 1]);\n              dmin  = Math.min(temp1, temp2);\n              temp1 = Math.max(d[i][j], d[i][j + 1]);\n              temp2 = Math.max(d[i + 1][j], d[i + 1][j + 1]);\n              dmax  = Math.max(temp1, temp2);\n\n              if (dmax >= z[0] && dmin <= z[nc - 1]) {\n                  for (var k = 0; k < nc; k++) {\n                      if (z[k] >= dmin && z[k] <= dmax) {\n                          for (var m = 4; m >= 0; m--) {\n                            if (m > 0) {\n                  // The indexing of im and jm should be noted as it has to\n                  // start from zero\n                              h[m] = d[i + im[m - 1]][j + jm[m - 1]] - z[k];\n                              xh[m] = x[i + im[m - 1]];\n                              yh[m] = y[j + jm[m - 1]];\n                          } else {\n                              h[0] = 0.25 * (h[1] + h[2] + h[3] + h[4]);\n                              xh[0] = 0.5 * (x[i] + x[i + 1]);\n                              yh[0] = 0.5 * (y[j] + y[j + 1]);\n                          }\n                            if (h[m] > EPSILON) {\n                              sh[m] = 1;\n                          } else if (h[m] < -EPSILON) {\n                            sh[m] = -1;\n                        } else\n                  sh[m] = 0;\n                        }\n              //\n              // Note: at this stage the relative heights of the corners and the\n              // centre are in the h array, and the corresponding coordinates are\n              // in the xh and yh arrays. The centre of the box is indexed by 0\n              // and the 4 corners by 1 to 4 as shown below.\n              // Each triangle is then indexed by the parameter m, and the 3\n              // vertices of each triangle are indexed by parameters m1,m2,and\n              // m3.\n              // It is assumed that the centre of the box is always vertex 2\n              // though this isimportant only when all 3 vertices lie exactly on\n              // the same contour level, in which case only the side of the box\n              // is drawn.\n              //\n              //\n              //      vertex 4 +-------------------+ vertex 3\n              //               | \\               / |\n              //               |   \\    m-3    /   |\n              //               |     \\       /     |\n              //               |       \\   /       |\n              //               |  m=2    X   m=2   |       the centre is vertex 0\n              //               |       /   \\       |\n              //               |     /       \\     |\n              //               |   /    m=1    \\   |\n              //               | /               \\ |\n              //      vertex 1 +-------------------+ vertex 2\n              //\n              //\n              //\n              //               Scan each triangle in the box\n              //\n                          for (m = 1; m <= 4; m++) {\n                            m1 = m;\n                            m2 = 0;\n                            if (m != 4) {\n                              m3 = m + 1;\n                          } else {\n                              m3 = 1;\n                          }\n                            case_value = castab[sh[m1] + 1][sh[m2] + 1][sh[m3] + 1];\n                            if (case_value != 0) {\n                              switch (case_value) {\n                            case 1: // Line between vertices 1 and 2\n                                x1 = xh[m1];\n                                y1 = yh[m1];\n                                x2 = xh[m2];\n                                y2 = yh[m2];\n                                break;\n                            case 2: // Line between vertices 2 and 3\n                                x1 = xh[m2];\n                                y1 = yh[m2];\n                                x2 = xh[m3];\n                                y2 = yh[m3];\n                                break;\n                            case 3: // Line between vertices 3 and 1\n                                x1 = xh[m3];\n                                y1 = yh[m3];\n                                x2 = xh[m1];\n                                y2 = yh[m1];\n                                break;\n                            case 4: // Line between vertex 1 and side 2-3\n                                x1 = xh[m1];\n                                y1 = yh[m1];\n                                x2 = xsect(m2, m3);\n                                y2 = ysect(m2, m3);\n                                break;\n                            case 5: // Line between vertex 2 and side 3-1\n                                x1 = xh[m2];\n                                y1 = yh[m2];\n                                x2 = xsect(m3, m1);\n                                y2 = ysect(m3, m1);\n                                break;\n                            case 6: //  Line between vertex 3 and side 1-2\n                                x1 = xh[m3];\n                                y1 = yh[m3];\n                                x2 = xsect(m1, m2);\n                                y2 = ysect(m1, m2);\n                                break;\n                            case 7: // Line between sides 1-2 and 2-3\n                                x1 = xsect(m1, m2);\n                                y1 = ysect(m1, m2);\n                                x2 = xsect(m2, m3);\n                                y2 = ysect(m2, m3);\n                                break;\n                            case 8: // Line between sides 2-3 and 3-1\n                                x1 = xsect(m2, m3);\n                                y1 = ysect(m2, m3);\n                                x2 = xsect(m3, m1);\n                                y2 = ysect(m3, m1);\n                                break;\n                            case 9: // Line between sides 3-1 and 1-2\n                                x1 = xsect(m3, m1);\n                                y1 = ysect(m3, m1);\n                                x2 = xsect(m1, m2);\n                                y2 = ysect(m1, m2);\n                                break;\n                            default:\n                                break;\n                            }\n                  // Put your processing code here and comment out the printf\n                  //printf(\"%f %f %f %f %f\\n\",x1,y1,x2,y2,z[k]);\n                              drawContour(x1, y1, x2, y2, z[k], k);\n                          }\n                        }\n                      }\n                  }\n              }\n          }\n      }\n  };\n"},"lineCount":518}},"error":null,"hash":"9d3219bec31fa35e3899d8758af8b6f1","cacheData":{"env":{}}}