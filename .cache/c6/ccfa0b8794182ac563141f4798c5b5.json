{"id":"node_modules/robust-scale/robust-scale.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557726847338},{"name":"C:\\桌面\\new-project\\node_modules\\robust-scale\\package.json","includedInParent":true,"mtime":1557726825585},{"name":"two-product","loc":{"line":3,"column":25},"parent":"C:\\桌面\\new-project\\node_modules\\robust-scale\\robust-scale.js","resolved":"C:\\桌面\\new-project\\node_modules\\two-product\\two-product.js"},{"name":"two-sum","loc":{"line":4,"column":21},"parent":"C:\\桌面\\new-project\\node_modules\\robust-scale\\robust-scale.js","resolved":"C:\\桌面\\new-project\\node_modules\\two-sum\\two-sum.js"}],"generated":{"js":"\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar twoSum = require(\"two-sum\")\n\nmodule.exports = scaleLinearExpansion\n\nfunction scaleLinearExpansion(e, scale) {\n  var n = e.length\n  if(n === 1) {\n    var ts = twoProduct(e[0], scale)\n    if(ts[0]) {\n      return ts\n    }\n    return [ ts[1] ]\n  }\n  var g = new Array(2 * n)\n  var q = [0.1, 0.1]\n  var t = [0.1, 0.1]\n  var count = 0\n  twoProduct(e[0], scale, q)\n  if(q[0]) {\n    g[count++] = q[0]\n  }\n  for(var i=1; i<n; ++i) {\n    twoProduct(e[i], scale, t)\n    var pq = q[1]\n    twoSum(pq, t[0], q)\n    if(q[0]) {\n      g[count++] = q[0]\n    }\n    var a = t[1]\n    var b = q[1]\n    var x = a + b\n    var bv = x - a\n    var y = b - bv\n    q[1] = x\n    if(y) {\n      g[count++] = y\n    }\n  }\n  if(q[1]) {\n    g[count++] = q[1]\n  }\n  if(count === 0) {\n    g[count++] = 0.0\n  }\n  g.length = count\n  return g\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/robust-scale/robust-scale.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"node_modules/robust-scale/robust-scale.js":"\"use strict\"\n\nvar twoProduct = require(\"two-product\")\nvar twoSum = require(\"two-sum\")\n\nmodule.exports = scaleLinearExpansion\n\nfunction scaleLinearExpansion(e, scale) {\n  var n = e.length\n  if(n === 1) {\n    var ts = twoProduct(e[0], scale)\n    if(ts[0]) {\n      return ts\n    }\n    return [ ts[1] ]\n  }\n  var g = new Array(2 * n)\n  var q = [0.1, 0.1]\n  var t = [0.1, 0.1]\n  var count = 0\n  twoProduct(e[0], scale, q)\n  if(q[0]) {\n    g[count++] = q[0]\n  }\n  for(var i=1; i<n; ++i) {\n    twoProduct(e[i], scale, t)\n    var pq = q[1]\n    twoSum(pq, t[0], q)\n    if(q[0]) {\n      g[count++] = q[0]\n    }\n    var a = t[1]\n    var b = q[1]\n    var x = a + b\n    var bv = x - a\n    var y = b - bv\n    q[1] = x\n    if(y) {\n      g[count++] = y\n    }\n  }\n  if(q[1]) {\n    g[count++] = q[1]\n  }\n  if(count === 0) {\n    g[count++] = 0.0\n  }\n  g.length = count\n  return g\n}"},"lineCount":50}},"error":null,"hash":"0004c25e57c588498ca110566d5a564a","cacheData":{"env":{}}}