{"id":"node_modules/jsdom/lib/jsdom/living/attributes.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\package.json","includedInParent":true,"mtime":1557646988018},{"name":"domexception","loc":{"line":2,"column":29},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\attributes.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\domexception\\lib\\public-api.js"},{"name":"./generated/Attr","loc":{"line":3,"column":30},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\attributes.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\generated\\Attr.js"},{"name":"./helpers/strings","loc":{"line":4,"column":35},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\attributes.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\helpers\\strings.js"},{"name":"./helpers/namespaces","loc":{"line":5,"column":28},"parent":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\attributes.js","resolved":"C:\\桌面\\new-project\\node_modules\\jsdom\\lib\\jsdom\\living\\helpers\\namespaces.js"}],"generated":{"js":"\"use strict\";\nconst DOMException = require(\"domexception\");\nconst attrGenerated = require(\"./generated/Attr\");\nconst { asciiLowercase } = require(\"./helpers/strings\");\nconst { HTML_NS } = require(\"./helpers/namespaces\");\n\n// The following three are for https://dom.spec.whatwg.org/#concept-element-attribute-has. We don't just have a\n// predicate tester since removing that kind of flexibility gives us the potential for better future optimizations.\n\nexports.hasAttribute = function (element, A) {\n  return element._attributeList.includes(A);\n};\n\nexports.hasAttributeByName = function (element, name) {\n  return element._attributesByNameMap.has(name);\n};\n\nexports.hasAttributeByNameNS = function (element, namespace, localName) {\n  return element._attributeList.some(attribute => {\n    return attribute._localName === localName && attribute._namespace === namespace;\n  });\n};\n\nexports.changeAttribute = function (element, attribute, value) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-change\n\n  const oldValue = attribute._value;\n  attribute._value = value;\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n  element._attrModified(attribute._qualifiedName, value, oldValue);\n};\n\nexports.appendAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-append\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  attributeList.push(attribute);\n  attribute._element = element;\n\n  // Sync name cache\n  const name = attribute._qualifiedName;\n  const cache = element._attributesByNameMap;\n  let entry = cache.get(name);\n  if (!entry) {\n    entry = [];\n    cache.set(name, entry);\n  }\n  entry.push(attribute);\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is added.\"\n  element._attrModified(name, attribute._value, null);\n};\n\nexports.removeAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === attribute) {\n      attributeList.splice(i, 1);\n      attribute._element = null;\n\n      // Sync name cache\n      const name = attribute._qualifiedName;\n      const cache = element._attributesByNameMap;\n      const entry = cache.get(name);\n      entry.splice(entry.indexOf(attribute), 1);\n      if (entry.length === 0) {\n        cache.delete(name);\n      }\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is removed.\"\n      element._attrModified(name, null, attribute._value);\n\n      return;\n    }\n  }\n};\n\nexports.replaceAttribute = function (element, oldAttr, newAttr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-replace\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === oldAttr) {\n      attributeList.splice(i, 1, newAttr);\n      oldAttr._element = null;\n      newAttr._element = element;\n\n      // Sync name cache\n      const name = newAttr._qualifiedName;\n      const cache = element._attributesByNameMap;\n      let entry = cache.get(name);\n      if (!entry) {\n        entry = [];\n        cache.set(name, entry);\n      }\n      entry.splice(entry.indexOf(oldAttr), 1, newAttr);\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n      element._attrModified(name, newAttr._value, oldAttr._value);\n\n      return;\n    }\n  }\n};\n\nexports.getAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\n\n  if (element._namespaceURI === HTML_NS &&\n      element._ownerDocument._parsingMode === \"html\") {\n    name = asciiLowercase(name);\n  }\n\n  const cache = element._attributesByNameMap;\n  const entry = cache.get(name);\n  if (!entry) {\n    return null;\n  }\n\n  return entry[0];\n};\n\nexports.getAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\n\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  const attributeList = element._attributeList;\n  for (let i = 0; i < attributeList.length; ++i) {\n    const attr = attributeList[i];\n    if (attr._namespace === namespace && attr._localName === localName) {\n      return attr;\n    }\n  }\n\n  return null;\n};\n\n// Both of the following functions implement https://dom.spec.whatwg.org/#concept-element-attributes-get-value.\n// Separated them into two to keep symmetry with other functions.\nexports.getAttributeValue = function (element, localName) {\n  const attr = exports.getAttributeByNameNS(element, null, localName);\n\n  if (!attr) {\n    return \"\";\n  }\n\n  return attr._value;\n};\n\nexports.getAttributeValueNS = function (element, namespace, localName) {\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (!attr) {\n    return \"\";\n  }\n\n  return attr._value;\n};\n\nexports.setAttribute = function (element, attr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set\n\n  if (attr._element !== null && attr._element !== element) {\n    throw new DOMException(\"The attribute is in use.\", \"InUseAttributeError\");\n  }\n\n  const oldAttr = exports.getAttributeByNameNS(element, attr._namespace, attr._localName);\n  if (oldAttr === attr) {\n    return attr;\n  }\n\n  if (oldAttr !== null) {\n    exports.replaceAttribute(element, oldAttr, attr);\n  } else {\n    exports.appendAttribute(element, attr);\n  }\n\n  return oldAttr;\n};\n\nexports.setAttributeValue = function (element, localName, value, prefix, namespace) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set-value\n\n  if (prefix === undefined) {\n    prefix = null;\n  }\n  if (namespace === undefined) {\n    namespace = null;\n  }\n\n  const attribute = exports.getAttributeByNameNS(element, namespace, localName);\n  if (attribute === null) {\n    const newAttribute = attrGenerated.createImpl([], { namespace, namespacePrefix: prefix, localName, value });\n    exports.appendAttribute(element, newAttribute);\n    return;\n  }\n\n  exports.changeAttribute(element, attribute, value);\n};\n\nexports.setAnExistingAttributeValue = (attribute, value) => {\n  if (attribute._element === null) {\n    attribute._value = value;\n  }\n\n  exports.changeAttribute(attribute._element, attribute, value);\n};\n\nexports.removeAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\n\n  const attr = exports.getAttributeByName(element, name);\n\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n\n  return attr;\n};\n\nexports.removeAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace\n\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n\n  return attr;\n};\n\nexports.copyAttributeList = function (sourceElement, destElement) {\n  // Needed by https://dom.spec.whatwg.org/#concept-node-clone\n\n  for (const sourceAttr of sourceElement._attributeList) {\n    const destAttr = attrGenerated.createImpl([], {\n      namespace: sourceAttr._namespace,\n      namespacePrefix: sourceAttr._namespacePrefix,\n      localName: sourceAttr._localName,\n      value: sourceAttr._value\n    });\n\n    exports.appendAttribute(destElement, destAttr);\n  }\n};\n\nexports.attributeListsEqual = function (elementA, elementB) {\n  // Needed by https://dom.spec.whatwg.org/#concept-node-equals\n\n  const listA = elementA._attributeList;\n  const listB = elementB._attributeList;\n\n  if (listA.length !== listB.length) {\n    return false;\n  }\n\n  for (let i = 0; i < listA.length; ++i) {\n    const attrA = listA[i];\n\n    if (!listB.some(attrB => equalsA(attrB))) {\n      return false;\n    }\n\n    function equalsA(attrB) {\n      return attrA._namespace === attrB._namespace && attrA._localName === attrB._localName &&\n             attrA._value === attrB._value;\n    }\n  }\n\n  return true;\n};\n\nexports.attributeNames = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-getattributenames\n\n  return element._attributeList.map(a => a._qualifiedName);\n};\n\nexports.hasAttributes = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-hasattributes\n\n  return element._attributeList.length > 0;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/attributes.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}}],"sources":{"node_modules/jsdom/lib/jsdom/living/attributes.js":"\"use strict\";\nconst DOMException = require(\"domexception\");\nconst attrGenerated = require(\"./generated/Attr\");\nconst { asciiLowercase } = require(\"./helpers/strings\");\nconst { HTML_NS } = require(\"./helpers/namespaces\");\n\n// The following three are for https://dom.spec.whatwg.org/#concept-element-attribute-has. We don't just have a\n// predicate tester since removing that kind of flexibility gives us the potential for better future optimizations.\n\nexports.hasAttribute = function (element, A) {\n  return element._attributeList.includes(A);\n};\n\nexports.hasAttributeByName = function (element, name) {\n  return element._attributesByNameMap.has(name);\n};\n\nexports.hasAttributeByNameNS = function (element, namespace, localName) {\n  return element._attributeList.some(attribute => {\n    return attribute._localName === localName && attribute._namespace === namespace;\n  });\n};\n\nexports.changeAttribute = function (element, attribute, value) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-change\n\n  const oldValue = attribute._value;\n  attribute._value = value;\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n  element._attrModified(attribute._qualifiedName, value, oldValue);\n};\n\nexports.appendAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-append\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  attributeList.push(attribute);\n  attribute._element = element;\n\n  // Sync name cache\n  const name = attribute._qualifiedName;\n  const cache = element._attributesByNameMap;\n  let entry = cache.get(name);\n  if (!entry) {\n    entry = [];\n    cache.set(name, entry);\n  }\n  entry.push(attribute);\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is added.\"\n  element._attrModified(name, attribute._value, null);\n};\n\nexports.removeAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === attribute) {\n      attributeList.splice(i, 1);\n      attribute._element = null;\n\n      // Sync name cache\n      const name = attribute._qualifiedName;\n      const cache = element._attributesByNameMap;\n      const entry = cache.get(name);\n      entry.splice(entry.indexOf(attribute), 1);\n      if (entry.length === 0) {\n        cache.delete(name);\n      }\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is removed.\"\n      element._attrModified(name, null, attribute._value);\n\n      return;\n    }\n  }\n};\n\nexports.replaceAttribute = function (element, oldAttr, newAttr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-replace\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === oldAttr) {\n      attributeList.splice(i, 1, newAttr);\n      oldAttr._element = null;\n      newAttr._element = element;\n\n      // Sync name cache\n      const name = newAttr._qualifiedName;\n      const cache = element._attributesByNameMap;\n      let entry = cache.get(name);\n      if (!entry) {\n        entry = [];\n        cache.set(name, entry);\n      }\n      entry.splice(entry.indexOf(oldAttr), 1, newAttr);\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n      element._attrModified(name, newAttr._value, oldAttr._value);\n\n      return;\n    }\n  }\n};\n\nexports.getAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\n\n  if (element._namespaceURI === HTML_NS &&\n      element._ownerDocument._parsingMode === \"html\") {\n    name = asciiLowercase(name);\n  }\n\n  const cache = element._attributesByNameMap;\n  const entry = cache.get(name);\n  if (!entry) {\n    return null;\n  }\n\n  return entry[0];\n};\n\nexports.getAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\n\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  const attributeList = element._attributeList;\n  for (let i = 0; i < attributeList.length; ++i) {\n    const attr = attributeList[i];\n    if (attr._namespace === namespace && attr._localName === localName) {\n      return attr;\n    }\n  }\n\n  return null;\n};\n\n// Both of the following functions implement https://dom.spec.whatwg.org/#concept-element-attributes-get-value.\n// Separated them into two to keep symmetry with other functions.\nexports.getAttributeValue = function (element, localName) {\n  const attr = exports.getAttributeByNameNS(element, null, localName);\n\n  if (!attr) {\n    return \"\";\n  }\n\n  return attr._value;\n};\n\nexports.getAttributeValueNS = function (element, namespace, localName) {\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (!attr) {\n    return \"\";\n  }\n\n  return attr._value;\n};\n\nexports.setAttribute = function (element, attr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set\n\n  if (attr._element !== null && attr._element !== element) {\n    throw new DOMException(\"The attribute is in use.\", \"InUseAttributeError\");\n  }\n\n  const oldAttr = exports.getAttributeByNameNS(element, attr._namespace, attr._localName);\n  if (oldAttr === attr) {\n    return attr;\n  }\n\n  if (oldAttr !== null) {\n    exports.replaceAttribute(element, oldAttr, attr);\n  } else {\n    exports.appendAttribute(element, attr);\n  }\n\n  return oldAttr;\n};\n\nexports.setAttributeValue = function (element, localName, value, prefix, namespace) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set-value\n\n  if (prefix === undefined) {\n    prefix = null;\n  }\n  if (namespace === undefined) {\n    namespace = null;\n  }\n\n  const attribute = exports.getAttributeByNameNS(element, namespace, localName);\n  if (attribute === null) {\n    const newAttribute = attrGenerated.createImpl([], { namespace, namespacePrefix: prefix, localName, value });\n    exports.appendAttribute(element, newAttribute);\n    return;\n  }\n\n  exports.changeAttribute(element, attribute, value);\n};\n\nexports.setAnExistingAttributeValue = (attribute, value) => {\n  if (attribute._element === null) {\n    attribute._value = value;\n  }\n\n  exports.changeAttribute(attribute._element, attribute, value);\n};\n\nexports.removeAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\n\n  const attr = exports.getAttributeByName(element, name);\n\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n\n  return attr;\n};\n\nexports.removeAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace\n\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n\n  return attr;\n};\n\nexports.copyAttributeList = function (sourceElement, destElement) {\n  // Needed by https://dom.spec.whatwg.org/#concept-node-clone\n\n  for (const sourceAttr of sourceElement._attributeList) {\n    const destAttr = attrGenerated.createImpl([], {\n      namespace: sourceAttr._namespace,\n      namespacePrefix: sourceAttr._namespacePrefix,\n      localName: sourceAttr._localName,\n      value: sourceAttr._value\n    });\n\n    exports.appendAttribute(destElement, destAttr);\n  }\n};\n\nexports.attributeListsEqual = function (elementA, elementB) {\n  // Needed by https://dom.spec.whatwg.org/#concept-node-equals\n\n  const listA = elementA._attributeList;\n  const listB = elementB._attributeList;\n\n  if (listA.length !== listB.length) {\n    return false;\n  }\n\n  for (let i = 0; i < listA.length; ++i) {\n    const attrA = listA[i];\n\n    if (!listB.some(attrB => equalsA(attrB))) {\n      return false;\n    }\n\n    function equalsA(attrB) {\n      return attrA._namespace === attrB._namespace && attrA._localName === attrB._localName &&\n             attrA._value === attrB._value;\n    }\n  }\n\n  return true;\n};\n\nexports.attributeNames = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-getattributenames\n\n  return element._attributeList.map(a => a._qualifiedName);\n};\n\nexports.hasAttributes = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-hasattributes\n\n  return element._attributeList.length > 0;\n};\n"},"lineCount":300}},"error":null,"hash":"4c336e1d830f23e5e0ffeeae96e9c0bb","cacheData":{"env":{}}}