{"id":"node_modules/jsdom/node_modules/abab/lib/btoa.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\abab\\package.json","includedInParent":true,"mtime":1557646988877}],"generated":{"js":"\"use strict\";\n\n/**\n * btoa() as defined by the HTML and Infra specs, which mostly just references\n * RFC 4648.\n */\nfunction btoa(s) {\n  let i;\n  // String conversion as required by Web IDL.\n  s = `${s}`;\n  // \"The btoa() method must throw an \"InvalidCharacterError\" DOMException if\n  // data contains any character whose code point is greater than U+00FF.\"\n  for (i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) > 255) {\n      return null;\n    }\n  }\n  let out = \"\";\n  for (i = 0; i < s.length; i += 3) {\n    const groupsOfSix = [undefined, undefined, undefined, undefined];\n    groupsOfSix[0] = s.charCodeAt(i) >> 2;\n    groupsOfSix[1] = (s.charCodeAt(i) & 0x03) << 4;\n    if (s.length > i + 1) {\n      groupsOfSix[1] |= s.charCodeAt(i + 1) >> 4;\n      groupsOfSix[2] = (s.charCodeAt(i + 1) & 0x0f) << 2;\n    }\n    if (s.length > i + 2) {\n      groupsOfSix[2] |= s.charCodeAt(i + 2) >> 6;\n      groupsOfSix[3] = s.charCodeAt(i + 2) & 0x3f;\n    }\n    for (let j = 0; j < groupsOfSix.length; j++) {\n      if (typeof groupsOfSix[j] === \"undefined\") {\n        out += \"=\";\n      } else {\n        out += btoaLookup(groupsOfSix[j]);\n      }\n    }\n  }\n  return out;\n}\n\n/**\n * Lookup table for btoa(), which converts a six-bit number into the\n * corresponding ASCII character.\n */\nfunction btoaLookup(idx) {\n  if (idx < 26) {\n    return String.fromCharCode(idx + \"A\".charCodeAt(0));\n  }\n  if (idx < 52) {\n    return String.fromCharCode(idx - 26 + \"a\".charCodeAt(0));\n  }\n  if (idx < 62) {\n    return String.fromCharCode(idx - 52 + \"0\".charCodeAt(0));\n  }\n  if (idx === 62) {\n    return \"+\";\n  }\n  if (idx === 63) {\n    return \"/\";\n  }\n  // Throw INVALID_CHARACTER_ERR exception here -- won't be hit in the tests.\n  return undefined;\n}\n\nmodule.exports = btoa;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jsdom/node_modules/abab/lib/btoa.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}}],"sources":{"node_modules/jsdom/node_modules/abab/lib/btoa.js":"\"use strict\";\n\n/**\n * btoa() as defined by the HTML and Infra specs, which mostly just references\n * RFC 4648.\n */\nfunction btoa(s) {\n  let i;\n  // String conversion as required by Web IDL.\n  s = `${s}`;\n  // \"The btoa() method must throw an \"InvalidCharacterError\" DOMException if\n  // data contains any character whose code point is greater than U+00FF.\"\n  for (i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) > 255) {\n      return null;\n    }\n  }\n  let out = \"\";\n  for (i = 0; i < s.length; i += 3) {\n    const groupsOfSix = [undefined, undefined, undefined, undefined];\n    groupsOfSix[0] = s.charCodeAt(i) >> 2;\n    groupsOfSix[1] = (s.charCodeAt(i) & 0x03) << 4;\n    if (s.length > i + 1) {\n      groupsOfSix[1] |= s.charCodeAt(i + 1) >> 4;\n      groupsOfSix[2] = (s.charCodeAt(i + 1) & 0x0f) << 2;\n    }\n    if (s.length > i + 2) {\n      groupsOfSix[2] |= s.charCodeAt(i + 2) >> 6;\n      groupsOfSix[3] = s.charCodeAt(i + 2) & 0x3f;\n    }\n    for (let j = 0; j < groupsOfSix.length; j++) {\n      if (typeof groupsOfSix[j] === \"undefined\") {\n        out += \"=\";\n      } else {\n        out += btoaLookup(groupsOfSix[j]);\n      }\n    }\n  }\n  return out;\n}\n\n/**\n * Lookup table for btoa(), which converts a six-bit number into the\n * corresponding ASCII character.\n */\nfunction btoaLookup(idx) {\n  if (idx < 26) {\n    return String.fromCharCode(idx + \"A\".charCodeAt(0));\n  }\n  if (idx < 52) {\n    return String.fromCharCode(idx - 26 + \"a\".charCodeAt(0));\n  }\n  if (idx < 62) {\n    return String.fromCharCode(idx - 52 + \"0\".charCodeAt(0));\n  }\n  if (idx === 62) {\n    return \"+\";\n  }\n  if (idx === 63) {\n    return \"/\";\n  }\n  // Throw INVALID_CHARACTER_ERR exception here -- won't be hit in the tests.\n  return undefined;\n}\n\nmodule.exports = btoa;\n"},"lineCount":67}},"error":null,"hash":"2cf8becbf593277d7b534f06aeddb390","cacheData":{"env":{}}}