{"id":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\node_modules\\symbol-tree\\package.json","includedInParent":true,"mtime":1557646991844}],"generated":{"js":"'use strict';\n\nmodule.exports = class SymbolTreeNode {\n        constructor() {\n                this.parent = null;\n                this.previousSibling = null;\n                this.nextSibling = null;\n\n                this.firstChild = null;\n                this.lastChild = null;\n\n                /** This value is incremented anytime a children is added or removed */\n                this.childrenVersion = 0;\n                /** The last child object which has a cached index */\n                this.childIndexCachedUpTo = null;\n\n                /** This value represents the cached node index, as long as\n                 * cachedIndexVersion matches with the childrenVersion of the parent */\n                this.cachedIndex = -1;\n                this.cachedIndexVersion = NaN; // NaN is never equal to anything\n        }\n\n        get isAttached() {\n                return Boolean(this.parent || this.previousSibling || this.nextSibling);\n        }\n\n        get hasChildren() {\n                return Boolean(this.firstChild);\n        }\n\n        childrenChanged() {\n                /* jshint -W016 */\n                // integer wrap around\n                this.childrenVersion = (this.childrenVersion + 1) & 0xFFFFFFFF;\n                this.childIndexCachedUpTo = null;\n        }\n\n        getCachedIndex(parentNode) {\n                // (assumes parentNode is actually the parent)\n                if (this.cachedIndexVersion !== parentNode.childrenVersion) {\n                        this.cachedIndexVersion = NaN;\n                        // cachedIndex is no longer valid\n                        return -1;\n                }\n\n                return this.cachedIndex; // -1 if not cached\n        }\n\n        setCachedIndex(parentNode, index) {\n                // (assumes parentNode is actually the parent)\n                this.cachedIndexVersion = parentNode.childrenVersion;\n                this.cachedIndex = index;\n        }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}}],"sources":{"node_modules/jsdom/node_modules/symbol-tree/lib/SymbolTreeNode.js":"'use strict';\n\nmodule.exports = class SymbolTreeNode {\n        constructor() {\n                this.parent = null;\n                this.previousSibling = null;\n                this.nextSibling = null;\n\n                this.firstChild = null;\n                this.lastChild = null;\n\n                /** This value is incremented anytime a children is added or removed */\n                this.childrenVersion = 0;\n                /** The last child object which has a cached index */\n                this.childIndexCachedUpTo = null;\n\n                /** This value represents the cached node index, as long as\n                 * cachedIndexVersion matches with the childrenVersion of the parent */\n                this.cachedIndex = -1;\n                this.cachedIndexVersion = NaN; // NaN is never equal to anything\n        }\n\n        get isAttached() {\n                return Boolean(this.parent || this.previousSibling || this.nextSibling);\n        }\n\n        get hasChildren() {\n                return Boolean(this.firstChild);\n        }\n\n        childrenChanged() {\n                /* jshint -W016 */\n                // integer wrap around\n                this.childrenVersion = (this.childrenVersion + 1) & 0xFFFFFFFF;\n                this.childIndexCachedUpTo = null;\n        }\n\n        getCachedIndex(parentNode) {\n                // (assumes parentNode is actually the parent)\n                if (this.cachedIndexVersion !== parentNode.childrenVersion) {\n                        this.cachedIndexVersion = NaN;\n                        // cachedIndex is no longer valid\n                        return -1;\n                }\n\n                return this.cachedIndex; // -1 if not cached\n        }\n\n        setCachedIndex(parentNode, index) {\n                // (assumes parentNode is actually the parent)\n                this.cachedIndexVersion = parentNode.childrenVersion;\n                this.cachedIndex = index;\n        }\n};\n"},"lineCount":55}},"error":null,"hash":"008b61d2b46dbeae27ca1dd8770a99c5","cacheData":{"env":{}}}