{"id":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557670107923},{"name":"C:\\桌面\\new-project\\node_modules\\jsdom\\package.json","includedInParent":true,"mtime":1557646988018}],"generated":{"js":"\"use strict\";\n\nconst asciiWhitespaceRe = /^[\\t\\n\\f\\r ]$/;\nexports.asciiWhitespaceRe = asciiWhitespaceRe;\n\n// https://infra.spec.whatwg.org/#ascii-lowercase\nexports.asciiLowercase = s => {\n  return s.replace(/[A-Z]/g, l => l.toLowerCase());\n};\n\n// https://infra.spec.whatwg.org/#strip-newlines\nexports.stripNewlines = s => {\n  return s.replace(/[\\n\\r]+/g, \"\");\n};\n\n// https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\nexports.stripLeadingAndTrailingASCIIWhitespace = s => {\n  return s.replace(/^[ \\t\\n\\f\\r]+/, \"\").replace(/[ \\t\\n\\f\\r]+$/, \"\");\n};\n\n// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\nexports.stripAndCollapseASCIIWhitespace = s => {\n  return s.replace(/[ \\t\\n\\f\\r]+/g, \" \").replace(/^[ \\t\\n\\f\\r]+/, \"\").replace(/[ \\t\\n\\f\\r]+$/, \"\");\n};\n\n// https://html.spec.whatwg.org/multipage/infrastructure.html#valid-simple-colour\nexports.isValidSimpleColor = s => {\n  return /^#[a-fA-F\\d]{6}$/.test(s);\n};\n\n// https://infra.spec.whatwg.org/#ascii-case-insensitive\nexports.asciiCaseInsensitiveMatch = (a, b) => {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; ++i) {\n    if ((a.charCodeAt(i) | 32) !== (b.charCodeAt(i) | 32)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-floating-point-number\nconst floatingPointNumRe = /^-?(?:\\d+|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?$/;\nexports.isValidFloatingPointNumber = str => floatingPointNumRe.test(str);\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values\nexports.parseFloatingPointNumber = str => {\n  const parsed = parseFloat(str);\n  return isFinite(parsed) ? parsed : NaN;\n};\n\n// https://infra.spec.whatwg.org/#split-on-ascii-whitespace\nexports.splitOnASCIIWhitespace = str => {\n  let position = 0;\n  const tokens = [];\n  while (position < str.length && asciiWhitespaceRe.test(str[position])) {\n    position++;\n  }\n  if (position === str.length) {\n    return tokens;\n  }\n  while (position < str.length) {\n    const start = position;\n    while (position < str.length && !asciiWhitespaceRe.test(str[position])) {\n      position++;\n    }\n    tokens.push(str.slice(start, position));\n    while (position < str.length && asciiWhitespaceRe.test(str[position])) {\n      position++;\n    }\n  }\n  return tokens;\n};\n\n// https://infra.spec.whatwg.org/#split-on-commas\nexports.splitOnCommas = str => {\n  let position = 0;\n  const tokens = [];\n  while (position < str.length) {\n    let start = position;\n    while (position < str.length && str[position] !== \",\") {\n      position++;\n    }\n    let end = position;\n    while (start < str.length && asciiWhitespaceRe.test(str[start])) {\n      start++;\n    }\n    while (end > start && asciiWhitespaceRe.test(str[end - 1])) {\n      end--;\n    }\n    tokens.push(str.slice(start, end));\n    if (position < str.length) {\n      position++;\n    }\n  }\n  return tokens;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jsdom/lib/jsdom/living/helpers/strings.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}}],"sources":{"node_modules/jsdom/lib/jsdom/living/helpers/strings.js":"\"use strict\";\n\nconst asciiWhitespaceRe = /^[\\t\\n\\f\\r ]$/;\nexports.asciiWhitespaceRe = asciiWhitespaceRe;\n\n// https://infra.spec.whatwg.org/#ascii-lowercase\nexports.asciiLowercase = s => {\n  return s.replace(/[A-Z]/g, l => l.toLowerCase());\n};\n\n// https://infra.spec.whatwg.org/#strip-newlines\nexports.stripNewlines = s => {\n  return s.replace(/[\\n\\r]+/g, \"\");\n};\n\n// https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\nexports.stripLeadingAndTrailingASCIIWhitespace = s => {\n  return s.replace(/^[ \\t\\n\\f\\r]+/, \"\").replace(/[ \\t\\n\\f\\r]+$/, \"\");\n};\n\n// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\nexports.stripAndCollapseASCIIWhitespace = s => {\n  return s.replace(/[ \\t\\n\\f\\r]+/g, \" \").replace(/^[ \\t\\n\\f\\r]+/, \"\").replace(/[ \\t\\n\\f\\r]+$/, \"\");\n};\n\n// https://html.spec.whatwg.org/multipage/infrastructure.html#valid-simple-colour\nexports.isValidSimpleColor = s => {\n  return /^#[a-fA-F\\d]{6}$/.test(s);\n};\n\n// https://infra.spec.whatwg.org/#ascii-case-insensitive\nexports.asciiCaseInsensitiveMatch = (a, b) => {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; ++i) {\n    if ((a.charCodeAt(i) | 32) !== (b.charCodeAt(i) | 32)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-floating-point-number\nconst floatingPointNumRe = /^-?(?:\\d+|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?$/;\nexports.isValidFloatingPointNumber = str => floatingPointNumRe.test(str);\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values\nexports.parseFloatingPointNumber = str => {\n  const parsed = parseFloat(str);\n  return isFinite(parsed) ? parsed : NaN;\n};\n\n// https://infra.spec.whatwg.org/#split-on-ascii-whitespace\nexports.splitOnASCIIWhitespace = str => {\n  let position = 0;\n  const tokens = [];\n  while (position < str.length && asciiWhitespaceRe.test(str[position])) {\n    position++;\n  }\n  if (position === str.length) {\n    return tokens;\n  }\n  while (position < str.length) {\n    const start = position;\n    while (position < str.length && !asciiWhitespaceRe.test(str[position])) {\n      position++;\n    }\n    tokens.push(str.slice(start, position));\n    while (position < str.length && asciiWhitespaceRe.test(str[position])) {\n      position++;\n    }\n  }\n  return tokens;\n};\n\n// https://infra.spec.whatwg.org/#split-on-commas\nexports.splitOnCommas = str => {\n  let position = 0;\n  const tokens = [];\n  while (position < str.length) {\n    let start = position;\n    while (position < str.length && str[position] !== \",\") {\n      position++;\n    }\n    let end = position;\n    while (start < str.length && asciiWhitespaceRe.test(str[start])) {\n      start++;\n    }\n    while (end > start && asciiWhitespaceRe.test(str[end - 1])) {\n      end--;\n    }\n    tokens.push(str.slice(start, end));\n    if (position < str.length) {\n      position++;\n    }\n  }\n  return tokens;\n};\n"},"lineCount":102}},"error":null,"hash":"a8b868c6f55e5f6c3d32c54890a0ed2a","cacheData":{"env":{}}}