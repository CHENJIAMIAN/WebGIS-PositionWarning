{"id":"node_modules/turf-simplify/index.js","dependencies":[{"name":"C:\\桌面\\new-project\\package.json","includedInParent":true,"mtime":1557726847338},{"name":"C:\\桌面\\new-project\\node_modules\\turf-simplify\\package.json","includedInParent":true,"mtime":1557726826220},{"name":"simplify-js","loc":{"line":1,"column":23},"parent":"C:\\桌面\\new-project\\node_modules\\turf-simplify\\index.js","resolved":"C:\\桌面\\new-project\\node_modules\\simplify-js\\simplify.js"}],"generated":{"js":"var simplify = require('simplify-js');\n\n// supported GeoJSON geometries, used to check whether to wrap in simpleFeature()\nvar supportedTypes = ['LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Takes a {@link LineString} or {@link Polygon} and returns a simplified version. Internally uses [simplify-js](http://mourner.github.io/simplify-js/) to perform simplification.\n *\n * @name simplify\n * @param {Feature<(LineString|Polygon|MultiLineString|MultiPolygon)>|FeatureCollection|GeometryCollection} feature feature to be simplified\n * @param {number} tolerance simplification tolerance\n * @param {boolean} highQuality whether or not to spend more time to create\n * a higher-quality simplification with a different algorithm\n * @return {Feature<(LineString|Polygon|MultiLineString|MultiPolygon)>|FeatureCollection|GeometryCollection} a simplified feature\n * @example\n  * var feature = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-70.603637, -33.399918],\n *       [-70.614624, -33.395332],\n *       [-70.639343, -33.392466],\n *       [-70.659942, -33.394759],\n *       [-70.683975, -33.404504],\n *       [-70.697021, -33.419406],\n *       [-70.701141, -33.434306],\n *       [-70.700454, -33.446339],\n *       [-70.694274, -33.458369],\n *       [-70.682601, -33.465816],\n *       [-70.668869, -33.472117],\n *       [-70.646209, -33.473835],\n *       [-70.624923, -33.472117],\n *       [-70.609817, -33.468107],\n *       [-70.595397, -33.458369],\n *       [-70.587158, -33.442901],\n *       [-70.587158, -33.426283],\n *       [-70.590591, -33.414248],\n *       [-70.594711, -33.406224],\n *       [-70.603637, -33.399918]\n *     ]]\n *   }\n * };\n\n * var tolerance = 0.01;\n *\n * var simplified = turf.simplify(\n *  feature, tolerance, false);\n *\n * //=feature\n *\n * //=simplified\n */\nmodule.exports = function (feature, tolerance, highQuality) {\n    if (feature.type === 'Feature') {\n        return simpleFeature(\n            simplifyHelper(feature, tolerance, highQuality),\n            feature.properties);\n    } else if (feature.type === 'FeatureCollection') {\n        return {\n            type: 'FeatureCollection',\n            features: feature.features.map(function (f) {\n                var simplified = simplifyHelper(f, tolerance, highQuality);\n\n                // we create simpleFeature here because it doesn't apply to GeometryCollection\n                // so we can't create it at simplifyHelper()\n                if (supportedTypes.indexOf(simplified.type) > -1) {\n                    return simpleFeature(simplified, f.properties);\n                } else {\n                    return simplified;\n                }\n            })\n        };\n    } else if (feature.type === 'GeometryCollection') {\n        return {\n            type: 'GeometryCollection',\n            geometries: feature.geometries.map(function (g) {\n                if (supportedTypes.indexOf(g.type) > -1) {\n                    return simplifyHelper({\n                        type: 'Feature',\n                        geometry: g\n                    }, tolerance, highQuality);\n                }\n                return g;\n            })\n        };\n    } else {\n        return feature;\n    }\n};\n\n\nfunction simplifyHelper(feature, tolerance, highQuality) {\n    if (feature.geometry.type === 'LineString') {\n        return {\n            type: 'LineString',\n            coordinates: simplifyLine(feature.geometry.coordinates, tolerance, highQuality)\n        };\n    } else if (feature.geometry.type === 'MultiLineString') {\n        return {\n            type: 'MultiLineString',\n            coordinates: feature.geometry.coordinates.map(function (lines) {\n                return simplifyLine(lines, tolerance, highQuality);\n            })\n        };\n    } else if (feature.geometry.type === 'Polygon') {\n        return {\n            type: 'Polygon',\n            coordinates: simplifyPolygon(feature.geometry.coordinates, tolerance, highQuality)\n        };\n    } else if (feature.geometry.type === 'MultiPolygon') {\n        return {\n            type: 'MultiPolygon',\n            coordinates: feature.geometry.coordinates.map(function (rings) {\n                return simplifyPolygon(rings, tolerance, highQuality);\n            })\n        };\n    } else {\n        // unsupported geometry type supplied\n        return feature;\n    }\n}\n\n/*\n* returns true if ring's first coordinate is the same as its last\n*/\nfunction checkValidity(ring) {\n    if (ring.length < 3) {\n        return false;\n    //if the last point is the same as the first, it's not a triangle\n    } else if (ring.length === 3 &&\n      ((ring[2][0] === ring[0][0]) && (ring[2][1] === ring[0][1]))) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\nfunction simpleFeature(geom, properties) {\n    return {\n        type: 'Feature',\n        geometry: geom,\n        properties: properties\n    };\n}\n\nfunction simplifyLine(coordinates, tolerance, highQuality) {\n    return simplify(coordinates.map(function (coord) {\n        return {x: coord[0], y: coord[1]};\n    }), tolerance, highQuality).map(function (coords) {\n        return [coords.x, coords.y];\n    });\n}\n\nfunction simplifyPolygon(coordinates, tolerance, highQuality) {\n    return coordinates.map(function (ring) {\n        var pts = ring.map(function (coord) {\n            return {x: coord[0], y: coord[1]};\n        });\n        if (pts.length < 4) {\n            throw new Error('Invalid polygon');\n        }\n        var simpleRing = simplify(pts, tolerance, highQuality).map(function (coords) {\n            return [coords.x, coords.y];\n        });\n        //remove 1 percent of tolerance until enough points to make a triangle\n        while (!checkValidity(simpleRing)) {\n            tolerance -= tolerance * 0.01;\n            simpleRing = simplify(pts, tolerance, highQuality).map(function (coords) {\n                return [coords.x, coords.y];\n            });\n        }\n        if (\n            (simpleRing[simpleRing.length - 1][0] !== simpleRing[0][0]) ||\n                (simpleRing[simpleRing.length - 1][1] !== simpleRing[0][1])) {\n            simpleRing.push(simpleRing[0]);\n        }\n        return simpleRing;\n    });\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/turf-simplify/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/turf-simplify/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}}],"sources":{"node_modules/turf-simplify/index.js":"var simplify = require('simplify-js');\n\n// supported GeoJSON geometries, used to check whether to wrap in simpleFeature()\nvar supportedTypes = ['LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Takes a {@link LineString} or {@link Polygon} and returns a simplified version. Internally uses [simplify-js](http://mourner.github.io/simplify-js/) to perform simplification.\n *\n * @name simplify\n * @param {Feature<(LineString|Polygon|MultiLineString|MultiPolygon)>|FeatureCollection|GeometryCollection} feature feature to be simplified\n * @param {number} tolerance simplification tolerance\n * @param {boolean} highQuality whether or not to spend more time to create\n * a higher-quality simplification with a different algorithm\n * @return {Feature<(LineString|Polygon|MultiLineString|MultiPolygon)>|FeatureCollection|GeometryCollection} a simplified feature\n * @example\n  * var feature = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-70.603637, -33.399918],\n *       [-70.614624, -33.395332],\n *       [-70.639343, -33.392466],\n *       [-70.659942, -33.394759],\n *       [-70.683975, -33.404504],\n *       [-70.697021, -33.419406],\n *       [-70.701141, -33.434306],\n *       [-70.700454, -33.446339],\n *       [-70.694274, -33.458369],\n *       [-70.682601, -33.465816],\n *       [-70.668869, -33.472117],\n *       [-70.646209, -33.473835],\n *       [-70.624923, -33.472117],\n *       [-70.609817, -33.468107],\n *       [-70.595397, -33.458369],\n *       [-70.587158, -33.442901],\n *       [-70.587158, -33.426283],\n *       [-70.590591, -33.414248],\n *       [-70.594711, -33.406224],\n *       [-70.603637, -33.399918]\n *     ]]\n *   }\n * };\n\n * var tolerance = 0.01;\n *\n * var simplified = turf.simplify(\n *  feature, tolerance, false);\n *\n * //=feature\n *\n * //=simplified\n */\nmodule.exports = function (feature, tolerance, highQuality) {\n    if (feature.type === 'Feature') {\n        return simpleFeature(\n            simplifyHelper(feature, tolerance, highQuality),\n            feature.properties);\n    } else if (feature.type === 'FeatureCollection') {\n        return {\n            type: 'FeatureCollection',\n            features: feature.features.map(function (f) {\n                var simplified = simplifyHelper(f, tolerance, highQuality);\n\n                // we create simpleFeature here because it doesn't apply to GeometryCollection\n                // so we can't create it at simplifyHelper()\n                if (supportedTypes.indexOf(simplified.type) > -1) {\n                    return simpleFeature(simplified, f.properties);\n                } else {\n                    return simplified;\n                }\n            })\n        };\n    } else if (feature.type === 'GeometryCollection') {\n        return {\n            type: 'GeometryCollection',\n            geometries: feature.geometries.map(function (g) {\n                if (supportedTypes.indexOf(g.type) > -1) {\n                    return simplifyHelper({\n                        type: 'Feature',\n                        geometry: g\n                    }, tolerance, highQuality);\n                }\n                return g;\n            })\n        };\n    } else {\n        return feature;\n    }\n};\n\n\nfunction simplifyHelper(feature, tolerance, highQuality) {\n    if (feature.geometry.type === 'LineString') {\n        return {\n            type: 'LineString',\n            coordinates: simplifyLine(feature.geometry.coordinates, tolerance, highQuality)\n        };\n    } else if (feature.geometry.type === 'MultiLineString') {\n        return {\n            type: 'MultiLineString',\n            coordinates: feature.geometry.coordinates.map(function (lines) {\n                return simplifyLine(lines, tolerance, highQuality);\n            })\n        };\n    } else if (feature.geometry.type === 'Polygon') {\n        return {\n            type: 'Polygon',\n            coordinates: simplifyPolygon(feature.geometry.coordinates, tolerance, highQuality)\n        };\n    } else if (feature.geometry.type === 'MultiPolygon') {\n        return {\n            type: 'MultiPolygon',\n            coordinates: feature.geometry.coordinates.map(function (rings) {\n                return simplifyPolygon(rings, tolerance, highQuality);\n            })\n        };\n    } else {\n        // unsupported geometry type supplied\n        return feature;\n    }\n}\n\n/*\n* returns true if ring's first coordinate is the same as its last\n*/\nfunction checkValidity(ring) {\n    if (ring.length < 3) {\n        return false;\n    //if the last point is the same as the first, it's not a triangle\n    } else if (ring.length === 3 &&\n      ((ring[2][0] === ring[0][0]) && (ring[2][1] === ring[0][1]))) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\nfunction simpleFeature(geom, properties) {\n    return {\n        type: 'Feature',\n        geometry: geom,\n        properties: properties\n    };\n}\n\nfunction simplifyLine(coordinates, tolerance, highQuality) {\n    return simplify(coordinates.map(function (coord) {\n        return {x: coord[0], y: coord[1]};\n    }), tolerance, highQuality).map(function (coords) {\n        return [coords.x, coords.y];\n    });\n}\n\nfunction simplifyPolygon(coordinates, tolerance, highQuality) {\n    return coordinates.map(function (ring) {\n        var pts = ring.map(function (coord) {\n            return {x: coord[0], y: coord[1]};\n        });\n        if (pts.length < 4) {\n            throw new Error('Invalid polygon');\n        }\n        var simpleRing = simplify(pts, tolerance, highQuality).map(function (coords) {\n            return [coords.x, coords.y];\n        });\n        //remove 1 percent of tolerance until enough points to make a triangle\n        while (!checkValidity(simpleRing)) {\n            tolerance -= tolerance * 0.01;\n            simpleRing = simplify(pts, tolerance, highQuality).map(function (coords) {\n                return [coords.x, coords.y];\n            });\n        }\n        if (\n            (simpleRing[simpleRing.length - 1][0] !== simpleRing[0][0]) ||\n                (simpleRing[simpleRing.length - 1][1] !== simpleRing[0][1])) {\n            simpleRing.push(simpleRing[0]);\n        }\n        return simpleRing;\n    });\n}\n"},"lineCount":182}},"error":null,"hash":"3801cd8af6d24ec7325329d3e745696b","cacheData":{"env":{}}}