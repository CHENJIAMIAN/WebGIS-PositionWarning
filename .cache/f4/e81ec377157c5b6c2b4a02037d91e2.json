{"id":"node_modules/ol/format/filter/ComparisonBinary.js","dependencies":[{"name":"C:\\桌面\\WebGIS-PositionWarning\\node_modules\\ol\\format\\filter\\ComparisonBinary.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\桌面\\WebGIS-PositionWarning\\package.json","includedInParent":true,"mtime":1557934898433},{"name":"C:\\桌面\\WebGIS-PositionWarning\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1557726846824},{"name":"./Comparison.js","loc":{"line":4,"column":23},"parent":"C:\\桌面\\WebGIS-PositionWarning\\node_modules\\ol\\format\\filter\\ComparisonBinary.js","resolved":"C:\\桌面\\WebGIS-PositionWarning\\node_modules\\ol\\format\\filter\\Comparison.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Comparison = _interopRequireDefault(require(\"./Comparison.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @module ol/format/filter/ComparisonBinary\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary =\n/*@__PURE__*/\nfunction (Comparison) {\n  function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n    Comparison.call(this, tagName, propertyName);\n    /**\n     * @type {!(string|number)}\n     */\n\n    this.expression = expression;\n    /**\n     * @type {boolean|undefined}\n     */\n\n    this.matchCase = opt_matchCase;\n  }\n\n  if (Comparison) ComparisonBinary.__proto__ = Comparison;\n  ComparisonBinary.prototype = Object.create(Comparison && Comparison.prototype);\n  ComparisonBinary.prototype.constructor = ComparisonBinary;\n  return ComparisonBinary;\n}(_Comparison.default);\n\nvar _default = ComparisonBinary;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":6},"generated":{"line":23,"column":4}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":22},"generated":{"line":23,"column":20}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":41},"generated":{"line":24,"column":0}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":41},"generated":{"line":25,"column":0}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":41},"generated":{"line":25,"column":10}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":41},"generated":{"line":25,"column":20}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":41},"generated":{"line":25,"column":22}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":0}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":11}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":27}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":14},"generated":{"line":26,"column":28}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":35}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":23},"generated":{"line":26,"column":37}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":49}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":37},"generated":{"line":26,"column":51}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":61}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":49},"generated":{"line":26,"column":63}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":76}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":21,"column":64},"generated":{"line":26,"column":78}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":"super","original":{"line":23,"column":4},"generated":{"line":27,"column":0}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":"super","original":{"line":23,"column":4},"generated":{"line":27,"column":4}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":"super","original":{"line":23,"column":4},"generated":{"line":27,"column":14}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":"super","original":{"line":23,"column":4},"generated":{"line":27,"column":15}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":"super","original":{"line":23,"column":4},"generated":{"line":27,"column":19}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":23,"column":9},"generated":{"line":27,"column":20}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":"super","original":{"line":23,"column":4},"generated":{"line":27,"column":24}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":23,"column":10},"generated":{"line":27,"column":26}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":"super","original":{"line":23,"column":4},"generated":{"line":27,"column":33}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":23,"column":19},"generated":{"line":27,"column":35}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":"super","original":{"line":23,"column":4},"generated":{"line":27,"column":47}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":28,"column":4},"generated":{"line":32,"column":0}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":28,"column":9},"generated":{"line":32,"column":9}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":28,"column":4},"generated":{"line":32,"column":19}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":28,"column":22},"generated":{"line":32,"column":22}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":28,"column":4},"generated":{"line":32,"column":32}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":33,"column":4},"generated":{"line":37,"column":0}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":33,"column":9},"generated":{"line":37,"column":9}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":33,"column":4},"generated":{"line":37,"column":18}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":33,"column":21},"generated":{"line":37,"column":21}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":33,"column":4},"generated":{"line":37,"column":34}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":34,"column":3},"generated":{"line":42,"column":18}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":34,"column":3},"generated":{"line":42,"column":19}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":34,"column":3},"generated":{"line":42,"column":29}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":34,"column":3},"generated":{"line":42,"column":43}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":41},"generated":{"line":44,"column":1}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":31},"generated":{"line":44,"column":2}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":41},"generated":{"line":44,"column":21}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":13,"column":0},"generated":{"line":44,"column":22}},{"source":"../../../../src/ol/format/filter/ComparisonBinary.js","name":null,"original":{"line":38,"column":15},"generated":{"line":46,"column":15}}],"sources":{"../../../../src/ol/format/filter/ComparisonBinary.js":"/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nclass ComparisonBinary extends Comparison {\n\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean=} opt_matchCase Case-sensitive?\n   */\n  constructor(tagName, propertyName, expression, opt_matchCase) {\n\n    super(tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n  }\n\n}\n\nexport default ComparisonBinary;\n"},"lineCount":null}},"error":null,"hash":"390baaa003b60da4438c2d3727f42abd","cacheData":{"env":{}}}